{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/._config.yml.un~","hash":"cd65954b92e143b0970c87a0727fae99ec0f377f","modified":1511332445230},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1511324882628},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1511324882629},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1511324882629},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1511324882633},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1511324882634},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1511324882634},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1511324882635},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1511324882635},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1511324882636},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1511324882636},{"_id":"themes/next/README.cn.md","hash":"419b60d064a4ac66565ddeec1be55802acf68c8b","modified":1511324882638},{"_id":"themes/next/README.md","hash":"631d68e9cbced2f11cd976bf883b7d8b08b9b365","modified":1511324882639},{"_id":"themes/next/_config.yml","hash":"c76ad93f14e57c2520c603ddc0cbd61064a9abd9","modified":1511332445225},{"_id":"themes/next/_config.yml~","hash":"c76ad93f14e57c2520c603ddc0cbd61064a9abd9","modified":1511331969791},{"_id":"themes/next/bower.json","hash":"47471a8f13528dc4052b746db5b4be2375682173","modified":1511324882641},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1511324882641},{"_id":"themes/next/package.json","hash":"39370e2aadf1f9a7c105edff064c6e47682b3932","modified":1511324882694},{"_id":"source/_posts/#install-openGL-in-ubuntu14-04.md#","hash":"34865f6e7d423448f7ce96c82f18d9fb071b227a","modified":1514098609749},{"_id":"source/_posts/.add-git-bash-to-right-click-menu.md.un~","hash":"5ebfdeaf6fd4098f711eca50fc5e1cd329838a8e","modified":1513738150258},{"_id":"source/_posts/.hexo-random-symbol.md.un~","hash":"81b24335d2ed7b9de18b5e0e9a45f7ad457b0df2","modified":1513738150258},{"_id":"source/_posts/.srr.txt.swp","hash":"e946eedba20eb89ecfce9b6e5ba3bfd54c3741d3","modified":1513738150258},{"_id":"source/_posts/My-First-Post.md","hash":"6fb2e316c00f37343c8cbb4c5c2432b3996c75cc","modified":1514098685849},{"_id":"source/_posts/a-little-light.md","hash":"dddb6d1d14459d6794aa560860b97a4037a29b14","modified":1514041237951},{"_id":"source/_posts/a-little-light.md~","hash":"fb6d60facdfc88649e0517c0dc6906daa3c66097","modified":1514002367231},{"_id":"source/_posts/add-git-bash-to-right-click-menu.md","hash":"e4a2dcea2ce7d3c8f109641f58fa7576684a0503","modified":1513738150258},{"_id":"source/_posts/d3d-preparation.md","hash":"1870cf7a72b1d802f218e21988e92c76f4e14d3f","modified":1513738150258},{"_id":"source/_posts/git-push-credential.md","hash":"02a52cbc4cf75ff95f5eb39256fb6e2fd87dcd1a","modified":1513928459407},{"_id":"source/_posts/git-push-credential.md~","hash":"756d640fdcc7064cea81a4afdea58a644d5f1c76","modified":1513928114815},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1513738150258},{"_id":"source/_posts/hexo-in-different-computers.md","hash":"7c9970e54b0eb1d6f82e64642c9869f102be00b8","modified":1513742650442},{"_id":"source/_posts/hexo-in-different-computers.md~","hash":"e67e173dd8f656fd3c87010e4f97db7e8ff55805","modified":1513742349070},{"_id":"source/_posts/hexo-random-symbol.md","hash":"544ec0c207f445626e0438dc701ee27e7d9a5f01","modified":1513738150258},{"_id":"source/_posts/how-to-learn-program.md","hash":"d90f9a9f297cc43cc6233055cdfa132cd8e8e1ae","modified":1514097792541},{"_id":"source/_posts/how-to-learn-program.md~","hash":"c712d97c834988c535139995d15f27721efbdf74","modified":1514093179837},{"_id":"source/_posts/install-openGL-in-ubuntu14-04.md","hash":"34865f6e7d423448f7ce96c82f18d9fb071b227a","modified":1513899997645},{"_id":"source/_posts/install-openGL-in-ubuntu14-04.md~","hash":"48ea23c44f0fec4a259c922c02dcf9f0a5bb368f","modified":1513899921045},{"_id":"source/_posts/markdown-delete-line.md","hash":"dd3fed7034a55981f65a9a31ce317c484578e7a2","modified":1513899357117},{"_id":"source/_posts/markdown-delete-line.md~","hash":"cee694628973f15b8b5111f2673bd1e05038e5e4","modified":1513898646218},{"_id":"source/categories/.index.md.un~","hash":"c9a1aa5741e503495f3a950318a3adf97f698937","modified":1513738150258},{"_id":"source/categories/index.md","hash":"d6e30bf321c09a9496629a1bbad873ba730d5ed3","modified":1513738150258},{"_id":"source/categories/index.md~","hash":"6c36b8e983b96a6764ac1763bde2c028da49d456","modified":1513738150258},{"_id":"source/tags/.index.md.un~","hash":"99c6043f396d0057c5f4be8b980db9d5958c29b3","modified":1513738150258},{"_id":"source/tags/index.md","hash":"5012cf70d44daae07a721e2fa4a5890294f68bcf","modified":1513738150258},{"_id":"source/tags/index.md~","hash":"c4378fd4354b18e8b3fb7899f3061d7ab36c9bd5","modified":1513738150258},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1511324882588},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1511324882594},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1511324866667},{"_id":"themes/next/.git/index","hash":"afe85437e371182bad90b2defc621afebaf30306","modified":1513735846043},{"_id":"themes/next/.git/packed-refs","hash":"f1fe33b8cdc221749eb26034a82b483cd86ef1b6","modified":1511324882582},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1511324882630},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b1ec000babd42bb7ffd26f5ad8aac9b5bec79ae5","modified":1511324882631},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1511324882632},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1511324882633},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1511324882642},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1511324882643},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1511324882643},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1511324882644},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1511324882644},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1511324882645},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1511324882646},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1511324882646},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1511324882647},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1511324882647},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1511324882648},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1511324882648},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1511324882649},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1511324882650},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1511324882650},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1511324882652},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1511324882691},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1511324882692},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1511324882692},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1511324882693},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1511324882693},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1511324882694},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1511324882694},{"_id":"themes/next/scripts/merge-configs.js","hash":"5758f8f3f12d17bc80da65bb808a20b3a8aae186","modified":1511324882695},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1511324882697},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1511324882933},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1511324882933},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1511324882934},{"_id":"source/_posts/.My-First-Post.md.un~","hash":"4ceee140a750b2d03ee74f0f24619933e67506b9","modified":1513738150258},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511324882768},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1511324866668},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1511324866669},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1511324866668},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1511324866669},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1511324866670},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1511324866671},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1511324866671},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1511324866671},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1511324866672},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1511324866672},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1511324866673},{"_id":"themes/next/.git/logs/HEAD","hash":"a2ad9e876538442423634576d508310f0c4dde3f","modified":1511324882591},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1511324882651},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1511324882651},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1511324882653},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1511324882653},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1511324882654},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1511324882655},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b9f9959225876fb56fb3fba96306d19396e704d4","modified":1511324882656},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1511324882656},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1511324882657},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1511324882658},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1511324882659},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1511324882661},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1511324882661},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1511324882661},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1511324882662},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1511324882667},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1511324882667},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1511324882671},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1511324882684},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1511324882684},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1511324882685},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1511324882685},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1511324882686},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1511324882686},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1511324882687},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1511324882698},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1511324882698},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1511324882699},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1511324882699},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1511324882701},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1511324882701},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1511324882702},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1511324882702},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1511324882703},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1511324882767},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1511324882769},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1511324882769},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1511324882770},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1511324882771},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1511324882772},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1511324882773},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1511324882773},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1511324882774},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1511324882775},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1511324882776},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1511324882776},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1511324882776},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511324882777},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1511324882777},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511324882778},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1511324882778},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1511324882779},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1511324882779},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511324882669},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511324882669},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511324882746},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511324882746},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511324882749},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511324882762},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511324882766},{"_id":"themes/next/.git/refs/heads/master","hash":"53814d46a4f19b2e026339024c8c1e2f179bdb6c","modified":1511324882590},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1511324882659},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1511324882660},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1511324882662},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1511324882663},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1511324882663},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1511324882664},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1511324882664},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1511324882665},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1511324882666},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1511324882668},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1511324882669},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1511324882670},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1511324882672},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1511324882672},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1511324882673},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1511324882673},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1511324882674},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1511324882674},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1511324882675},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1511324882675},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1511324882675},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1511324882676},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1511324882676},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1511324882677},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1511324882677},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1511324882678},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1511324882679},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1511324882679},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1511324882681},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1511324882681},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1511324882682},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1511324882682},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1511324882683},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1511324882683},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1511324882689},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1511324882689},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1511324882690},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1511324882691},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1511324882745},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1511324882746},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1511324882747},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1511324882749},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1511324882762},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1511324882762},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1511324882765},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1511324882766},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1511324882781},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1511324882781},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1511324882782},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1511324882783},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1511324882782},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1511324882784},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1511324882785},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1511324882785},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1511324882787},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1511324882787},{"_id":"themes/next/source/js/src/utils.js","hash":"b7ddc240208d57596a67c78a04a11b0f0bdecc97","modified":1511324882788},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1511324882803},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1511324882814},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1511324882815},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1511324882816},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1511324882817},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1511324882830},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1511324882830},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1511324882831},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1511324882832},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1511324882834},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1511324882835},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1511324882836},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1511324882837},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1511324882837},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1511324882880},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1511324882884},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1511324882884},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1511324882885},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1511324882886},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1511324882886},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1511324882887},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1511324882889},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1511324882889},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1511324882891},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1511324882891},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1511324882892},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1511324882893},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1511324882894},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1511324882894},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1511324882895},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1511324882895},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1511324882896},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1511324882896},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1511324882897},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1511324882897},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1511324882898},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1511324882899},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1511324882899},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1511324882901},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1511324882902},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1511324882904},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1511324882921},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1511324882921},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1511324882929},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1511324882931},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1511324882931},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1511324882883},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"a2ad9e876538442423634576d508310f0c4dde3f","modified":1511324882592},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1511324882586},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1511324882688},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1511324882688},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1511324882704},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1511324882704},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1511324882705},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1511324882705},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1511324882706},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1511324882714},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1511324882728},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1511324882740},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1511324882741},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1511324882742},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1511324882743},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1511324882744},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1511324882744},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1511324882744},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1511324882750},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1511324882751},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1511324882751},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1511324882752},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1511324882752},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1511324882753},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1511324882753},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1511324882754},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1511324882755},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1511324882756},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"a98ad885ee4f48d85b2578a0b9c2bbf166e96733","modified":1511324882757},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1511324882757},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1511324882758},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1511324882759},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1511324882759},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1511324882760},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1511324882760},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"30561ed60fc64f3e4ce85143bdb55faa814743a6","modified":1511324882761},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1511324882761},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1511324882786},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1511324882795},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1511324882800},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1511324882801},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1511324882817},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1511324882818},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1511324882819},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1511324882819},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1511324882820},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1511324882821},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1511324882826},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1511324882829},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1511324882828},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1511324882833},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1511324882834},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1511324882839},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1511324882840},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1511324882841},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1511324882920},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1511324882920},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1511324882799},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1511324882878},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1511324882880},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1511324882927},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"a2ad9e876538442423634576d508310f0c4dde3f","modified":1511324882586},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1511324882707},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1511324882707},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1511324882707},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1511324882708},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1511324882709},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1511324882709},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1511324882710},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1511324882710},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1511324882711},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1511324882712},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1511324882712},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1511324882713},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1511324882713},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1511324882714},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1511324882715},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1511324882716},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1511324882716},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1511324882717},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1511324882717},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1511324882718},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1511324882718},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1511324882719},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1511324882719},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1511324882720},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1511324882720},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1511324882720},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1511324882721},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1511324882721},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1511324882722},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1511324882722},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1511324882723},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1511324882723},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1511324882725},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1511324882725},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1511324882726},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1511324882726},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1511324882726},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1511324882727},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1511324882727},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1511324882728},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1511324882729},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1511324882729},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1511324882730},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1511324882731},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1511324882731},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1511324882732},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1511324882734},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1511324882734},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1511324882735},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1511324882735},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1511324882736},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1511324882737},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1511324882737},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1511324882737},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1511324882738},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1511324882738},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1511324882739},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1511324882739},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1511324882754},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1511324882755},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1511324882758},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1511324882791},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1511324882791},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1511324882792},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1511324882793},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1511324882794},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1511324882822},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1511324882822},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1511324882823},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1511324882824},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1511324882825},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1511324882825},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1511324882854},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1511324882876},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1511324882847},{"_id":"themes/next/.git/objects/pack/pack-28d87b026b5370a385755d143050e3ce0ce161e2.idx","hash":"db365f2626516321010a95981bdf898fb0c79a82","modified":1511324881939},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1511324882813},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1511324882918},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1511324882868},{"_id":"themes/next/.git/objects/pack/pack-28d87b026b5370a385755d143050e3ce0ce161e2.pack","hash":"bb95fb2e0a3eaefe07c90c71ef4e9be7ca80c5eb","modified":1511324882174}],"Category":[],"Data":[],"Page":[{"title":"categories","date":"2017-11-22T04:39:22.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-11-22 12:39:22\ntype: \"categories\"\n\n---\n","updated":"2017-12-20T02:49:10.258Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjbkfc4d30001m5drm5ylcnru","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-11-22T04:36:33.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-11-22 12:36:33\ntype: \"tags\"\n\n---\n","updated":"2017-12-20T02:49:10.258Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjbkfc4dd0003m5drw4nvnnmh","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Markdown语法整理(不定期更新)","date":"2017-11-21T05:31:03.000Z","_content":"\n\nIn this post, I will focus on use of Markdown and hexo push.\n \n> 1. title level\n> 2. insert a link\n> 3. highlight the code\n> 4. three lists of point\n> 5. insert a note\"[^code]\"\n> 6. bold fonts\n> 7. reference\n> 8. edit a formula\n> 9. draw a flow picture\n> * [补充](#补充)\n\nreference website: [Cmd Markdown reader](https://www.zybuluo.com/mdeditor#fn:latex)\n\n\n\n## 1. Title level\n\n### level 3-0\n#### level 4-0\n### level 3-1\n#### level 4-1\n#### level 4-2\n\n## 2. Insert a link.\n\n### [Tim's Blog](https://timtingwei.github.io/)\n### [Tim's Blog][2]\n\n## 3. Highlight the code\n```python\n@requires_authorization\nclass SomeClass:\n    pass\n\nif __name__ == '__main__':\n    # A comment\n    print 'hello world'\n```\n\n\n```cpp\n#include <iostream>\n\nclass Foo {\n public:\n  int f();\n};\n\nint main() {\n  // ...\n  return 0;\n}\n```\n\n\n\n## 4. three lists of point\n\n### Bulleted List\n> * first line\n> * second line\n> * third line\n\n### Numbered List\n> 1. first line\n> 2. second line\n> 3. third line\n\n### TODO list\n- [ ] first todo \n- [ ] second todo\n- [x] third todo -> Done\n\n## 5. insert a note[^code]\nLaTex formula support [LaTex][^LaTex]\nhigh light code [code][^code]\ninsert a web note [MathJax][1]\n\n## 6. bold fonts\n\n** bold fonts ** by adding two asteriskes *  as prefix and suffix respectively\n\n\n## 7. Reference \n\n> You can insert a reference by \">\",\nand input enter to create a new line,\nThis is the end line. Until the next symbol occur.\n\n## 8. edit a formula\n$$E=mc^2$$    use $$\n\n## 9.draw a flow picture\n\n```flow\nst=>start: Start\nop=>operation: Your Opreation\ncond=>condition: Yes or No?\ne=>end\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n[^LaTex]: support **LaTex** edit and display, such as: $\\sum_{i=1}^n a_i=0$, visit [MathJax][1] for more information.\n[^code]: include Java, Python, JavaScript etc.\n[1]: http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\n[2]: https://timtingwei.github.io/\n\n------\n\n# 补充\n\n> * [实现页面内跳转](#实现页面内跳转)\n\n20171224之后补充但未作整理。本来可以将每个语法分成多个博客离散列出，但后来出于对博客页面和知识索引的考虑，还是放在一个post内，也许将来会又变动，但是先不提前优化。\n\n## 实现页面内跳转\n\n`[create an anchor](#anchors-in-markdown)`\n\n\nrefwebsite:[Anchors in Markdown](https://gist.github.com/asabaylus/3071099)\n\n","source":"_posts/My-First-Post.md","raw":"---\ntitle: Markdown语法整理(不定期更新)\ndate: 2017-11-21 13:31:03\ntags: \"markdown\"\ncategories: \n\n---\n\n\nIn this post, I will focus on use of Markdown and hexo push.\n \n> 1. title level\n> 2. insert a link\n> 3. highlight the code\n> 4. three lists of point\n> 5. insert a note\"[^code]\"\n> 6. bold fonts\n> 7. reference\n> 8. edit a formula\n> 9. draw a flow picture\n> * [补充](#补充)\n\nreference website: [Cmd Markdown reader](https://www.zybuluo.com/mdeditor#fn:latex)\n\n\n\n## 1. Title level\n\n### level 3-0\n#### level 4-0\n### level 3-1\n#### level 4-1\n#### level 4-2\n\n## 2. Insert a link.\n\n### [Tim's Blog](https://timtingwei.github.io/)\n### [Tim's Blog][2]\n\n## 3. Highlight the code\n```python\n@requires_authorization\nclass SomeClass:\n    pass\n\nif __name__ == '__main__':\n    # A comment\n    print 'hello world'\n```\n\n\n```cpp\n#include <iostream>\n\nclass Foo {\n public:\n  int f();\n};\n\nint main() {\n  // ...\n  return 0;\n}\n```\n\n\n\n## 4. three lists of point\n\n### Bulleted List\n> * first line\n> * second line\n> * third line\n\n### Numbered List\n> 1. first line\n> 2. second line\n> 3. third line\n\n### TODO list\n- [ ] first todo \n- [ ] second todo\n- [x] third todo -> Done\n\n## 5. insert a note[^code]\nLaTex formula support [LaTex][^LaTex]\nhigh light code [code][^code]\ninsert a web note [MathJax][1]\n\n## 6. bold fonts\n\n** bold fonts ** by adding two asteriskes *  as prefix and suffix respectively\n\n\n## 7. Reference \n\n> You can insert a reference by \">\",\nand input enter to create a new line,\nThis is the end line. Until the next symbol occur.\n\n## 8. edit a formula\n$$E=mc^2$$    use $$\n\n## 9.draw a flow picture\n\n```flow\nst=>start: Start\nop=>operation: Your Opreation\ncond=>condition: Yes or No?\ne=>end\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n[^LaTex]: support **LaTex** edit and display, such as: $\\sum_{i=1}^n a_i=0$, visit [MathJax][1] for more information.\n[^code]: include Java, Python, JavaScript etc.\n[1]: http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\n[2]: https://timtingwei.github.io/\n\n------\n\n# 补充\n\n> * [实现页面内跳转](#实现页面内跳转)\n\n20171224之后补充但未作整理。本来可以将每个语法分成多个博客离散列出，但后来出于对博客页面和知识索引的考虑，还是放在一个post内，也许将来会又变动，但是先不提前优化。\n\n## 实现页面内跳转\n\n`[create an anchor](#anchors-in-markdown)`\n\n\nrefwebsite:[Anchors in Markdown](https://gist.github.com/asabaylus/3071099)\n\n","slug":"My-First-Post","published":1,"updated":"2017-12-24T06:58:05.849Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4cu0000m5dr9d32j9x0","content":"<p>In this post, I will focus on use of Markdown and hexo push.</p>\n<blockquote>\n<ol>\n<li>title level</li>\n<li>insert a link</li>\n<li>highlight the code</li>\n<li>three lists of point</li>\n<li>insert a note”[^code]”</li>\n<li>bold fonts</li>\n<li>reference</li>\n<li>edit a formula</li>\n<li>draw a flow picture</li>\n</ol>\n<ul>\n<li><a href=\"#补充\">补充</a></li>\n</ul>\n</blockquote>\n<p>reference website: <a href=\"https://www.zybuluo.com/mdeditor#fn:latex\" target=\"_blank\" rel=\"noopener\">Cmd Markdown reader</a></p>\n<h2 id=\"1-Title-level\"><a href=\"#1-Title-level\" class=\"headerlink\" title=\"1. Title level\"></a>1. Title level</h2><h3 id=\"level-3-0\"><a href=\"#level-3-0\" class=\"headerlink\" title=\"level 3-0\"></a>level 3-0</h3><h4 id=\"level-4-0\"><a href=\"#level-4-0\" class=\"headerlink\" title=\"level 4-0\"></a>level 4-0</h4><h3 id=\"level-3-1\"><a href=\"#level-3-1\" class=\"headerlink\" title=\"level 3-1\"></a>level 3-1</h3><h4 id=\"level-4-1\"><a href=\"#level-4-1\" class=\"headerlink\" title=\"level 4-1\"></a>level 4-1</h4><h4 id=\"level-4-2\"><a href=\"#level-4-2\" class=\"headerlink\" title=\"level 4-2\"></a>level 4-2</h4><h2 id=\"2-Insert-a-link\"><a href=\"#2-Insert-a-link\" class=\"headerlink\" title=\"2. Insert a link.\"></a>2. Insert a link.</h2><h3 id=\"Tim’s-Blog\"><a href=\"#Tim’s-Blog\" class=\"headerlink\" title=\"Tim’s Blog\"></a><a href=\"https://timtingwei.github.io/\">Tim’s Blog</a></h3><h3 id=\"Tim’s-Blog-1\"><a href=\"#Tim’s-Blog-1\" class=\"headerlink\" title=\"Tim’s Blog\"></a><a href=\"https://timtingwei.github.io/\">Tim’s Blog</a></h3><h2 id=\"3-Highlight-the-code\"><a href=\"#3-Highlight-the-code\" class=\"headerlink\" title=\"3. Highlight the code\"></a>3. Highlight the code</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@requires_authorization</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeClass</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    <span class=\"comment\"># A comment</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'hello world'</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> &#123;</span></span><br><span class=\"line\"> <span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">f</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-three-lists-of-point\"><a href=\"#4-three-lists-of-point\" class=\"headerlink\" title=\"4. three lists of point\"></a>4. three lists of point</h2><h3 id=\"Bulleted-List\"><a href=\"#Bulleted-List\" class=\"headerlink\" title=\"Bulleted List\"></a>Bulleted List</h3><blockquote>\n<ul>\n<li>first line</li>\n<li>second line</li>\n<li>third line</li>\n</ul>\n</blockquote>\n<h3 id=\"Numbered-List\"><a href=\"#Numbered-List\" class=\"headerlink\" title=\"Numbered List\"></a>Numbered List</h3><blockquote>\n<ol>\n<li>first line</li>\n<li>second line</li>\n<li>third line</li>\n</ol>\n</blockquote>\n<h3 id=\"TODO-list\"><a href=\"#TODO-list\" class=\"headerlink\" title=\"TODO list\"></a>TODO list</h3><ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> first todo </li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> second todo</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> third todo -&gt; Done</li>\n</ul>\n<h2 id=\"5-insert-a-note-code\"><a href=\"#5-insert-a-note-code\" class=\"headerlink\" title=\"5. insert a note[^code]\"></a>5. insert a note[^code]</h2><p>LaTex formula support [LaTex][^LaTex]<br>high light code [code][^code]<br>insert a web note <a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"noopener\">MathJax</a></p>\n<h2 id=\"6-bold-fonts\"><a href=\"#6-bold-fonts\" class=\"headerlink\" title=\"6. bold fonts\"></a>6. bold fonts</h2><p><strong> bold fonts </strong> by adding two asteriskes *  as prefix and suffix respectively</p>\n<h2 id=\"7-Reference\"><a href=\"#7-Reference\" class=\"headerlink\" title=\"7. Reference\"></a>7. Reference</h2><blockquote>\n<p>You can insert a reference by “&gt;”,<br>and input enter to create a new line,<br>This is the end line. Until the next symbol occur.</p>\n</blockquote>\n<h2 id=\"8-edit-a-formula\"><a href=\"#8-edit-a-formula\" class=\"headerlink\" title=\"8. edit a formula\"></a>8. edit a formula</h2><p>$$E=mc^2$$    use $$</p>\n<h2 id=\"9-draw-a-flow-picture\"><a href=\"#9-draw-a-flow-picture\" class=\"headerlink\" title=\"9.draw a flow picture\"></a>9.draw a flow picture</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: Start</span><br><span class=\"line\">op=&gt;operation: Your Opreation</span><br><span class=\"line\">cond=&gt;condition: Yes or No?</span><br><span class=\"line\">e=&gt;end</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>\n<p>[^LaTex]: support <strong>LaTex</strong> edit and display, such as: $\\sum_{i=1}^n a_i=0$, visit <a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"noopener\">MathJax</a> for more information.<br>[^code]: include Java, Python, JavaScript etc.</p>\n<hr>\n<h1 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h1><blockquote>\n<ul>\n<li><a href=\"#实现页面内跳转\">实现页面内跳转</a></li>\n</ul>\n</blockquote>\n<p>20171224之后补充但未作整理。本来可以将每个语法分成多个博客离散列出，但后来出于对博客页面和知识索引的考虑，还是放在一个post内，也许将来会又变动，但是先不提前优化。</p>\n<h2 id=\"实现页面内跳转\"><a href=\"#实现页面内跳转\" class=\"headerlink\" title=\"实现页面内跳转\"></a>实现页面内跳转</h2><p><code>[create an anchor](#anchors-in-markdown)</code></p>\n<p>refwebsite:<a href=\"https://gist.github.com/asabaylus/3071099\" target=\"_blank\" rel=\"noopener\">Anchors in Markdown</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>In this post, I will focus on use of Markdown and hexo push.</p>\n<blockquote>\n<ol>\n<li>title level</li>\n<li>insert a link</li>\n<li>highlight the code</li>\n<li>three lists of point</li>\n<li>insert a note”[^code]”</li>\n<li>bold fonts</li>\n<li>reference</li>\n<li>edit a formula</li>\n<li>draw a flow picture</li>\n</ol>\n<ul>\n<li><a href=\"#补充\">补充</a></li>\n</ul>\n</blockquote>\n<p>reference website: <a href=\"https://www.zybuluo.com/mdeditor#fn:latex\" target=\"_blank\" rel=\"noopener\">Cmd Markdown reader</a></p>\n<h2 id=\"1-Title-level\"><a href=\"#1-Title-level\" class=\"headerlink\" title=\"1. Title level\"></a>1. Title level</h2><h3 id=\"level-3-0\"><a href=\"#level-3-0\" class=\"headerlink\" title=\"level 3-0\"></a>level 3-0</h3><h4 id=\"level-4-0\"><a href=\"#level-4-0\" class=\"headerlink\" title=\"level 4-0\"></a>level 4-0</h4><h3 id=\"level-3-1\"><a href=\"#level-3-1\" class=\"headerlink\" title=\"level 3-1\"></a>level 3-1</h3><h4 id=\"level-4-1\"><a href=\"#level-4-1\" class=\"headerlink\" title=\"level 4-1\"></a>level 4-1</h4><h4 id=\"level-4-2\"><a href=\"#level-4-2\" class=\"headerlink\" title=\"level 4-2\"></a>level 4-2</h4><h2 id=\"2-Insert-a-link\"><a href=\"#2-Insert-a-link\" class=\"headerlink\" title=\"2. Insert a link.\"></a>2. Insert a link.</h2><h3 id=\"Tim’s-Blog\"><a href=\"#Tim’s-Blog\" class=\"headerlink\" title=\"Tim’s Blog\"></a><a href=\"https://timtingwei.github.io/\">Tim’s Blog</a></h3><h3 id=\"Tim’s-Blog-1\"><a href=\"#Tim’s-Blog-1\" class=\"headerlink\" title=\"Tim’s Blog\"></a><a href=\"https://timtingwei.github.io/\">Tim’s Blog</a></h3><h2 id=\"3-Highlight-the-code\"><a href=\"#3-Highlight-the-code\" class=\"headerlink\" title=\"3. Highlight the code\"></a>3. Highlight the code</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@requires_authorization</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeClass</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    <span class=\"comment\"># A comment</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'hello world'</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> &#123;</span></span><br><span class=\"line\"> <span class=\"keyword\">public</span>:</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">f</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-three-lists-of-point\"><a href=\"#4-three-lists-of-point\" class=\"headerlink\" title=\"4. three lists of point\"></a>4. three lists of point</h2><h3 id=\"Bulleted-List\"><a href=\"#Bulleted-List\" class=\"headerlink\" title=\"Bulleted List\"></a>Bulleted List</h3><blockquote>\n<ul>\n<li>first line</li>\n<li>second line</li>\n<li>third line</li>\n</ul>\n</blockquote>\n<h3 id=\"Numbered-List\"><a href=\"#Numbered-List\" class=\"headerlink\" title=\"Numbered List\"></a>Numbered List</h3><blockquote>\n<ol>\n<li>first line</li>\n<li>second line</li>\n<li>third line</li>\n</ol>\n</blockquote>\n<h3 id=\"TODO-list\"><a href=\"#TODO-list\" class=\"headerlink\" title=\"TODO list\"></a>TODO list</h3><ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> first todo </li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> second todo</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> third todo -&gt; Done</li>\n</ul>\n<h2 id=\"5-insert-a-note-code\"><a href=\"#5-insert-a-note-code\" class=\"headerlink\" title=\"5. insert a note[^code]\"></a>5. insert a note[^code]</h2><p>LaTex formula support [LaTex][^LaTex]<br>high light code [code][^code]<br>insert a web note <a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"noopener\">MathJax</a></p>\n<h2 id=\"6-bold-fonts\"><a href=\"#6-bold-fonts\" class=\"headerlink\" title=\"6. bold fonts\"></a>6. bold fonts</h2><p><strong> bold fonts </strong> by adding two asteriskes *  as prefix and suffix respectively</p>\n<h2 id=\"7-Reference\"><a href=\"#7-Reference\" class=\"headerlink\" title=\"7. Reference\"></a>7. Reference</h2><blockquote>\n<p>You can insert a reference by “&gt;”,<br>and input enter to create a new line,<br>This is the end line. Until the next symbol occur.</p>\n</blockquote>\n<h2 id=\"8-edit-a-formula\"><a href=\"#8-edit-a-formula\" class=\"headerlink\" title=\"8. edit a formula\"></a>8. edit a formula</h2><p>$$E=mc^2$$    use $$</p>\n<h2 id=\"9-draw-a-flow-picture\"><a href=\"#9-draw-a-flow-picture\" class=\"headerlink\" title=\"9.draw a flow picture\"></a>9.draw a flow picture</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: Start</span><br><span class=\"line\">op=&gt;operation: Your Opreation</span><br><span class=\"line\">cond=&gt;condition: Yes or No?</span><br><span class=\"line\">e=&gt;end</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>\n<p>[^LaTex]: support <strong>LaTex</strong> edit and display, such as: $\\sum_{i=1}^n a_i=0$, visit <a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"noopener\">MathJax</a> for more information.<br>[^code]: include Java, Python, JavaScript etc.</p>\n<hr>\n<h1 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h1><blockquote>\n<ul>\n<li><a href=\"#实现页面内跳转\">实现页面内跳转</a></li>\n</ul>\n</blockquote>\n<p>20171224之后补充但未作整理。本来可以将每个语法分成多个博客离散列出，但后来出于对博客页面和知识索引的考虑，还是放在一个post内，也许将来会又变动，但是先不提前优化。</p>\n<h2 id=\"实现页面内跳转\"><a href=\"#实现页面内跳转\" class=\"headerlink\" title=\"实现页面内跳转\"></a>实现页面内跳转</h2><p><code>[create an anchor](#anchors-in-markdown)</code></p>\n<p>refwebsite:<a href=\"https://gist.github.com/asabaylus/3071099\" target=\"_blank\" rel=\"noopener\">Anchors in Markdown</a></p>\n"},{"title":"冬至的一点光亮","date":"2017-12-22T15:30:00.000Z","_content":"\n今日冬至，晒太阳翻了翻<<鸟哥的Linux入门>>，通读了一遍，了解结构为后续学习挑出主次。中午找S交谈OpenGL相关问题，当然不止于此。有几点收获:\n1, 学习底层知识，少学习容易过时的知识。我引用Quora上得到的回答，对自己目前的状态做一个反思:\"Are you good at object-oriented programming? C? The Unix tools? Have you taken discrete math? A course in computer systems?\"\n2, 不轻易做一个计划，做一个计划不轻易放弃。我对什么事情都感兴趣，什么都想玩一玩，但是如果不把一项技术学精，虎头蛇尾，是一种空言壮志的表现。S举例了我从GH, Python, 计算几何, C++, Flask, OpenGL等计划, 当然我知道还有其他, 说明我容易循着一条轨迹向下寻溯。但时未兴，我无法准确判断计划的可靠性。\n3, 不把当下决定看得太重。对于那些无所事事的人，他们要减少对时间的浪费;对于我，浪费的时间反而有意义的。浪费与否，学习哪条方向, 都是一种经历。不能陷入到对未知的结果的忧虑当中去，要承认对未知的复杂性。\n4, 捡最近的镜子。满地镜子看花眼睛时候，找最近的镜子。对S来说，数字化的最近镜子是学生；他如此提醒我，想必是要说，我最近的镜子，应该是我的同学和S。但是什么是技术的最近的镜子呢？数据结构，图形，游戏。也许。\n\n冬至夜， 按照去年留下的习俗， 和朋友约一起煮火锅下水饺和汤圆。吃得也饱，聊得也欢快。\n\n其他人陆陆续续的去忙别的事情，只剩下X，H和我。话题的起因是老生常谈，女孩。我看上去是个优胜者，他们两个向我请教。给出了一些符合xu逻辑的方法,\n1, 列出关于学校集体活动的一个list;\n2, 将每个活动的具体形式考量一遍;\n3, 加入该活动的方式;\n4, 可能会出现的几个状况;\n5, 综合考量后排序挑选前5个活动参加。\n因为，前前后后也跟X讲了好多次，没有什么实际行动，我想，问题可能出在，我总是讲具体跟女孩的交流方式，其实这是因人而异的，刻意的追求结果未必是好。但作为前馈数据，需要的大概是接触到更多人的环境，让他自己在这个环境中摸爬。希望这大概能够好些。\n\n聊完这个，便聊第二个老生常谈，但并未透彻的话题，体制。重新思考话题展开的原因相对来说比较有意义，是探索一种启蒙的模型。这个话题能够展开，总得来讲，出于对当下以及未来的困惑，我尝试分开来讲几点原因，\n1, 计算机科学自下而上的思维模式，撼动原有的自上而下的体系。这其中差异，看上去是从技术角度出发，却渗透到经济，结构，体制，文化，人性等各个方面。\n2, 怀有对资社的不充分理解和想要探求的心理状态。\n3, 评论和试图解决遇到的问题，寻求一种生活的模型。\n\nX先提出了对该体制是否会倒塌的质疑，我觉得这个问题好回答，但也不好回答，确实凭借我的认知还无法解释清楚，能够解释清楚的人大多也都别有用心。我但是从我的数据库中索引出来一些，但凌晨四点睡去醒来后，又作了些思考。\n\n人一般走上畸路的过程分成几个阶段，先是犯错误，错误带来不良后果，判断他没救的依据是，依旧不改正错误，后果没得到解决。道理是相同的。\n\n错误性体现在，社会主义相对于资本主义的乌托邦本质。共产主义，当财富是大家共有的时候，谁来决定财富的分配？能够决定分配的人，势必会有权力。如果该掌权者是一个大公无私的，理性智慧的人，大家能够得到平等的分配。这看上去很对，能够实现。但却忽略了一个关键的事实，人性是有阴暗面的，是有私心的。这种私心若是顺其自然的发展，以共同利益为由，是能够孕育出灿烂果实的；有趣的是，但若想消除这种私心，这种私心就被放大了，因为看上去大家都不存在私心了，但消除别人私心的行为本身就是一种私心，说这是私心温和了些，应该说是恶，然而这种恶会被不断的累积和放大，因此，在最高位置上的伟大领袖，或许并非那么伟大。\n\n那么后果是什么？总体上讲是系统内耗造成的资源短缺。这种框架下，势必一切会向权力看。人们会为了生存而追求利益，而追求利益的竞争在这个情况下，又转变成了为追逐权力而努力竞争。值得一提的是，生存是第一要义。竞争是必要的，但除了竞争之外还有合作；利益是必要的，但除了利益之外还有共同利益；追逐地位是必要的，但地位的来源不是唯一的来自于权力和财富。\n\n这种追求利益的方式，产生了第一种后果，其实就是系统内耗。拿我熟悉的高等教育举例子，真正想做科研的教授，他势必不想将时间浪费在这一内耗上，但是不进行这种内耗他便得不到科研经费，科研没有开始就已经结束。然而，也许有人会说，教授你只要忍受一下，便可以开始真正的科研，但事实情况是这样:1, 一旦进行了一次这样的内耗，他会找你第二次; 2, 要记住，这是在进行权力的斗争，如果你做的研究是你的上一级无法控制的，他会对你起疑心；如果你的研究是上一级可以控制的，他会把你的研究为他所用作为自己权力斗争的筹码。也就是说，在这种机制的情况下，他是逆向淘汰的，有科研能力的人，被最终的边缘化。\n\n第二种后果便是，内耗之后，是对系统资源的严重浪费。这个问题在各行各业各个单位普遍都是存在，且按照中共逻辑来说是正常的。权力的斗争中，可不像我在计算机上写代码一样，他有很多区别，但仍然可以用计算机的角度来解释。\n\n1, 区别在于，建立一个模型，跑一跑数据资源，出错了；重新建立一个模型，再跑一跑。但现实世界中，没人会给我们这个机会。地下水就是地下水，矿产就是矿产，森林就是森林，不多不少就放在这里，终究竭尽。\n\n2, 用计算机的角度解释就是说， 上述所说的权力斗争，导致创新能力低下，经济对重工业的依赖性强，资源的消耗速度快。也就是，没有优秀的算法，数据结构选择又不合理，内存管理又不做，建立模型后，冗余运算大，结果是消耗了很多资源，却写了个破程序，还要把时间花在无止尽的debug上。之后也会相应解释。\n\n\n那么，错误是否被改正？这其实是个相对较伪命题，这个问题上我们翻过很多次跟斗，共党把他们最信任的，工人骗了，学生骗了，农民也骗了。只要认识到乌托邦的本质，就能够得出结论，他不无法被改正的。如果说要从计划经济走向市场经济，原因是有了权力之后就要用权力去换取财富。十年寒窗是为了什么？更何况12年苦读之后，换来的是更鲜艳的红旗。拿建筑学的建模软件来说，如果sketchUp开源底层代码了，那它还是sketchUp吗？还是叫sketchDown?\n\n后果是否得到解决呢？对应的，当我写错一个程序的时候，我可能会把他扔掉，甚至说从一开始我就应该谨慎设计一个程序，那样就不至于后面一大堆麻烦。 政府官员需要权力斗争的筹码，这些筹码要从白手套，也就是商人那里得到，企业发展势会消耗资源，在资本主义中这种消耗是良性的，因为商人为了自身利益出发，要考虑一种相对长远的发展，商人就会去选择新的技术，投资新的研发，考虑如何合理分配现有资源，因为他们的资本决定了他们的相对自由。然而，在天朝，权力斗争是激烈的，对筹码的欲望是贪婪的，商人是被迫无奈如妓女似的，环境？资源？这种考虑是可能只会是在某个失眠的夜晚发问内心，然而事实上却是不会存在的，而这种对内心的发问，又会用另外一种形式去完成对内心的救赎。只有这种发展不可持续，才会提出可持续发展观。同理，只有在素质低下的国家，才会提出乐于助人般的口号，提出共识，就先不展开了。\n\n天朝统治者和民众一起，在追求结果的平等的过程中，必然造成了过程的不平等，而统治者享受到了不平等的高点，低点留给民众享受。然而他们真的是在高点了吗？领袖足够了吗？常委们幸福吗？首富们的日子好过吗？共产主义马克思是cancer, 把白的黑的都卷入了这场漩涡中，无法脱身。但是cancer现在有医治手段了吗？上帝会像看着一个犯错的孩子一样看着我们，他终究还是宽容的吧，他会“给岁月以文明，而不是给文明以岁月”的吧，中华民族还要在时间中被消耗迭代，但他终归还是坚强的吧。即使，有的人选择在别人将他逼疯之前先逼疯了自己，但他们还是坚强无比的吧。\n\n\n我们很多人不承认，但事实上不得不承认：我们习惯于将现在当作是过去历史的结果，用历史去解释未来，但事实上，现在就是未来的原因。\n","source":"_posts/a-little-light.md","raw":"---\ntitle: 冬至的一点光亮\ndate: 2017-12-22 23:30:00\ntags: 随笔\n---\n\n今日冬至，晒太阳翻了翻<<鸟哥的Linux入门>>，通读了一遍，了解结构为后续学习挑出主次。中午找S交谈OpenGL相关问题，当然不止于此。有几点收获:\n1, 学习底层知识，少学习容易过时的知识。我引用Quora上得到的回答，对自己目前的状态做一个反思:\"Are you good at object-oriented programming? C? The Unix tools? Have you taken discrete math? A course in computer systems?\"\n2, 不轻易做一个计划，做一个计划不轻易放弃。我对什么事情都感兴趣，什么都想玩一玩，但是如果不把一项技术学精，虎头蛇尾，是一种空言壮志的表现。S举例了我从GH, Python, 计算几何, C++, Flask, OpenGL等计划, 当然我知道还有其他, 说明我容易循着一条轨迹向下寻溯。但时未兴，我无法准确判断计划的可靠性。\n3, 不把当下决定看得太重。对于那些无所事事的人，他们要减少对时间的浪费;对于我，浪费的时间反而有意义的。浪费与否，学习哪条方向, 都是一种经历。不能陷入到对未知的结果的忧虑当中去，要承认对未知的复杂性。\n4, 捡最近的镜子。满地镜子看花眼睛时候，找最近的镜子。对S来说，数字化的最近镜子是学生；他如此提醒我，想必是要说，我最近的镜子，应该是我的同学和S。但是什么是技术的最近的镜子呢？数据结构，图形，游戏。也许。\n\n冬至夜， 按照去年留下的习俗， 和朋友约一起煮火锅下水饺和汤圆。吃得也饱，聊得也欢快。\n\n其他人陆陆续续的去忙别的事情，只剩下X，H和我。话题的起因是老生常谈，女孩。我看上去是个优胜者，他们两个向我请教。给出了一些符合xu逻辑的方法,\n1, 列出关于学校集体活动的一个list;\n2, 将每个活动的具体形式考量一遍;\n3, 加入该活动的方式;\n4, 可能会出现的几个状况;\n5, 综合考量后排序挑选前5个活动参加。\n因为，前前后后也跟X讲了好多次，没有什么实际行动，我想，问题可能出在，我总是讲具体跟女孩的交流方式，其实这是因人而异的，刻意的追求结果未必是好。但作为前馈数据，需要的大概是接触到更多人的环境，让他自己在这个环境中摸爬。希望这大概能够好些。\n\n聊完这个，便聊第二个老生常谈，但并未透彻的话题，体制。重新思考话题展开的原因相对来说比较有意义，是探索一种启蒙的模型。这个话题能够展开，总得来讲，出于对当下以及未来的困惑，我尝试分开来讲几点原因，\n1, 计算机科学自下而上的思维模式，撼动原有的自上而下的体系。这其中差异，看上去是从技术角度出发，却渗透到经济，结构，体制，文化，人性等各个方面。\n2, 怀有对资社的不充分理解和想要探求的心理状态。\n3, 评论和试图解决遇到的问题，寻求一种生活的模型。\n\nX先提出了对该体制是否会倒塌的质疑，我觉得这个问题好回答，但也不好回答，确实凭借我的认知还无法解释清楚，能够解释清楚的人大多也都别有用心。我但是从我的数据库中索引出来一些，但凌晨四点睡去醒来后，又作了些思考。\n\n人一般走上畸路的过程分成几个阶段，先是犯错误，错误带来不良后果，判断他没救的依据是，依旧不改正错误，后果没得到解决。道理是相同的。\n\n错误性体现在，社会主义相对于资本主义的乌托邦本质。共产主义，当财富是大家共有的时候，谁来决定财富的分配？能够决定分配的人，势必会有权力。如果该掌权者是一个大公无私的，理性智慧的人，大家能够得到平等的分配。这看上去很对，能够实现。但却忽略了一个关键的事实，人性是有阴暗面的，是有私心的。这种私心若是顺其自然的发展，以共同利益为由，是能够孕育出灿烂果实的；有趣的是，但若想消除这种私心，这种私心就被放大了，因为看上去大家都不存在私心了，但消除别人私心的行为本身就是一种私心，说这是私心温和了些，应该说是恶，然而这种恶会被不断的累积和放大，因此，在最高位置上的伟大领袖，或许并非那么伟大。\n\n那么后果是什么？总体上讲是系统内耗造成的资源短缺。这种框架下，势必一切会向权力看。人们会为了生存而追求利益，而追求利益的竞争在这个情况下，又转变成了为追逐权力而努力竞争。值得一提的是，生存是第一要义。竞争是必要的，但除了竞争之外还有合作；利益是必要的，但除了利益之外还有共同利益；追逐地位是必要的，但地位的来源不是唯一的来自于权力和财富。\n\n这种追求利益的方式，产生了第一种后果，其实就是系统内耗。拿我熟悉的高等教育举例子，真正想做科研的教授，他势必不想将时间浪费在这一内耗上，但是不进行这种内耗他便得不到科研经费，科研没有开始就已经结束。然而，也许有人会说，教授你只要忍受一下，便可以开始真正的科研，但事实情况是这样:1, 一旦进行了一次这样的内耗，他会找你第二次; 2, 要记住，这是在进行权力的斗争，如果你做的研究是你的上一级无法控制的，他会对你起疑心；如果你的研究是上一级可以控制的，他会把你的研究为他所用作为自己权力斗争的筹码。也就是说，在这种机制的情况下，他是逆向淘汰的，有科研能力的人，被最终的边缘化。\n\n第二种后果便是，内耗之后，是对系统资源的严重浪费。这个问题在各行各业各个单位普遍都是存在，且按照中共逻辑来说是正常的。权力的斗争中，可不像我在计算机上写代码一样，他有很多区别，但仍然可以用计算机的角度来解释。\n\n1, 区别在于，建立一个模型，跑一跑数据资源，出错了；重新建立一个模型，再跑一跑。但现实世界中，没人会给我们这个机会。地下水就是地下水，矿产就是矿产，森林就是森林，不多不少就放在这里，终究竭尽。\n\n2, 用计算机的角度解释就是说， 上述所说的权力斗争，导致创新能力低下，经济对重工业的依赖性强，资源的消耗速度快。也就是，没有优秀的算法，数据结构选择又不合理，内存管理又不做，建立模型后，冗余运算大，结果是消耗了很多资源，却写了个破程序，还要把时间花在无止尽的debug上。之后也会相应解释。\n\n\n那么，错误是否被改正？这其实是个相对较伪命题，这个问题上我们翻过很多次跟斗，共党把他们最信任的，工人骗了，学生骗了，农民也骗了。只要认识到乌托邦的本质，就能够得出结论，他不无法被改正的。如果说要从计划经济走向市场经济，原因是有了权力之后就要用权力去换取财富。十年寒窗是为了什么？更何况12年苦读之后，换来的是更鲜艳的红旗。拿建筑学的建模软件来说，如果sketchUp开源底层代码了，那它还是sketchUp吗？还是叫sketchDown?\n\n后果是否得到解决呢？对应的，当我写错一个程序的时候，我可能会把他扔掉，甚至说从一开始我就应该谨慎设计一个程序，那样就不至于后面一大堆麻烦。 政府官员需要权力斗争的筹码，这些筹码要从白手套，也就是商人那里得到，企业发展势会消耗资源，在资本主义中这种消耗是良性的，因为商人为了自身利益出发，要考虑一种相对长远的发展，商人就会去选择新的技术，投资新的研发，考虑如何合理分配现有资源，因为他们的资本决定了他们的相对自由。然而，在天朝，权力斗争是激烈的，对筹码的欲望是贪婪的，商人是被迫无奈如妓女似的，环境？资源？这种考虑是可能只会是在某个失眠的夜晚发问内心，然而事实上却是不会存在的，而这种对内心的发问，又会用另外一种形式去完成对内心的救赎。只有这种发展不可持续，才会提出可持续发展观。同理，只有在素质低下的国家，才会提出乐于助人般的口号，提出共识，就先不展开了。\n\n天朝统治者和民众一起，在追求结果的平等的过程中，必然造成了过程的不平等，而统治者享受到了不平等的高点，低点留给民众享受。然而他们真的是在高点了吗？领袖足够了吗？常委们幸福吗？首富们的日子好过吗？共产主义马克思是cancer, 把白的黑的都卷入了这场漩涡中，无法脱身。但是cancer现在有医治手段了吗？上帝会像看着一个犯错的孩子一样看着我们，他终究还是宽容的吧，他会“给岁月以文明，而不是给文明以岁月”的吧，中华民族还要在时间中被消耗迭代，但他终归还是坚强的吧。即使，有的人选择在别人将他逼疯之前先逼疯了自己，但他们还是坚强无比的吧。\n\n\n我们很多人不承认，但事实上不得不承认：我们习惯于将现在当作是过去历史的结果，用历史去解释未来，但事实上，现在就是未来的原因。\n","slug":"a-little-light","published":1,"updated":"2017-12-23T15:00:37.951Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4d80002m5drrm5ag95p","content":"<p>今日冬至，晒太阳翻了翻&lt;&lt;鸟哥的Linux入门&gt;&gt;，通读了一遍，了解结构为后续学习挑出主次。中午找S交谈OpenGL相关问题，当然不止于此。有几点收获:<br>1, 学习底层知识，少学习容易过时的知识。我引用Quora上得到的回答，对自己目前的状态做一个反思:”Are you good at object-oriented programming? C? The Unix tools? Have you taken discrete math? A course in computer systems?”<br>2, 不轻易做一个计划，做一个计划不轻易放弃。我对什么事情都感兴趣，什么都想玩一玩，但是如果不把一项技术学精，虎头蛇尾，是一种空言壮志的表现。S举例了我从GH, Python, 计算几何, C++, Flask, OpenGL等计划, 当然我知道还有其他, 说明我容易循着一条轨迹向下寻溯。但时未兴，我无法准确判断计划的可靠性。<br>3, 不把当下决定看得太重。对于那些无所事事的人，他们要减少对时间的浪费;对于我，浪费的时间反而有意义的。浪费与否，学习哪条方向, 都是一种经历。不能陷入到对未知的结果的忧虑当中去，要承认对未知的复杂性。<br>4, 捡最近的镜子。满地镜子看花眼睛时候，找最近的镜子。对S来说，数字化的最近镜子是学生；他如此提醒我，想必是要说，我最近的镜子，应该是我的同学和S。但是什么是技术的最近的镜子呢？数据结构，图形，游戏。也许。</p>\n<p>冬至夜， 按照去年留下的习俗， 和朋友约一起煮火锅下水饺和汤圆。吃得也饱，聊得也欢快。</p>\n<p>其他人陆陆续续的去忙别的事情，只剩下X，H和我。话题的起因是老生常谈，女孩。我看上去是个优胜者，他们两个向我请教。给出了一些符合xu逻辑的方法,<br>1, 列出关于学校集体活动的一个list;<br>2, 将每个活动的具体形式考量一遍;<br>3, 加入该活动的方式;<br>4, 可能会出现的几个状况;<br>5, 综合考量后排序挑选前5个活动参加。<br>因为，前前后后也跟X讲了好多次，没有什么实际行动，我想，问题可能出在，我总是讲具体跟女孩的交流方式，其实这是因人而异的，刻意的追求结果未必是好。但作为前馈数据，需要的大概是接触到更多人的环境，让他自己在这个环境中摸爬。希望这大概能够好些。</p>\n<p>聊完这个，便聊第二个老生常谈，但并未透彻的话题，体制。重新思考话题展开的原因相对来说比较有意义，是探索一种启蒙的模型。这个话题能够展开，总得来讲，出于对当下以及未来的困惑，我尝试分开来讲几点原因，<br>1, 计算机科学自下而上的思维模式，撼动原有的自上而下的体系。这其中差异，看上去是从技术角度出发，却渗透到经济，结构，体制，文化，人性等各个方面。<br>2, 怀有对资社的不充分理解和想要探求的心理状态。<br>3, 评论和试图解决遇到的问题，寻求一种生活的模型。</p>\n<p>X先提出了对该体制是否会倒塌的质疑，我觉得这个问题好回答，但也不好回答，确实凭借我的认知还无法解释清楚，能够解释清楚的人大多也都别有用心。我但是从我的数据库中索引出来一些，但凌晨四点睡去醒来后，又作了些思考。</p>\n<p>人一般走上畸路的过程分成几个阶段，先是犯错误，错误带来不良后果，判断他没救的依据是，依旧不改正错误，后果没得到解决。道理是相同的。</p>\n<p>错误性体现在，社会主义相对于资本主义的乌托邦本质。共产主义，当财富是大家共有的时候，谁来决定财富的分配？能够决定分配的人，势必会有权力。如果该掌权者是一个大公无私的，理性智慧的人，大家能够得到平等的分配。这看上去很对，能够实现。但却忽略了一个关键的事实，人性是有阴暗面的，是有私心的。这种私心若是顺其自然的发展，以共同利益为由，是能够孕育出灿烂果实的；有趣的是，但若想消除这种私心，这种私心就被放大了，因为看上去大家都不存在私心了，但消除别人私心的行为本身就是一种私心，说这是私心温和了些，应该说是恶，然而这种恶会被不断的累积和放大，因此，在最高位置上的伟大领袖，或许并非那么伟大。</p>\n<p>那么后果是什么？总体上讲是系统内耗造成的资源短缺。这种框架下，势必一切会向权力看。人们会为了生存而追求利益，而追求利益的竞争在这个情况下，又转变成了为追逐权力而努力竞争。值得一提的是，生存是第一要义。竞争是必要的，但除了竞争之外还有合作；利益是必要的，但除了利益之外还有共同利益；追逐地位是必要的，但地位的来源不是唯一的来自于权力和财富。</p>\n<p>这种追求利益的方式，产生了第一种后果，其实就是系统内耗。拿我熟悉的高等教育举例子，真正想做科研的教授，他势必不想将时间浪费在这一内耗上，但是不进行这种内耗他便得不到科研经费，科研没有开始就已经结束。然而，也许有人会说，教授你只要忍受一下，便可以开始真正的科研，但事实情况是这样:1, 一旦进行了一次这样的内耗，他会找你第二次; 2, 要记住，这是在进行权力的斗争，如果你做的研究是你的上一级无法控制的，他会对你起疑心；如果你的研究是上一级可以控制的，他会把你的研究为他所用作为自己权力斗争的筹码。也就是说，在这种机制的情况下，他是逆向淘汰的，有科研能力的人，被最终的边缘化。</p>\n<p>第二种后果便是，内耗之后，是对系统资源的严重浪费。这个问题在各行各业各个单位普遍都是存在，且按照中共逻辑来说是正常的。权力的斗争中，可不像我在计算机上写代码一样，他有很多区别，但仍然可以用计算机的角度来解释。</p>\n<p>1, 区别在于，建立一个模型，跑一跑数据资源，出错了；重新建立一个模型，再跑一跑。但现实世界中，没人会给我们这个机会。地下水就是地下水，矿产就是矿产，森林就是森林，不多不少就放在这里，终究竭尽。</p>\n<p>2, 用计算机的角度解释就是说， 上述所说的权力斗争，导致创新能力低下，经济对重工业的依赖性强，资源的消耗速度快。也就是，没有优秀的算法，数据结构选择又不合理，内存管理又不做，建立模型后，冗余运算大，结果是消耗了很多资源，却写了个破程序，还要把时间花在无止尽的debug上。之后也会相应解释。</p>\n<p>那么，错误是否被改正？这其实是个相对较伪命题，这个问题上我们翻过很多次跟斗，共党把他们最信任的，工人骗了，学生骗了，农民也骗了。只要认识到乌托邦的本质，就能够得出结论，他不无法被改正的。如果说要从计划经济走向市场经济，原因是有了权力之后就要用权力去换取财富。十年寒窗是为了什么？更何况12年苦读之后，换来的是更鲜艳的红旗。拿建筑学的建模软件来说，如果sketchUp开源底层代码了，那它还是sketchUp吗？还是叫sketchDown?</p>\n<p>后果是否得到解决呢？对应的，当我写错一个程序的时候，我可能会把他扔掉，甚至说从一开始我就应该谨慎设计一个程序，那样就不至于后面一大堆麻烦。 政府官员需要权力斗争的筹码，这些筹码要从白手套，也就是商人那里得到，企业发展势会消耗资源，在资本主义中这种消耗是良性的，因为商人为了自身利益出发，要考虑一种相对长远的发展，商人就会去选择新的技术，投资新的研发，考虑如何合理分配现有资源，因为他们的资本决定了他们的相对自由。然而，在天朝，权力斗争是激烈的，对筹码的欲望是贪婪的，商人是被迫无奈如妓女似的，环境？资源？这种考虑是可能只会是在某个失眠的夜晚发问内心，然而事实上却是不会存在的，而这种对内心的发问，又会用另外一种形式去完成对内心的救赎。只有这种发展不可持续，才会提出可持续发展观。同理，只有在素质低下的国家，才会提出乐于助人般的口号，提出共识，就先不展开了。</p>\n<p>天朝统治者和民众一起，在追求结果的平等的过程中，必然造成了过程的不平等，而统治者享受到了不平等的高点，低点留给民众享受。然而他们真的是在高点了吗？领袖足够了吗？常委们幸福吗？首富们的日子好过吗？共产主义马克思是cancer, 把白的黑的都卷入了这场漩涡中，无法脱身。但是cancer现在有医治手段了吗？上帝会像看着一个犯错的孩子一样看着我们，他终究还是宽容的吧，他会“给岁月以文明，而不是给文明以岁月”的吧，中华民族还要在时间中被消耗迭代，但他终归还是坚强的吧。即使，有的人选择在别人将他逼疯之前先逼疯了自己，但他们还是坚强无比的吧。</p>\n<p>我们很多人不承认，但事实上不得不承认：我们习惯于将现在当作是过去历史的结果，用历史去解释未来，但事实上，现在就是未来的原因。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今日冬至，晒太阳翻了翻&lt;&lt;鸟哥的Linux入门&gt;&gt;，通读了一遍，了解结构为后续学习挑出主次。中午找S交谈OpenGL相关问题，当然不止于此。有几点收获:<br>1, 学习底层知识，少学习容易过时的知识。我引用Quora上得到的回答，对自己目前的状态做一个反思:”Are you good at object-oriented programming? C? The Unix tools? Have you taken discrete math? A course in computer systems?”<br>2, 不轻易做一个计划，做一个计划不轻易放弃。我对什么事情都感兴趣，什么都想玩一玩，但是如果不把一项技术学精，虎头蛇尾，是一种空言壮志的表现。S举例了我从GH, Python, 计算几何, C++, Flask, OpenGL等计划, 当然我知道还有其他, 说明我容易循着一条轨迹向下寻溯。但时未兴，我无法准确判断计划的可靠性。<br>3, 不把当下决定看得太重。对于那些无所事事的人，他们要减少对时间的浪费;对于我，浪费的时间反而有意义的。浪费与否，学习哪条方向, 都是一种经历。不能陷入到对未知的结果的忧虑当中去，要承认对未知的复杂性。<br>4, 捡最近的镜子。满地镜子看花眼睛时候，找最近的镜子。对S来说，数字化的最近镜子是学生；他如此提醒我，想必是要说，我最近的镜子，应该是我的同学和S。但是什么是技术的最近的镜子呢？数据结构，图形，游戏。也许。</p>\n<p>冬至夜， 按照去年留下的习俗， 和朋友约一起煮火锅下水饺和汤圆。吃得也饱，聊得也欢快。</p>\n<p>其他人陆陆续续的去忙别的事情，只剩下X，H和我。话题的起因是老生常谈，女孩。我看上去是个优胜者，他们两个向我请教。给出了一些符合xu逻辑的方法,<br>1, 列出关于学校集体活动的一个list;<br>2, 将每个活动的具体形式考量一遍;<br>3, 加入该活动的方式;<br>4, 可能会出现的几个状况;<br>5, 综合考量后排序挑选前5个活动参加。<br>因为，前前后后也跟X讲了好多次，没有什么实际行动，我想，问题可能出在，我总是讲具体跟女孩的交流方式，其实这是因人而异的，刻意的追求结果未必是好。但作为前馈数据，需要的大概是接触到更多人的环境，让他自己在这个环境中摸爬。希望这大概能够好些。</p>\n<p>聊完这个，便聊第二个老生常谈，但并未透彻的话题，体制。重新思考话题展开的原因相对来说比较有意义，是探索一种启蒙的模型。这个话题能够展开，总得来讲，出于对当下以及未来的困惑，我尝试分开来讲几点原因，<br>1, 计算机科学自下而上的思维模式，撼动原有的自上而下的体系。这其中差异，看上去是从技术角度出发，却渗透到经济，结构，体制，文化，人性等各个方面。<br>2, 怀有对资社的不充分理解和想要探求的心理状态。<br>3, 评论和试图解决遇到的问题，寻求一种生活的模型。</p>\n<p>X先提出了对该体制是否会倒塌的质疑，我觉得这个问题好回答，但也不好回答，确实凭借我的认知还无法解释清楚，能够解释清楚的人大多也都别有用心。我但是从我的数据库中索引出来一些，但凌晨四点睡去醒来后，又作了些思考。</p>\n<p>人一般走上畸路的过程分成几个阶段，先是犯错误，错误带来不良后果，判断他没救的依据是，依旧不改正错误，后果没得到解决。道理是相同的。</p>\n<p>错误性体现在，社会主义相对于资本主义的乌托邦本质。共产主义，当财富是大家共有的时候，谁来决定财富的分配？能够决定分配的人，势必会有权力。如果该掌权者是一个大公无私的，理性智慧的人，大家能够得到平等的分配。这看上去很对，能够实现。但却忽略了一个关键的事实，人性是有阴暗面的，是有私心的。这种私心若是顺其自然的发展，以共同利益为由，是能够孕育出灿烂果实的；有趣的是，但若想消除这种私心，这种私心就被放大了，因为看上去大家都不存在私心了，但消除别人私心的行为本身就是一种私心，说这是私心温和了些，应该说是恶，然而这种恶会被不断的累积和放大，因此，在最高位置上的伟大领袖，或许并非那么伟大。</p>\n<p>那么后果是什么？总体上讲是系统内耗造成的资源短缺。这种框架下，势必一切会向权力看。人们会为了生存而追求利益，而追求利益的竞争在这个情况下，又转变成了为追逐权力而努力竞争。值得一提的是，生存是第一要义。竞争是必要的，但除了竞争之外还有合作；利益是必要的，但除了利益之外还有共同利益；追逐地位是必要的，但地位的来源不是唯一的来自于权力和财富。</p>\n<p>这种追求利益的方式，产生了第一种后果，其实就是系统内耗。拿我熟悉的高等教育举例子，真正想做科研的教授，他势必不想将时间浪费在这一内耗上，但是不进行这种内耗他便得不到科研经费，科研没有开始就已经结束。然而，也许有人会说，教授你只要忍受一下，便可以开始真正的科研，但事实情况是这样:1, 一旦进行了一次这样的内耗，他会找你第二次; 2, 要记住，这是在进行权力的斗争，如果你做的研究是你的上一级无法控制的，他会对你起疑心；如果你的研究是上一级可以控制的，他会把你的研究为他所用作为自己权力斗争的筹码。也就是说，在这种机制的情况下，他是逆向淘汰的，有科研能力的人，被最终的边缘化。</p>\n<p>第二种后果便是，内耗之后，是对系统资源的严重浪费。这个问题在各行各业各个单位普遍都是存在，且按照中共逻辑来说是正常的。权力的斗争中，可不像我在计算机上写代码一样，他有很多区别，但仍然可以用计算机的角度来解释。</p>\n<p>1, 区别在于，建立一个模型，跑一跑数据资源，出错了；重新建立一个模型，再跑一跑。但现实世界中，没人会给我们这个机会。地下水就是地下水，矿产就是矿产，森林就是森林，不多不少就放在这里，终究竭尽。</p>\n<p>2, 用计算机的角度解释就是说， 上述所说的权力斗争，导致创新能力低下，经济对重工业的依赖性强，资源的消耗速度快。也就是，没有优秀的算法，数据结构选择又不合理，内存管理又不做，建立模型后，冗余运算大，结果是消耗了很多资源，却写了个破程序，还要把时间花在无止尽的debug上。之后也会相应解释。</p>\n<p>那么，错误是否被改正？这其实是个相对较伪命题，这个问题上我们翻过很多次跟斗，共党把他们最信任的，工人骗了，学生骗了，农民也骗了。只要认识到乌托邦的本质，就能够得出结论，他不无法被改正的。如果说要从计划经济走向市场经济，原因是有了权力之后就要用权力去换取财富。十年寒窗是为了什么？更何况12年苦读之后，换来的是更鲜艳的红旗。拿建筑学的建模软件来说，如果sketchUp开源底层代码了，那它还是sketchUp吗？还是叫sketchDown?</p>\n<p>后果是否得到解决呢？对应的，当我写错一个程序的时候，我可能会把他扔掉，甚至说从一开始我就应该谨慎设计一个程序，那样就不至于后面一大堆麻烦。 政府官员需要权力斗争的筹码，这些筹码要从白手套，也就是商人那里得到，企业发展势会消耗资源，在资本主义中这种消耗是良性的，因为商人为了自身利益出发，要考虑一种相对长远的发展，商人就会去选择新的技术，投资新的研发，考虑如何合理分配现有资源，因为他们的资本决定了他们的相对自由。然而，在天朝，权力斗争是激烈的，对筹码的欲望是贪婪的，商人是被迫无奈如妓女似的，环境？资源？这种考虑是可能只会是在某个失眠的夜晚发问内心，然而事实上却是不会存在的，而这种对内心的发问，又会用另外一种形式去完成对内心的救赎。只有这种发展不可持续，才会提出可持续发展观。同理，只有在素质低下的国家，才会提出乐于助人般的口号，提出共识，就先不展开了。</p>\n<p>天朝统治者和民众一起，在追求结果的平等的过程中，必然造成了过程的不平等，而统治者享受到了不平等的高点，低点留给民众享受。然而他们真的是在高点了吗？领袖足够了吗？常委们幸福吗？首富们的日子好过吗？共产主义马克思是cancer, 把白的黑的都卷入了这场漩涡中，无法脱身。但是cancer现在有医治手段了吗？上帝会像看着一个犯错的孩子一样看着我们，他终究还是宽容的吧，他会“给岁月以文明，而不是给文明以岁月”的吧，中华民族还要在时间中被消耗迭代，但他终归还是坚强的吧。即使，有的人选择在别人将他逼疯之前先逼疯了自己，但他们还是坚强无比的吧。</p>\n<p>我们很多人不承认，但事实上不得不承认：我们习惯于将现在当作是过去历史的结果，用历史去解释未来，但事实上，现在就是未来的原因。</p>\n"},{"title":"添加git bash到右键菜单","date":"2017-11-23T03:52:34.000Z","_content":"\n## issue:\n\n因为.git文件所在的目录如下：\n> C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\d3d\n\n当在bash中cd到该目录时：\n```\n$ cd C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\d3d\nbash: syntax error near unexpected token `('\n```\n试图通过右键进入bash\n\n## hack:\n\n> 1. CMD中输入\"regedit\"\n> 2. 切换到 HKEY_CURRENT_USER\\SOFTWARE\\Classes\\Directory\\Background\\shell\n> 3. 右键点击 \"shell\" 选择 New > Key. 将KEY命名为 \"Bash\"\n> 4. 设置值为 \"open in Bash\" \n> 5. 创建一个新的KEY命名为\"command\". 设置值为git-bash.exe 路径.\n\n此时在文件夹中右键, 出现Open in bash选项.\n\n以上为通过注册表添加bash到右键的方法，但还是建议重装git\n\n------\n\nreference:\n[1]: https://www.zhihu.com/question/48091139 @轩辕Rowboat的回答\n","source":"_posts/add-git-bash-to-right-click-menu.md","raw":"---\ntitle: 添加git bash到右键菜单 \ndate: 2017-11-23 11:52:34\ntags:\n- git\n---\n\n## issue:\n\n因为.git文件所在的目录如下：\n> C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\d3d\n\n当在bash中cd到该目录时：\n```\n$ cd C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\d3d\nbash: syntax error near unexpected token `('\n```\n试图通过右键进入bash\n\n## hack:\n\n> 1. CMD中输入\"regedit\"\n> 2. 切换到 HKEY_CURRENT_USER\\SOFTWARE\\Classes\\Directory\\Background\\shell\n> 3. 右键点击 \"shell\" 选择 New > Key. 将KEY命名为 \"Bash\"\n> 4. 设置值为 \"open in Bash\" \n> 5. 创建一个新的KEY命名为\"command\". 设置值为git-bash.exe 路径.\n\n此时在文件夹中右键, 出现Open in bash选项.\n\n以上为通过注册表添加bash到右键的方法，但还是建议重装git\n\n------\n\nreference:\n[1]: https://www.zhihu.com/question/48091139 @轩辕Rowboat的回答\n","slug":"add-git-bash-to-right-click-menu","published":1,"updated":"2017-12-20T02:49:10.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4dk0005m5drhaz8x3mk","content":"<h2 id=\"issue\"><a href=\"#issue\" class=\"headerlink\" title=\"issue:\"></a>issue:</h2><p>因为.git文件所在的目录如下：</p>\n<blockquote>\n<p>C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\d3d</p>\n</blockquote>\n<p>当在bash中cd到该目录时：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\d3d</span><br><span class=\"line\">bash: syntax error near unexpected token `(&apos;</span><br></pre></td></tr></table></figure></p>\n<p>试图通过右键进入bash</p>\n<h2 id=\"hack\"><a href=\"#hack\" class=\"headerlink\" title=\"hack:\"></a>hack:</h2><blockquote>\n<ol>\n<li>CMD中输入”regedit”</li>\n<li>切换到 HKEY_CURRENT_USER\\SOFTWARE\\Classes\\Directory\\Background\\shell</li>\n<li>右键点击 “shell” 选择 New &gt; Key. 将KEY命名为 “Bash”</li>\n<li>设置值为 “open in Bash” </li>\n<li>创建一个新的KEY命名为”command”. 设置值为git-bash.exe 路径.</li>\n</ol>\n</blockquote>\n<p>此时在文件夹中右键, 出现Open in bash选项.</p>\n<p>以上为通过注册表添加bash到右键的方法，但还是建议重装git</p>\n<hr>\n<p>reference:<br>[1]: <a href=\"https://www.zhihu.com/question/48091139\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/48091139</a> @轩辕Rowboat的回答</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"issue\"><a href=\"#issue\" class=\"headerlink\" title=\"issue:\"></a>issue:</h2><p>因为.git文件所在的目录如下：</p>\n<blockquote>\n<p>C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\d3d</p>\n</blockquote>\n<p>当在bash中cd到该目录时：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\d3d</span><br><span class=\"line\">bash: syntax error near unexpected token `(&apos;</span><br></pre></td></tr></table></figure></p>\n<p>试图通过右键进入bash</p>\n<h2 id=\"hack\"><a href=\"#hack\" class=\"headerlink\" title=\"hack:\"></a>hack:</h2><blockquote>\n<ol>\n<li>CMD中输入”regedit”</li>\n<li>切换到 HKEY_CURRENT_USER\\SOFTWARE\\Classes\\Directory\\Background\\shell</li>\n<li>右键点击 “shell” 选择 New &gt; Key. 将KEY命名为 “Bash”</li>\n<li>设置值为 “open in Bash” </li>\n<li>创建一个新的KEY命名为”command”. 设置值为git-bash.exe 路径.</li>\n</ol>\n</blockquote>\n<p>此时在文件夹中右键, 出现Open in bash选项.</p>\n<p>以上为通过注册表添加bash到右键的方法，但还是建议重装git</p>\n<hr>\n<p>reference:<br>[1]: <a href=\"https://www.zhihu.com/question/48091139\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/48091139</a> @轩辕Rowboat的回答</p>\n"},{"title":"Git Push免密码设置","date":"2017-12-22T00:02:48.000Z","_content":"\n## **使用.git-credentials保存验证**\n\n```sh\n$ cd\n$ touch .git-credentials\n$ emacs .git-credentials\nhttps://{timting***}:{********}@github.com\n```\n\n```sh\n$ cd ~/.emacs.d/\n$ git push -u origin master\nUsername for 'https://github.com':   C-c C-c\n```\n\n**去掉{}**\n\n```sh\n$ emacs ~/.git-credentials\nhttps://timting***:********@github.com\n$ git config --global credential.helper store\n\n$ cd\n$ cat ~/.gitconfig\n[user]\n\temail = timtingwei@hotmail.com\n\tname = timtingwei\n[credential]\n\thelper = store\n```\n\n现在push不再需要验证。\n\n**但我不希望用文件保存我的密码**\n\n```sh\n$ ls -ld .git-credentials\n-rw------- 1 tim tim 42 12月 22 15:00 .git-credentials\ntim@htwt:~$ sudo chmod 200 .git-credentials\n[sudo] password for tim: \ntim@htwt:~$ ls -ld .git-credentials\n--w------- 1 tim tim 42 12月 22 15:00 .git-credentials\ntim@htwt:~$ git config --global credential.helper store\n```\n\n重启bash\n\n```sh\ntim@htwt:~/.emacs.d$ git push origin master\nfatal: unable to open /home/tim/.git-credentials: Permission denied\n```\n\n=> 修改权限的方法没用, 别人看不到, git也看不到。\n\n======\n\n## **安全性存疑，因此改用设置cache**\n```sh\n$ rm ~/.git-credentials\n```\n通过设置git的cache的话可以让它记住密码之后自己设置一个cache有效时间 这样也一定程度保证了一些安全性。\n\n```sh\n$ git config --global credential.helper cache\n\\# Set git to use the credential memory cache\n```\n\n```sh\n$ git config --global credential.helper 'cache --timeout=3600'\n\\# Set the cache to timeout after 1 hour (setting is in seconds)\n```\n======\n\nrefwebsite:\n[1], https://www.zhihu.com/question/31836445\n[2], http://www.jianshu.com/p/f54053afecf2\n[3], https://help.github.com/articles/caching-your-github-password-in-git/\n","source":"_posts/git-push-credential.md","raw":"---\ntitle: Git Push免密码设置\ndate: 2017-12-22 08:02:48\ntags: git\n---\n\n## **使用.git-credentials保存验证**\n\n```sh\n$ cd\n$ touch .git-credentials\n$ emacs .git-credentials\nhttps://{timting***}:{********}@github.com\n```\n\n```sh\n$ cd ~/.emacs.d/\n$ git push -u origin master\nUsername for 'https://github.com':   C-c C-c\n```\n\n**去掉{}**\n\n```sh\n$ emacs ~/.git-credentials\nhttps://timting***:********@github.com\n$ git config --global credential.helper store\n\n$ cd\n$ cat ~/.gitconfig\n[user]\n\temail = timtingwei@hotmail.com\n\tname = timtingwei\n[credential]\n\thelper = store\n```\n\n现在push不再需要验证。\n\n**但我不希望用文件保存我的密码**\n\n```sh\n$ ls -ld .git-credentials\n-rw------- 1 tim tim 42 12月 22 15:00 .git-credentials\ntim@htwt:~$ sudo chmod 200 .git-credentials\n[sudo] password for tim: \ntim@htwt:~$ ls -ld .git-credentials\n--w------- 1 tim tim 42 12月 22 15:00 .git-credentials\ntim@htwt:~$ git config --global credential.helper store\n```\n\n重启bash\n\n```sh\ntim@htwt:~/.emacs.d$ git push origin master\nfatal: unable to open /home/tim/.git-credentials: Permission denied\n```\n\n=> 修改权限的方法没用, 别人看不到, git也看不到。\n\n======\n\n## **安全性存疑，因此改用设置cache**\n```sh\n$ rm ~/.git-credentials\n```\n通过设置git的cache的话可以让它记住密码之后自己设置一个cache有效时间 这样也一定程度保证了一些安全性。\n\n```sh\n$ git config --global credential.helper cache\n\\# Set git to use the credential memory cache\n```\n\n```sh\n$ git config --global credential.helper 'cache --timeout=3600'\n\\# Set the cache to timeout after 1 hour (setting is in seconds)\n```\n======\n\nrefwebsite:\n[1], https://www.zhihu.com/question/31836445\n[2], http://www.jianshu.com/p/f54053afecf2\n[3], https://help.github.com/articles/caching-your-github-password-in-git/\n","slug":"git-push-credential","published":1,"updated":"2017-12-22T07:40:59.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4do0006m5dr2ixn8i35","content":"<h2 id=\"使用-git-credentials保存验证\"><a href=\"#使用-git-credentials保存验证\" class=\"headerlink\" title=\"使用.git-credentials保存验证\"></a><strong>使用.git-credentials保存验证</strong></h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span></span><br><span class=\"line\">$ touch .git-credentials</span><br><span class=\"line\">$ emacs .git-credentials</span><br><span class=\"line\">https://&#123;timting***&#125;:&#123;********&#125;@github.com</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.emacs.d/</span><br><span class=\"line\">$ git push -u origin master</span><br><span class=\"line\">Username <span class=\"keyword\">for</span> <span class=\"string\">'https://github.com'</span>:   C-c C-c</span><br></pre></td></tr></table></figure>\n<p><strong>去掉{}</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ emacs ~/.git-credentials</span><br><span class=\"line\">https://timting***:********@github.com</span><br><span class=\"line\">$ git config --global credential.helper store</span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span></span><br><span class=\"line\">$ cat ~/.gitconfig</span><br><span class=\"line\">[user]</span><br><span class=\"line\">\temail = timtingwei@hotmail.com</span><br><span class=\"line\">\tname = timtingwei</span><br><span class=\"line\">[credential]</span><br><span class=\"line\">\thelper = store</span><br></pre></td></tr></table></figure>\n<p>现在push不再需要验证。</p>\n<p><strong>但我不希望用文件保存我的密码</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls -ld .git-credentials</span><br><span class=\"line\">-rw------- 1 tim tim 42 12月 22 15:00 .git-credentials</span><br><span class=\"line\">tim@htwt:~$ sudo chmod 200 .git-credentials</span><br><span class=\"line\">[sudo] password <span class=\"keyword\">for</span> tim: </span><br><span class=\"line\">tim@htwt:~$ ls -ld .git-credentials</span><br><span class=\"line\">--w------- 1 tim tim 42 12月 22 15:00 .git-credentials</span><br><span class=\"line\">tim@htwt:~$ git config --global credential.helper store</span><br></pre></td></tr></table></figure>\n<p>重启bash</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tim@htwt:~/.emacs.d$ git push origin master</span><br><span class=\"line\">fatal: unable to open /home/tim/.git-credentials: Permission denied</span><br></pre></td></tr></table></figure>\n<p>=&gt; 修改权限的方法没用, 别人看不到, git也看不到。</p>\n<p>======</p>\n<h2 id=\"安全性存疑，因此改用设置cache\"><a href=\"#安全性存疑，因此改用设置cache\" class=\"headerlink\" title=\"安全性存疑，因此改用设置cache\"></a><strong>安全性存疑，因此改用设置cache</strong></h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm ~/.git-credentials</span><br></pre></td></tr></table></figure>\n<p>通过设置git的cache的话可以让它记住密码之后自己设置一个cache有效时间 这样也一定程度保证了一些安全性。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global credential.helper cache</span><br><span class=\"line\">\\<span class=\"comment\"># Set git to use the credential memory cache</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global credential.helper <span class=\"string\">'cache --timeout=3600'</span></span><br><span class=\"line\">\\<span class=\"comment\"># Set the cache to timeout after 1 hour (setting is in seconds)</span></span><br></pre></td></tr></table></figure>\n<p>======</p>\n<p>refwebsite:<br>[1], <a href=\"https://www.zhihu.com/question/31836445\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/31836445</a><br>[2], <a href=\"http://www.jianshu.com/p/f54053afecf2\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/f54053afecf2</a><br>[3], <a href=\"https://help.github.com/articles/caching-your-github-password-in-git/\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/caching-your-github-password-in-git/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用-git-credentials保存验证\"><a href=\"#使用-git-credentials保存验证\" class=\"headerlink\" title=\"使用.git-credentials保存验证\"></a><strong>使用.git-credentials保存验证</strong></h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span></span><br><span class=\"line\">$ touch .git-credentials</span><br><span class=\"line\">$ emacs .git-credentials</span><br><span class=\"line\">https://&#123;timting***&#125;:&#123;********&#125;@github.com</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.emacs.d/</span><br><span class=\"line\">$ git push -u origin master</span><br><span class=\"line\">Username <span class=\"keyword\">for</span> <span class=\"string\">'https://github.com'</span>:   C-c C-c</span><br></pre></td></tr></table></figure>\n<p><strong>去掉{}</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ emacs ~/.git-credentials</span><br><span class=\"line\">https://timting***:********@github.com</span><br><span class=\"line\">$ git config --global credential.helper store</span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span></span><br><span class=\"line\">$ cat ~/.gitconfig</span><br><span class=\"line\">[user]</span><br><span class=\"line\">\temail = timtingwei@hotmail.com</span><br><span class=\"line\">\tname = timtingwei</span><br><span class=\"line\">[credential]</span><br><span class=\"line\">\thelper = store</span><br></pre></td></tr></table></figure>\n<p>现在push不再需要验证。</p>\n<p><strong>但我不希望用文件保存我的密码</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls -ld .git-credentials</span><br><span class=\"line\">-rw------- 1 tim tim 42 12月 22 15:00 .git-credentials</span><br><span class=\"line\">tim@htwt:~$ sudo chmod 200 .git-credentials</span><br><span class=\"line\">[sudo] password <span class=\"keyword\">for</span> tim: </span><br><span class=\"line\">tim@htwt:~$ ls -ld .git-credentials</span><br><span class=\"line\">--w------- 1 tim tim 42 12月 22 15:00 .git-credentials</span><br><span class=\"line\">tim@htwt:~$ git config --global credential.helper store</span><br></pre></td></tr></table></figure>\n<p>重启bash</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tim@htwt:~/.emacs.d$ git push origin master</span><br><span class=\"line\">fatal: unable to open /home/tim/.git-credentials: Permission denied</span><br></pre></td></tr></table></figure>\n<p>=&gt; 修改权限的方法没用, 别人看不到, git也看不到。</p>\n<p>======</p>\n<h2 id=\"安全性存疑，因此改用设置cache\"><a href=\"#安全性存疑，因此改用设置cache\" class=\"headerlink\" title=\"安全性存疑，因此改用设置cache\"></a><strong>安全性存疑，因此改用设置cache</strong></h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm ~/.git-credentials</span><br></pre></td></tr></table></figure>\n<p>通过设置git的cache的话可以让它记住密码之后自己设置一个cache有效时间 这样也一定程度保证了一些安全性。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global credential.helper cache</span><br><span class=\"line\">\\<span class=\"comment\"># Set git to use the credential memory cache</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global credential.helper <span class=\"string\">'cache --timeout=3600'</span></span><br><span class=\"line\">\\<span class=\"comment\"># Set the cache to timeout after 1 hour (setting is in seconds)</span></span><br></pre></td></tr></table></figure>\n<p>======</p>\n<p>refwebsite:<br>[1], <a href=\"https://www.zhihu.com/question/31836445\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/31836445</a><br>[2], <a href=\"http://www.jianshu.com/p/f54053afecf2\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/f54053afecf2</a><br>[3], <a href=\"https://help.github.com/articles/caching-your-github-password-in-git/\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/caching-your-github-password-in-git/</a></p>\n"},{"title":"DirectX9.0 notes 1.3 预备知识","date":"2017-11-22T13:55:41.000Z","_content":"\n### 深度缓存(depth buffer)\n\n> 定义: 一个含有特定像素的深度信息而不含图像数据的表面。\n  用于计算每个像素而定深度值并进行深度测试: 让处于同一位置的不同像素进行竞争，选出应写入该位置的像素。距离摄像机最近的像素获胜。\n  深度缓存格式决定深度测试精度, 精度度 16位<24位<32位, 一般选择24位满足效果\n\n> * D3DFMT_D32         32位深度缓存\n> * D3DFMT_D23S8       24位深度缓存, 其中8位保留供模板缓存(stencil buffer)[1]使用\n> * D3DFMT_D24X8       24位深度缓存\n> * D3DFMT_D16         16位深度缓存\n\n### 顶点运算(Vertex Processing)\n\n> * 软件顶点运算(software vertex process)\n> * 硬件顶点运算(harfware ...)\n\n软件顶点运算 ** 总是会被支持 ** , 硬件只有得到图形卡的支持才可使用。\n\n优先考虑硬件顶点运算方式，理由：\n> 1. 使用的硬件可能有加速功能\n> 2. 可以不占用CPU， CPU可被解放出来进行其他运算\n\n### 设备性能(Device Capabilities)\n\nDeCaps 表示\"Device Capabilities\"\nD3DCAP9::DevCaps的D3DDEVCAPS_HWTYRANSFORMANDLIGHT 可用来表示设备是否支持变换和光照的硬件计算。\n多查阅D3DCAP9相关的SDK文档, 继续研究一下Directt3D所提供能够设备性能的完整列表。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1] : 18章论述\n","source":"_posts/d3d-preparation.md","raw":"---\ntitle: DirectX9.0 notes 1.3 预备知识\ndate: 2017-11-22 21:55:41\ntags:\n- DirectX\n- Games\n\n---\n\n### 深度缓存(depth buffer)\n\n> 定义: 一个含有特定像素的深度信息而不含图像数据的表面。\n  用于计算每个像素而定深度值并进行深度测试: 让处于同一位置的不同像素进行竞争，选出应写入该位置的像素。距离摄像机最近的像素获胜。\n  深度缓存格式决定深度测试精度, 精度度 16位<24位<32位, 一般选择24位满足效果\n\n> * D3DFMT_D32         32位深度缓存\n> * D3DFMT_D23S8       24位深度缓存, 其中8位保留供模板缓存(stencil buffer)[1]使用\n> * D3DFMT_D24X8       24位深度缓存\n> * D3DFMT_D16         16位深度缓存\n\n### 顶点运算(Vertex Processing)\n\n> * 软件顶点运算(software vertex process)\n> * 硬件顶点运算(harfware ...)\n\n软件顶点运算 ** 总是会被支持 ** , 硬件只有得到图形卡的支持才可使用。\n\n优先考虑硬件顶点运算方式，理由：\n> 1. 使用的硬件可能有加速功能\n> 2. 可以不占用CPU， CPU可被解放出来进行其他运算\n\n### 设备性能(Device Capabilities)\n\nDeCaps 表示\"Device Capabilities\"\nD3DCAP9::DevCaps的D3DDEVCAPS_HWTYRANSFORMANDLIGHT 可用来表示设备是否支持变换和光照的硬件计算。\n多查阅D3DCAP9相关的SDK文档, 继续研究一下Directt3D所提供能够设备性能的完整列表。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1] : 18章论述\n","slug":"d3d-preparation","published":1,"updated":"2017-12-20T02:49:10.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4dr0007m5dr9ige8xmo","content":"<h3 id=\"深度缓存-depth-buffer\"><a href=\"#深度缓存-depth-buffer\" class=\"headerlink\" title=\"深度缓存(depth buffer)\"></a>深度缓存(depth buffer)</h3><blockquote>\n<p>定义: 一个含有特定像素的深度信息而不含图像数据的表面。<br>  用于计算每个像素而定深度值并进行深度测试: 让处于同一位置的不同像素进行竞争，选出应写入该位置的像素。距离摄像机最近的像素获胜。<br>  深度缓存格式决定深度测试精度, 精度度 16位&lt;24位&lt;32位, 一般选择24位满足效果</p>\n<ul>\n<li>D3DFMT_D32         32位深度缓存</li>\n<li>D3DFMT_D23S8       24位深度缓存, 其中8位保留供模板缓存(stencil buffer)[1]使用</li>\n<li>D3DFMT_D24X8       24位深度缓存</li>\n<li>D3DFMT_D16         16位深度缓存</li>\n</ul>\n</blockquote>\n<h3 id=\"顶点运算-Vertex-Processing\"><a href=\"#顶点运算-Vertex-Processing\" class=\"headerlink\" title=\"顶点运算(Vertex Processing)\"></a>顶点运算(Vertex Processing)</h3><blockquote>\n<ul>\n<li>软件顶点运算(software vertex process)</li>\n<li>硬件顶点运算(harfware …)</li>\n</ul>\n</blockquote>\n<p>软件顶点运算 <strong> 总是会被支持 </strong> , 硬件只有得到图形卡的支持才可使用。</p>\n<p>优先考虑硬件顶点运算方式，理由：</p>\n<blockquote>\n<ol>\n<li>使用的硬件可能有加速功能</li>\n<li>可以不占用CPU， CPU可被解放出来进行其他运算</li>\n</ol>\n</blockquote>\n<h3 id=\"设备性能-Device-Capabilities\"><a href=\"#设备性能-Device-Capabilities\" class=\"headerlink\" title=\"设备性能(Device Capabilities)\"></a>设备性能(Device Capabilities)</h3><p>DeCaps 表示”Device Capabilities”<br>D3DCAP9::DevCaps的D3DDEVCAPS_HWTYRANSFORMANDLIGHT 可用来表示设备是否支持变换和光照的硬件计算。<br>多查阅D3DCAP9相关的SDK文档, 继续研究一下Directt3D所提供能够设备性能的完整列表。</p>\n<p>[1] : 18章论述</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"深度缓存-depth-buffer\"><a href=\"#深度缓存-depth-buffer\" class=\"headerlink\" title=\"深度缓存(depth buffer)\"></a>深度缓存(depth buffer)</h3><blockquote>\n<p>定义: 一个含有特定像素的深度信息而不含图像数据的表面。<br>  用于计算每个像素而定深度值并进行深度测试: 让处于同一位置的不同像素进行竞争，选出应写入该位置的像素。距离摄像机最近的像素获胜。<br>  深度缓存格式决定深度测试精度, 精度度 16位&lt;24位&lt;32位, 一般选择24位满足效果</p>\n<ul>\n<li>D3DFMT_D32         32位深度缓存</li>\n<li>D3DFMT_D23S8       24位深度缓存, 其中8位保留供模板缓存(stencil buffer)[1]使用</li>\n<li>D3DFMT_D24X8       24位深度缓存</li>\n<li>D3DFMT_D16         16位深度缓存</li>\n</ul>\n</blockquote>\n<h3 id=\"顶点运算-Vertex-Processing\"><a href=\"#顶点运算-Vertex-Processing\" class=\"headerlink\" title=\"顶点运算(Vertex Processing)\"></a>顶点运算(Vertex Processing)</h3><blockquote>\n<ul>\n<li>软件顶点运算(software vertex process)</li>\n<li>硬件顶点运算(harfware …)</li>\n</ul>\n</blockquote>\n<p>软件顶点运算 <strong> 总是会被支持 </strong> , 硬件只有得到图形卡的支持才可使用。</p>\n<p>优先考虑硬件顶点运算方式，理由：</p>\n<blockquote>\n<ol>\n<li>使用的硬件可能有加速功能</li>\n<li>可以不占用CPU， CPU可被解放出来进行其他运算</li>\n</ol>\n</blockquote>\n<h3 id=\"设备性能-Device-Capabilities\"><a href=\"#设备性能-Device-Capabilities\" class=\"headerlink\" title=\"设备性能(Device Capabilities)\"></a>设备性能(Device Capabilities)</h3><p>DeCaps 表示”Device Capabilities”<br>D3DCAP9::DevCaps的D3DDEVCAPS_HWTYRANSFORMANDLIGHT 可用来表示设备是否支持变换和光照的硬件计算。<br>多查阅D3DCAP9相关的SDK文档, 继续研究一下Directt3D所提供能够设备性能的完整列表。</p>\n<p>[1] : 18章论述</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-12-20T02:49:10.258Z","updated":"2017-12-20T02:49:10.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4du000am5drt97l6o8o","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"在不同机器上配置部署hexo","date":"2017-12-20T02:54:39.000Z","_content":"\n将学习平台从Windows转移到ubuntu上后，需要重新配置hexo，但和重头配置有所区别。虽然，将Windows的磁盘擦干净前，我已经把数据全转移到移动硬盘上，可以用拷贝的方式在ubuntu上重新部署hexo, 但是这种方法相对手动，且既然用了github pages， 就通过实践github来部署。\n\n查阅后得到两种比较通用的hexo发布github的方式，\n> 1. 重新create a repo, 将静态文件push上去。\n> 2. 利用git branch的特性，将静态和部署文件放在一个repo的两个branch中。\n这里我选择了后者。\n\n**检查git：**\n```sh\n$ git --version\n\n$ sudo apt-get install git-core\n```\n**安装npm(node package manager):**\n```\n$ npm --version\n\n$ sudo apt-get install npm\n```\n**安装node-legacy**\n[装node-legacy原因][1]\n```sh\n$ sudo apt-get install nodejs-legacy\n```\n\n**安装nvm**\nnvm和npm一样是node的包的管理工具\n```sh\n$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\n**安装 Node.js**\n> Node.js是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境。Node.js由Node.js基金会持有和维护，并与Linux基金会有合作关系。Node.js采用Google开发的V8运行代码，使用事件驱动、非阻塞和异步输入输出模型等技术来提高性能，可优化应用程序的传输量和规模。这些技术通常用于数据密集的事实应用程序。\nvisit [node.js][2] for more information\n```sh\n$ nvm install 4\n```\n\n**安装 hexo**\n```\n$ npm install hexo-cli -g\n\n$ npm install hexo -g\n```\n\n**配置git**\n\n查看:\n```sh\n$ ls -al ~/.ssh\nls: cannot access /home/tim/.ssh: No such file or directory\n```\n\n生成:\n```sh\n$ ssh-keygen -t rsa -b 4096 -C \"timtingwei@hotmail.com\"\n```\n\n确认:\n```sh\n$ ssh-agent -s\n```\n\n添加:\n```sh\n$ ssh-add ~/.ssh/id_rsa\n```\n\n在github中添加SHH KEY\n```\n$ clip < cat ~/.ssh/id_rsa.pub\n```\n并在github setting中添加shh key\n\n```sh\n$ ssh -T git@github.com\nHi timtingwei! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n**利用git branch在不同机器上部署hexo**\n[CrazyMilk的知乎回答][3]\n\n> 1. 创建repo, timtingwei.github.io;\n> 2. 创建master和hexo两个分支，hexo用于存放静态文件, master用于部署;\n> 3. repo setting 中设置hexo为默认分支;\n> 4. git clone git@github.com:timtingwei/timtingwei.github.io.git 拷贝repo;\n> 5. npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;如果在不同机器上不需要hexo init;\n> 6. 修改_config.yml的deploy::branch参数为master;\n> 7. 依次执行 git add., git commit -m \"...\", git push origin hexo 提交相关文件;\n> 8. 执行hexo g -d 生成并部署到github上\n> 9. 日常改动:依次7,8.\n\n以上配置完成后, hexo s没反应\n```sh\n$ hexo server\nINFO  Start processing\n```\n\nhexo 3.0把服务器独立成个别模块，必须安装hexo-server才能使用。\n```sh\n$ npm install hexo-server --save\n\n$ hexo server\n```\n安装后, 仍旧没有反应。\n\n考虑用**静态模式**, 服务器只处理public文件夹内的文件，而不处理文件变动。先要执行hexo generate\n```sh\n$ hexo generate\n$ hexo server -s\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n```\n\nrefweb:\nhttps://zh.wikipedia.org/wiki/Node.js\nhttp://www.jianshu.com/p/24cb74aeb0a3\nhttps://www.zhihu.com/question/21193762\nhttps://hexo.io/zh-cn/docs/server.html\nhttps://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu\n\n[1]:https://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu\n[2]:https://zh.wikipedia.org/wiki/Node.js\n[3]:https://www.zhihu.com/question/21193762\n","source":"_posts/hexo-in-different-computers.md","raw":"---\ntitle: 在不同机器上配置部署hexo\ndate: 2017-12-20 10:54:39\ntags: hexo\n---\n\n将学习平台从Windows转移到ubuntu上后，需要重新配置hexo，但和重头配置有所区别。虽然，将Windows的磁盘擦干净前，我已经把数据全转移到移动硬盘上，可以用拷贝的方式在ubuntu上重新部署hexo, 但是这种方法相对手动，且既然用了github pages， 就通过实践github来部署。\n\n查阅后得到两种比较通用的hexo发布github的方式，\n> 1. 重新create a repo, 将静态文件push上去。\n> 2. 利用git branch的特性，将静态和部署文件放在一个repo的两个branch中。\n这里我选择了后者。\n\n**检查git：**\n```sh\n$ git --version\n\n$ sudo apt-get install git-core\n```\n**安装npm(node package manager):**\n```\n$ npm --version\n\n$ sudo apt-get install npm\n```\n**安装node-legacy**\n[装node-legacy原因][1]\n```sh\n$ sudo apt-get install nodejs-legacy\n```\n\n**安装nvm**\nnvm和npm一样是node的包的管理工具\n```sh\n$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\n**安装 Node.js**\n> Node.js是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境。Node.js由Node.js基金会持有和维护，并与Linux基金会有合作关系。Node.js采用Google开发的V8运行代码，使用事件驱动、非阻塞和异步输入输出模型等技术来提高性能，可优化应用程序的传输量和规模。这些技术通常用于数据密集的事实应用程序。\nvisit [node.js][2] for more information\n```sh\n$ nvm install 4\n```\n\n**安装 hexo**\n```\n$ npm install hexo-cli -g\n\n$ npm install hexo -g\n```\n\n**配置git**\n\n查看:\n```sh\n$ ls -al ~/.ssh\nls: cannot access /home/tim/.ssh: No such file or directory\n```\n\n生成:\n```sh\n$ ssh-keygen -t rsa -b 4096 -C \"timtingwei@hotmail.com\"\n```\n\n确认:\n```sh\n$ ssh-agent -s\n```\n\n添加:\n```sh\n$ ssh-add ~/.ssh/id_rsa\n```\n\n在github中添加SHH KEY\n```\n$ clip < cat ~/.ssh/id_rsa.pub\n```\n并在github setting中添加shh key\n\n```sh\n$ ssh -T git@github.com\nHi timtingwei! You've successfully authenticated, but GitHub does not provide shell access.\n```\n\n**利用git branch在不同机器上部署hexo**\n[CrazyMilk的知乎回答][3]\n\n> 1. 创建repo, timtingwei.github.io;\n> 2. 创建master和hexo两个分支，hexo用于存放静态文件, master用于部署;\n> 3. repo setting 中设置hexo为默认分支;\n> 4. git clone git@github.com:timtingwei/timtingwei.github.io.git 拷贝repo;\n> 5. npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;如果在不同机器上不需要hexo init;\n> 6. 修改_config.yml的deploy::branch参数为master;\n> 7. 依次执行 git add., git commit -m \"...\", git push origin hexo 提交相关文件;\n> 8. 执行hexo g -d 生成并部署到github上\n> 9. 日常改动:依次7,8.\n\n以上配置完成后, hexo s没反应\n```sh\n$ hexo server\nINFO  Start processing\n```\n\nhexo 3.0把服务器独立成个别模块，必须安装hexo-server才能使用。\n```sh\n$ npm install hexo-server --save\n\n$ hexo server\n```\n安装后, 仍旧没有反应。\n\n考虑用**静态模式**, 服务器只处理public文件夹内的文件，而不处理文件变动。先要执行hexo generate\n```sh\n$ hexo generate\n$ hexo server -s\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n```\n\nrefweb:\nhttps://zh.wikipedia.org/wiki/Node.js\nhttp://www.jianshu.com/p/24cb74aeb0a3\nhttps://www.zhihu.com/question/21193762\nhttps://hexo.io/zh-cn/docs/server.html\nhttps://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu\n\n[1]:https://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu\n[2]:https://zh.wikipedia.org/wiki/Node.js\n[3]:https://www.zhihu.com/question/21193762\n","slug":"hexo-in-different-computers","published":1,"updated":"2017-12-20T04:04:10.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4dx000bm5drbypo2rhc","content":"<p>将学习平台从Windows转移到ubuntu上后，需要重新配置hexo，但和重头配置有所区别。虽然，将Windows的磁盘擦干净前，我已经把数据全转移到移动硬盘上，可以用拷贝的方式在ubuntu上重新部署hexo, 但是这种方法相对手动，且既然用了github pages， 就通过实践github来部署。</p>\n<p>查阅后得到两种比较通用的hexo发布github的方式，</p>\n<blockquote>\n<ol>\n<li>重新create a repo, 将静态文件push上去。</li>\n<li>利用git branch的特性，将静态和部署文件放在一个repo的两个branch中。<br>这里我选择了后者。</li>\n</ol>\n</blockquote>\n<p><strong>检查git：</strong><br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git --version</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo apt-get install git-core</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装npm(node package manager):</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm --version</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo apt-get install npm</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装node-legacy</strong><br><a href=\"https://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu\" target=\"_blank\" rel=\"noopener\">装node-legacy原因</a><br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install nodejs-legacy</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装nvm</strong><br>nvm和npm一样是node的包的管理工具<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装 Node.js</strong></p>\n<blockquote>\n<p>Node.js是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境。Node.js由Node.js基金会持有和维护，并与Linux基金会有合作关系。Node.js采用Google开发的V8运行代码，使用事件驱动、非阻塞和异步输入输出模型等技术来提高性能，可优化应用程序的传输量和规模。这些技术通常用于数据密集的事实应用程序。<br>visit <a href=\"https://zh.wikipedia.org/wiki/Node.js\" target=\"_blank\" rel=\"noopener\">node.js</a> for more information<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm install 4</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>安装 hexo</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\">$ npm install hexo -g</span><br></pre></td></tr></table></figure></p>\n<p><strong>配置git</strong></p>\n<p>查看:<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls -al ~/.ssh</span><br><span class=\"line\">ls: cannot access /home/tim/.ssh: No such file or directory</span><br></pre></td></tr></table></figure></p>\n<p>生成:<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -b 4096 -C <span class=\"string\">\"timtingwei@hotmail.com\"</span></span><br></pre></td></tr></table></figure></p>\n<p>确认:<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-agent -s</span><br></pre></td></tr></table></figure></p>\n<p>添加:<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p>\n<p>在github中添加SHH KEY<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ clip &lt; cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p>\n<p>并在github setting中添加shh key</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh -T git@github.com</span><br><span class=\"line\">Hi timtingwei! You<span class=\"string\">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>\n<p><strong>利用git branch在不同机器上部署hexo</strong><br><a href=\"https://www.zhihu.com/question/21193762\" target=\"_blank\" rel=\"noopener\">CrazyMilk的知乎回答</a></p>\n<blockquote>\n<ol>\n<li>创建repo, timtingwei.github.io;</li>\n<li>创建master和hexo两个分支，hexo用于存放静态文件, master用于部署;</li>\n<li>repo setting 中设置hexo为默认分支;</li>\n<li>git clone git@github.com:timtingwei/timtingwei.github.io.git 拷贝repo;</li>\n<li>npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;如果在不同机器上不需要hexo init;</li>\n<li>修改_config.yml的deploy::branch参数为master;</li>\n<li>依次执行 git add., git commit -m “…”, git push origin hexo 提交相关文件;</li>\n<li>执行hexo g -d 生成并部署到github上</li>\n<li>日常改动:依次7,8.</li>\n</ol>\n</blockquote>\n<p>以上配置完成后, hexo s没反应<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br><span class=\"line\">INFO  Start processing</span><br></pre></td></tr></table></figure></p>\n<p>hexo 3.0把服务器独立成个别模块，必须安装hexo-server才能使用。<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-server --save</span><br><span class=\"line\"></span><br><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>安装后, 仍旧没有反应。</p>\n<p>考虑用<strong>静态模式</strong>, 服务器只处理public文件夹内的文件，而不处理文件变动。先要执行hexo generate<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo server -s</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></p>\n<p>refweb:<br><a href=\"https://zh.wikipedia.org/wiki/Node.js\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/Node.js</a><br><a href=\"http://www.jianshu.com/p/24cb74aeb0a3\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/24cb74aeb0a3</a><br><a href=\"https://www.zhihu.com/question/21193762\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/21193762</a><br><a href=\"https://hexo.io/zh-cn/docs/server.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs/server.html</a><br><a href=\"https://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>将学习平台从Windows转移到ubuntu上后，需要重新配置hexo，但和重头配置有所区别。虽然，将Windows的磁盘擦干净前，我已经把数据全转移到移动硬盘上，可以用拷贝的方式在ubuntu上重新部署hexo, 但是这种方法相对手动，且既然用了github pages， 就通过实践github来部署。</p>\n<p>查阅后得到两种比较通用的hexo发布github的方式，</p>\n<blockquote>\n<ol>\n<li>重新create a repo, 将静态文件push上去。</li>\n<li>利用git branch的特性，将静态和部署文件放在一个repo的两个branch中。<br>这里我选择了后者。</li>\n</ol>\n</blockquote>\n<p><strong>检查git：</strong><br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git --version</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo apt-get install git-core</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装npm(node package manager):</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm --version</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo apt-get install npm</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装node-legacy</strong><br><a href=\"https://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu\" target=\"_blank\" rel=\"noopener\">装node-legacy原因</a><br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install nodejs-legacy</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装nvm</strong><br>nvm和npm一样是node的包的管理工具<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装 Node.js</strong></p>\n<blockquote>\n<p>Node.js是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境。Node.js由Node.js基金会持有和维护，并与Linux基金会有合作关系。Node.js采用Google开发的V8运行代码，使用事件驱动、非阻塞和异步输入输出模型等技术来提高性能，可优化应用程序的传输量和规模。这些技术通常用于数据密集的事实应用程序。<br>visit <a href=\"https://zh.wikipedia.org/wiki/Node.js\" target=\"_blank\" rel=\"noopener\">node.js</a> for more information<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm install 4</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>安装 hexo</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\">$ npm install hexo -g</span><br></pre></td></tr></table></figure></p>\n<p><strong>配置git</strong></p>\n<p>查看:<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls -al ~/.ssh</span><br><span class=\"line\">ls: cannot access /home/tim/.ssh: No such file or directory</span><br></pre></td></tr></table></figure></p>\n<p>生成:<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -b 4096 -C <span class=\"string\">\"timtingwei@hotmail.com\"</span></span><br></pre></td></tr></table></figure></p>\n<p>确认:<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-agent -s</span><br></pre></td></tr></table></figure></p>\n<p>添加:<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p>\n<p>在github中添加SHH KEY<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ clip &lt; cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p>\n<p>并在github setting中添加shh key</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh -T git@github.com</span><br><span class=\"line\">Hi timtingwei! You<span class=\"string\">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>\n<p><strong>利用git branch在不同机器上部署hexo</strong><br><a href=\"https://www.zhihu.com/question/21193762\" target=\"_blank\" rel=\"noopener\">CrazyMilk的知乎回答</a></p>\n<blockquote>\n<ol>\n<li>创建repo, timtingwei.github.io;</li>\n<li>创建master和hexo两个分支，hexo用于存放静态文件, master用于部署;</li>\n<li>repo setting 中设置hexo为默认分支;</li>\n<li>git clone git@github.com:timtingwei/timtingwei.github.io.git 拷贝repo;</li>\n<li>npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;如果在不同机器上不需要hexo init;</li>\n<li>修改_config.yml的deploy::branch参数为master;</li>\n<li>依次执行 git add., git commit -m “…”, git push origin hexo 提交相关文件;</li>\n<li>执行hexo g -d 生成并部署到github上</li>\n<li>日常改动:依次7,8.</li>\n</ol>\n</blockquote>\n<p>以上配置完成后, hexo s没反应<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br><span class=\"line\">INFO  Start processing</span><br></pre></td></tr></table></figure></p>\n<p>hexo 3.0把服务器独立成个别模块，必须安装hexo-server才能使用。<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-server --save</span><br><span class=\"line\"></span><br><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>安装后, 仍旧没有反应。</p>\n<p>考虑用<strong>静态模式</strong>, 服务器只处理public文件夹内的文件，而不处理文件变动。先要执行hexo generate<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo server -s</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></p>\n<p>refweb:<br><a href=\"https://zh.wikipedia.org/wiki/Node.js\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/Node.js</a><br><a href=\"http://www.jianshu.com/p/24cb74aeb0a3\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/24cb74aeb0a3</a><br><a href=\"https://www.zhihu.com/question/21193762\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/21193762</a><br><a href=\"https://hexo.io/zh-cn/docs/server.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs/server.html</a><br><a href=\"https://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu</a></p>\n"},{"title":"hexo博客中文乱码","date":"2017-11-23T01:52:42.000Z","_content":"\n## issue:\n\n```\n$ hexo g && hexo s\n```\n\n此时[localhost](http://localhost:4000/)中出现如下中文乱码, 英文部分正常。\n> ��Ȼ���(depth buffer)\n\n此时\\_config.yml中:\n\n```\nlanguage: zh-Hans\n```\n## hack:\n\n> 1. Notepad++打开出现中文的\\*.md, 此时右下角为ANSI格式.\n> 2. 格式->转为UFT-8编码格式\n> 3. 保存\n> 4. $ hexo clean && hexo g && hexo s\n\n此时[localhost](http://localhost:4000/)中\n> 深度缓存(depth buffer)\n\n## issue++:\n\n> * 批量转化post中的md文件\n> * 自动生成UTF-8格式的md文件\n\n------\nreference:\n[1]: \n\n\n\n","source":"_posts/hexo-random-symbol.md","raw":"---\ntitle: hexo博客中文乱码\ndate: 2017-11-23 09:52:42\ntags: \n- hexo\n- UTF-8\n---\n\n## issue:\n\n```\n$ hexo g && hexo s\n```\n\n此时[localhost](http://localhost:4000/)中出现如下中文乱码, 英文部分正常。\n> ��Ȼ���(depth buffer)\n\n此时\\_config.yml中:\n\n```\nlanguage: zh-Hans\n```\n## hack:\n\n> 1. Notepad++打开出现中文的\\*.md, 此时右下角为ANSI格式.\n> 2. 格式->转为UFT-8编码格式\n> 3. 保存\n> 4. $ hexo clean && hexo g && hexo s\n\n此时[localhost](http://localhost:4000/)中\n> 深度缓存(depth buffer)\n\n## issue++:\n\n> * 批量转化post中的md文件\n> * 自动生成UTF-8格式的md文件\n\n------\nreference:\n[1]: \n\n\n\n","slug":"hexo-random-symbol","published":1,"updated":"2017-12-20T02:49:10.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4e3000dm5drigub5xhs","content":"<h2 id=\"issue\"><a href=\"#issue\" class=\"headerlink\" title=\"issue:\"></a>issue:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n<p>此时<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">localhost</a>中出现如下中文乱码, 英文部分正常。</p>\n<blockquote>\n<p>��Ȼ���(depth buffer)</p>\n</blockquote>\n<p>此时_config.yml中:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-Hans</span><br></pre></td></tr></table></figure>\n<h2 id=\"hack\"><a href=\"#hack\" class=\"headerlink\" title=\"hack:\"></a>hack:</h2><blockquote>\n<ol>\n<li>Notepad++打开出现中文的*.md, 此时右下角为ANSI格式.</li>\n<li>格式-&gt;转为UFT-8编码格式</li>\n<li>保存</li>\n<li>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</li>\n</ol>\n</blockquote>\n<p>此时<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">localhost</a>中</p>\n<blockquote>\n<p>深度缓存(depth buffer)</p>\n</blockquote>\n<h2 id=\"issue-1\"><a href=\"#issue-1\" class=\"headerlink\" title=\"issue++:\"></a>issue++:</h2><blockquote>\n<ul>\n<li>批量转化post中的md文件</li>\n<li>自动生成UTF-8格式的md文件</li>\n</ul>\n</blockquote>\n<hr>\n<p>reference:<br>[1]: </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"issue\"><a href=\"#issue\" class=\"headerlink\" title=\"issue:\"></a>issue:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n<p>此时<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">localhost</a>中出现如下中文乱码, 英文部分正常。</p>\n<blockquote>\n<p>��Ȼ���(depth buffer)</p>\n</blockquote>\n<p>此时_config.yml中:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-Hans</span><br></pre></td></tr></table></figure>\n<h2 id=\"hack\"><a href=\"#hack\" class=\"headerlink\" title=\"hack:\"></a>hack:</h2><blockquote>\n<ol>\n<li>Notepad++打开出现中文的*.md, 此时右下角为ANSI格式.</li>\n<li>格式-&gt;转为UFT-8编码格式</li>\n<li>保存</li>\n<li>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</li>\n</ol>\n</blockquote>\n<p>此时<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">localhost</a>中</p>\n<blockquote>\n<p>深度缓存(depth buffer)</p>\n</blockquote>\n<h2 id=\"issue-1\"><a href=\"#issue-1\" class=\"headerlink\" title=\"issue++:\"></a>issue++:</h2><blockquote>\n<ul>\n<li>批量转化post中的md文件</li>\n<li>自动生成UTF-8格式的md文件</li>\n</ul>\n</blockquote>\n<hr>\n<p>reference:<br>[1]: </p>\n"},{"title":"在ubuntu14.04上建立OpenGL编译环境","date":"2017-12-20T05:58:49.000Z","_content":"\n\n学习教程[LearnOpenGL-CN][1]前先配置学习环境，对照后面编译时链接的函数库，\n\n```sh\n$ g++ -std=c++11 hello_window.cpp -lGLEW -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor\n```\n\n需要：\n> * GLEW\n> * GLFW/GLFW3\n> * libgl1-mesa\n> * libglu1-mesa\n\n`ps: 不是完全明白这里链接库的对应关系`\n\n==========\n\n参考:[Howto_Install_OpenGL_Development_Environment][2]\n\n**建立基本编译环境**\n首先不可或缺的，就是編譯器與基本的函式庫，如果系統沒有安裝的話，請依照下面的方式安裝：\n```sh\nsudo apt-get install build-essential\n```\n\n**安裝OpenGL Library**\n接下來要把我們會用到的 Library 裝上去，首先安裝 OpenGL Library\n```sh\nsudo apt-get install libgl1-mesa-dev\n```\n\n**安裝OpenGL Utilities**\nOpenGL Utilities 是一組建構於 OpenGL Library 之上的工具組，提供許多很方便的函式，使 OpenGL 更強大且更容易使用。 接下來我們安裝OpenGL Utilities\n\n> 在Linux下你需要链接libGL.so库文件，这需要添加-lGL到你的链接器设置中。如果找不到这个库你可能需要安装Mesa，NVidia或AMD的开发包，\n\n```sh\nsudo apt-get install libglu1-mesa-dev\n```\n**安裝GLFW/GLFW3**\nGLFW是一个专门针对OpenGL的C语言库，它提供了一些渲染物体所需的最低限度的接口。它允许用户创建OpenGL上下文，定义窗口参数以及处理用户输入，这正是我们需要的。\n\nGLFW可以从它官方网站的[下载页][6]上获取。\n\n参考网站[How to build & install GLFW 3 and use it in a Linux project][3]\n解压后,\n\n```sh\n$ sudo apt-get install cmake\n\n$ cmake -G \"Unix Makefiles\"\n\n$ sudo apt-get build-dep glfw\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n\n$ sudo make\n$ sudo make install\n\nInstall the project...\n-- Install configuration: \"\"\n-- Installing: /usr/local/include/GLFW\n-- Installing: /usr/local/include/GLFW/glfw3.h\n-- Installing: /usr/local/include/GLFW/glfw3native.h\n-- Installing: /usr/local/lib/cmake/glfw3/glfw3Config.cmake\n-- Installing: /usr/local/lib/cmake/glfw3/glfw3ConfigVersion.cmake\n-- Installing: /usr/local/lib/cmake/glfw3/glfw3Targets.cmake\n-- Installing: /usr/local/lib/cmake/glfw3/glfw3Targets-noconfig.cmake\n-- Installing: /usr/local/lib/pkgconfig/glfw3.pc\n-- Installing: /usr/local/lib/libglfw3.a\n```\n\n**从[测试源码网站][4]复制案例代码测试**\n该案例中#include <GLFW/glfw3.h>\n\n\n```sh\n$ g++ -std=c++11 -c main.cpp\n\n$ ./main.o\nbash: ./main.o: cannot execute binary file: Exec format error  &lt;==执行main.o提示不是二进制可执行文件\n\n\n$ g++ main.o -o main.exec -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi\n/usr/bin/ld: //usr/local/lib/libglfw3.a(vulkan.c.o): undefined reference to symbol 'dlclose@@GLIBC_2.2.5'\n//lib/x86_64-linux-gnu/libdl.so.2: error adding symbols: DSO missing from command line\ncollect2: error: ld returned 1 exit status\n```\n\nYou may also need to add the linker options -ldl -lXinerama -lXcursor to get it to work correctly if you are getting undefined references to **dlclose**\n\n```sh\n$ g++ main.o -o main.exec -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor\n\n$ ./main.exec\n```\n\n\n-l<Library>  告訴 gcc 去連結指定 Library\n-o<file>     指定執行檔的輸出名字\n\n执行:\n\n$ ./main.exec\n\n\n~~\\**安装glut\\*\\*~~\n\n~~\\`\\`\\`sh\nsudo apt-get install libglut-dev\n\\`\\`\\`~~\n\n~~沒有libglut-dev可以改用\n\\`\\`\\`sh\nsudo apt-get install freeglut3-dev\n\\`\\`\\`~~\n\n~~設定編譯參數與編譯\n在這之前，我們需要一個測試範例，example.c~~ [如下][2]：\n\n~~有了測試範例、基礎編譯環境與各個 OpenGL 相關的函式庫之後，我們所需要做的就是告訴編譯器我們有安裝 OpenGL 函式庫，編譯程式時要連結這些函式庫。~~\n\n~~gcc example.c -o example.out -lGL -lGLU -lglut\n因為我們安裝了 OpenGL Utility Toolkit ，它是建立在 OpenGL Utilities 與 OpenGL Library 之上，因此我們可以簡單連結 OpenGL Utility Toolkit 的函式庫就可以達到我們的目地了。下面的編譯參數跟上面的是同樣效果：~~\n\n~~gcc example.c -o example.out -lglut\n下面簡單說明一下所使用的 gcc 參數~~\n\n~~-l<Library>  告訴 gcc 去連結指定 Library\n-o<file>     指定執行檔的輸出名字~~\n\n~~執行\n接下來我們就可以來看看我們的結果，如果看到右圖，代表成功了!~\n./example.out~~\n\n\n**编译和链接GLEW**\n\n对于用GCC编译的Linux用户建议使用这个命令行选项-lGLEW -lglfw3 -lGL -lX11 -lpthread -lXrandr -lXi。没有正确链接相应的库会产生 undefined reference(未定义的引用) 这个错误。\n\n```sh\n$ sudo apt-get build-dep glew\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n\n$ sudo make\n$ sudo make install\n```\n\n==========\n\n**测试教程中的案例代码**\n\n复制 [代码hello_window.cpp][https://github.com/timtingwei/LearnOpenGL/src/1.getting_started/1.1.hello_window/hello_window.cpp]\n```sh\n$ g++ -std=c++11 hello_window.cpp -lGLEW -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor\n$ ls\na.out  hello_window.cpp\n$ ./a.out\nStarting GLFW context, OpenGL 3.3\n```\n看到初始化窗口，代表成功。\n\n**编译后窗口透明问题**\n虽然窗口初始化成功, 但不知道我的窗口为什么是透明的, 难道是ubuntu的原因吗？\nRender部分再加入两行代码\n```cpp\nglClearColor(0.2f, 0.3f, 0.3f, 1.0f);\nglClear(GL_COLOR_BUFFER_BIT);\n```\n\n**编译后libGLEW.so.2.1: No such file or directory 问题**\n\n```sh\n..\n$ ./a.out\n./a.out: error while loading shared libraries: libGLEW.so.2.1: cannot open shared object file: No such file or directory\n```\n查询[stackoverflow libGLEW相关问题][5]\n得到libGLEW在lib64下, 于是便创建软link\n$ sudo ln -s /usr/lib64/libGLEW.so.2.1 /usr/lib/libGLEW.so.2.1\n\n==========\n\nrefwebsite:\nhttps://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/02%20Creating%20a%20window/\nhttps://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment\nhttps://stackoverflow.com/questions/17768008/how-to-build-install-glfw-3-and-use-it-in-a-linux-project\nhttp://www.glfw.org/docs/3.0/quick.html\nhttps://stackoverflow.com/questions/26372359/error-loading-shared-library-glew\nhttp://www.glfw.org/download.html\n\n[1]:https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/02%20Creating%20a%20window/\n[2]:https://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment\n[3]:https://stackoverflow.com/questions/17768008/how-to-build-install-glfw-3-and-use-it-in-a-linux-project\n[4]:http://www.glfw.org/docs/3.0/quick.html\n[5]:https://stackoverflow.com/questions/26372359/error-loading-shared-library-glew\n[6]:http://www.glfw.org/download.html\n","source":"_posts/install-openGL-in-ubuntu14-04.md","raw":"---\ntitle: 在ubuntu14.04上建立OpenGL编译环境\ndate: 2017-12-20 13:58:49\ntags: OpenGL\n---\n\n\n学习教程[LearnOpenGL-CN][1]前先配置学习环境，对照后面编译时链接的函数库，\n\n```sh\n$ g++ -std=c++11 hello_window.cpp -lGLEW -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor\n```\n\n需要：\n> * GLEW\n> * GLFW/GLFW3\n> * libgl1-mesa\n> * libglu1-mesa\n\n`ps: 不是完全明白这里链接库的对应关系`\n\n==========\n\n参考:[Howto_Install_OpenGL_Development_Environment][2]\n\n**建立基本编译环境**\n首先不可或缺的，就是編譯器與基本的函式庫，如果系統沒有安裝的話，請依照下面的方式安裝：\n```sh\nsudo apt-get install build-essential\n```\n\n**安裝OpenGL Library**\n接下來要把我們會用到的 Library 裝上去，首先安裝 OpenGL Library\n```sh\nsudo apt-get install libgl1-mesa-dev\n```\n\n**安裝OpenGL Utilities**\nOpenGL Utilities 是一組建構於 OpenGL Library 之上的工具組，提供許多很方便的函式，使 OpenGL 更強大且更容易使用。 接下來我們安裝OpenGL Utilities\n\n> 在Linux下你需要链接libGL.so库文件，这需要添加-lGL到你的链接器设置中。如果找不到这个库你可能需要安装Mesa，NVidia或AMD的开发包，\n\n```sh\nsudo apt-get install libglu1-mesa-dev\n```\n**安裝GLFW/GLFW3**\nGLFW是一个专门针对OpenGL的C语言库，它提供了一些渲染物体所需的最低限度的接口。它允许用户创建OpenGL上下文，定义窗口参数以及处理用户输入，这正是我们需要的。\n\nGLFW可以从它官方网站的[下载页][6]上获取。\n\n参考网站[How to build & install GLFW 3 and use it in a Linux project][3]\n解压后,\n\n```sh\n$ sudo apt-get install cmake\n\n$ cmake -G \"Unix Makefiles\"\n\n$ sudo apt-get build-dep glfw\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n\n$ sudo make\n$ sudo make install\n\nInstall the project...\n-- Install configuration: \"\"\n-- Installing: /usr/local/include/GLFW\n-- Installing: /usr/local/include/GLFW/glfw3.h\n-- Installing: /usr/local/include/GLFW/glfw3native.h\n-- Installing: /usr/local/lib/cmake/glfw3/glfw3Config.cmake\n-- Installing: /usr/local/lib/cmake/glfw3/glfw3ConfigVersion.cmake\n-- Installing: /usr/local/lib/cmake/glfw3/glfw3Targets.cmake\n-- Installing: /usr/local/lib/cmake/glfw3/glfw3Targets-noconfig.cmake\n-- Installing: /usr/local/lib/pkgconfig/glfw3.pc\n-- Installing: /usr/local/lib/libglfw3.a\n```\n\n**从[测试源码网站][4]复制案例代码测试**\n该案例中#include <GLFW/glfw3.h>\n\n\n```sh\n$ g++ -std=c++11 -c main.cpp\n\n$ ./main.o\nbash: ./main.o: cannot execute binary file: Exec format error  &lt;==执行main.o提示不是二进制可执行文件\n\n\n$ g++ main.o -o main.exec -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi\n/usr/bin/ld: //usr/local/lib/libglfw3.a(vulkan.c.o): undefined reference to symbol 'dlclose@@GLIBC_2.2.5'\n//lib/x86_64-linux-gnu/libdl.so.2: error adding symbols: DSO missing from command line\ncollect2: error: ld returned 1 exit status\n```\n\nYou may also need to add the linker options -ldl -lXinerama -lXcursor to get it to work correctly if you are getting undefined references to **dlclose**\n\n```sh\n$ g++ main.o -o main.exec -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor\n\n$ ./main.exec\n```\n\n\n-l<Library>  告訴 gcc 去連結指定 Library\n-o<file>     指定執行檔的輸出名字\n\n执行:\n\n$ ./main.exec\n\n\n~~\\**安装glut\\*\\*~~\n\n~~\\`\\`\\`sh\nsudo apt-get install libglut-dev\n\\`\\`\\`~~\n\n~~沒有libglut-dev可以改用\n\\`\\`\\`sh\nsudo apt-get install freeglut3-dev\n\\`\\`\\`~~\n\n~~設定編譯參數與編譯\n在這之前，我們需要一個測試範例，example.c~~ [如下][2]：\n\n~~有了測試範例、基礎編譯環境與各個 OpenGL 相關的函式庫之後，我們所需要做的就是告訴編譯器我們有安裝 OpenGL 函式庫，編譯程式時要連結這些函式庫。~~\n\n~~gcc example.c -o example.out -lGL -lGLU -lglut\n因為我們安裝了 OpenGL Utility Toolkit ，它是建立在 OpenGL Utilities 與 OpenGL Library 之上，因此我們可以簡單連結 OpenGL Utility Toolkit 的函式庫就可以達到我們的目地了。下面的編譯參數跟上面的是同樣效果：~~\n\n~~gcc example.c -o example.out -lglut\n下面簡單說明一下所使用的 gcc 參數~~\n\n~~-l<Library>  告訴 gcc 去連結指定 Library\n-o<file>     指定執行檔的輸出名字~~\n\n~~執行\n接下來我們就可以來看看我們的結果，如果看到右圖，代表成功了!~\n./example.out~~\n\n\n**编译和链接GLEW**\n\n对于用GCC编译的Linux用户建议使用这个命令行选项-lGLEW -lglfw3 -lGL -lX11 -lpthread -lXrandr -lXi。没有正确链接相应的库会产生 undefined reference(未定义的引用) 这个错误。\n\n```sh\n$ sudo apt-get build-dep glew\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\n0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n\n$ sudo make\n$ sudo make install\n```\n\n==========\n\n**测试教程中的案例代码**\n\n复制 [代码hello_window.cpp][https://github.com/timtingwei/LearnOpenGL/src/1.getting_started/1.1.hello_window/hello_window.cpp]\n```sh\n$ g++ -std=c++11 hello_window.cpp -lGLEW -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor\n$ ls\na.out  hello_window.cpp\n$ ./a.out\nStarting GLFW context, OpenGL 3.3\n```\n看到初始化窗口，代表成功。\n\n**编译后窗口透明问题**\n虽然窗口初始化成功, 但不知道我的窗口为什么是透明的, 难道是ubuntu的原因吗？\nRender部分再加入两行代码\n```cpp\nglClearColor(0.2f, 0.3f, 0.3f, 1.0f);\nglClear(GL_COLOR_BUFFER_BIT);\n```\n\n**编译后libGLEW.so.2.1: No such file or directory 问题**\n\n```sh\n..\n$ ./a.out\n./a.out: error while loading shared libraries: libGLEW.so.2.1: cannot open shared object file: No such file or directory\n```\n查询[stackoverflow libGLEW相关问题][5]\n得到libGLEW在lib64下, 于是便创建软link\n$ sudo ln -s /usr/lib64/libGLEW.so.2.1 /usr/lib/libGLEW.so.2.1\n\n==========\n\nrefwebsite:\nhttps://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/02%20Creating%20a%20window/\nhttps://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment\nhttps://stackoverflow.com/questions/17768008/how-to-build-install-glfw-3-and-use-it-in-a-linux-project\nhttp://www.glfw.org/docs/3.0/quick.html\nhttps://stackoverflow.com/questions/26372359/error-loading-shared-library-glew\nhttp://www.glfw.org/download.html\n\n[1]:https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/02%20Creating%20a%20window/\n[2]:https://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment\n[3]:https://stackoverflow.com/questions/17768008/how-to-build-install-glfw-3-and-use-it-in-a-linux-project\n[4]:http://www.glfw.org/docs/3.0/quick.html\n[5]:https://stackoverflow.com/questions/26372359/error-loading-shared-library-glew\n[6]:http://www.glfw.org/download.html\n","slug":"install-openGL-in-ubuntu14-04","published":1,"updated":"2017-12-21T23:46:37.645Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4e5000fm5drzy0zlm39","content":"<p>学习教程<a href=\"https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/02%20Creating%20a%20window/\" target=\"_blank\" rel=\"noopener\">LearnOpenGL-CN</a>前先配置学习环境，对照后面编译时链接的函数库，</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ g++ -std=c++11 hello_window.cpp -lGLEW -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor</span><br></pre></td></tr></table></figure>\n<p>需要：</p>\n<blockquote>\n<ul>\n<li>GLEW</li>\n<li>GLFW/GLFW3</li>\n<li>libgl1-mesa</li>\n<li>libglu1-mesa</li>\n</ul>\n</blockquote>\n<p><code>ps: 不是完全明白这里链接库的对应关系</code></p>\n<p>==========</p>\n<p>参考:<a href=\"https://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment\" target=\"_blank\" rel=\"noopener\">Howto_Install_OpenGL_Development_Environment</a></p>\n<p><strong>建立基本编译环境</strong><br>首先不可或缺的，就是編譯器與基本的函式庫，如果系統沒有安裝的話，請依照下面的方式安裝：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install build-essential</span><br></pre></td></tr></table></figure></p>\n<p><strong>安裝OpenGL Library</strong><br>接下來要把我們會用到的 Library 裝上去，首先安裝 OpenGL Library<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libgl1-mesa-dev</span><br></pre></td></tr></table></figure></p>\n<p><strong>安裝OpenGL Utilities</strong><br>OpenGL Utilities 是一組建構於 OpenGL Library 之上的工具組，提供許多很方便的函式，使 OpenGL 更強大且更容易使用。 接下來我們安裝OpenGL Utilities</p>\n<blockquote>\n<p>在Linux下你需要链接libGL.so库文件，这需要添加-lGL到你的链接器设置中。如果找不到这个库你可能需要安装Mesa，NVidia或AMD的开发包，</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libglu1-mesa-dev</span><br></pre></td></tr></table></figure>\n<p><strong>安裝GLFW/GLFW3</strong><br>GLFW是一个专门针对OpenGL的C语言库，它提供了一些渲染物体所需的最低限度的接口。它允许用户创建OpenGL上下文，定义窗口参数以及处理用户输入，这正是我们需要的。</p>\n<p>GLFW可以从它官方网站的<a href=\"http://www.glfw.org/download.html\" target=\"_blank\" rel=\"noopener\">下载页</a>上获取。</p>\n<p>参考网站<a href=\"https://stackoverflow.com/questions/17768008/how-to-build-install-glfw-3-and-use-it-in-a-linux-project\" target=\"_blank\" rel=\"noopener\">How to build &amp; install GLFW 3 and use it in a Linux project</a><br>解压后,</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install cmake</span><br><span class=\"line\"></span><br><span class=\"line\">$ cmake -G <span class=\"string\">\"Unix Makefiles\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo apt-get build-dep glfw</span><br><span class=\"line\">Reading package lists... Done</span><br><span class=\"line\">Building dependency tree</span><br><span class=\"line\">Reading state information... Done</span><br><span class=\"line\">0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo make</span><br><span class=\"line\">$ sudo make install</span><br><span class=\"line\"></span><br><span class=\"line\">Install the project...</span><br><span class=\"line\">-- Install configuration: <span class=\"string\">\"\"</span></span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/include/GLFW</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/include/GLFW/glfw3.h</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/include/GLFW/glfw3native.h</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/cmake/glfw3/glfw3Config.cmake</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/cmake/glfw3/glfw3ConfigVersion.cmake</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/cmake/glfw3/glfw3Targets.cmake</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/cmake/glfw3/glfw3Targets-noconfig.cmake</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/pkgconfig/glfw3.pc</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/libglfw3.a</span><br></pre></td></tr></table></figure>\n<p><strong>从<a href=\"http://www.glfw.org/docs/3.0/quick.html\" target=\"_blank\" rel=\"noopener\">测试源码网站</a>复制案例代码测试</strong><br>该案例中#include <glfw glfw3.h=\"\"></glfw></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ g++ -std=c++11 -c main.cpp</span><br><span class=\"line\"></span><br><span class=\"line\">$ ./main.o</span><br><span class=\"line\">bash: ./main.o: cannot execute binary file: Exec format error  &amp;lt;==执行main.o提示不是二进制可执行文件</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ g++ main.o -o main.exec -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi</span><br><span class=\"line\">/usr/bin/ld: //usr/<span class=\"built_in\">local</span>/lib/libglfw3.a(vulkan.c.o): undefined reference to symbol <span class=\"string\">'dlclose@@GLIBC_2.2.5'</span></span><br><span class=\"line\">//lib/x86_64-linux-gnu/libdl.so.2: error adding symbols: DSO missing from <span class=\"built_in\">command</span> line</span><br><span class=\"line\">collect2: error: ld returned 1 <span class=\"built_in\">exit</span> status</span><br></pre></td></tr></table></figure>\n<p>You may also need to add the linker options -ldl -lXinerama -lXcursor to get it to work correctly if you are getting undefined references to <strong>dlclose</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ g++ main.o -o main.exec -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor</span><br><span class=\"line\"></span><br><span class=\"line\">$ ./main.exec</span><br></pre></td></tr></table></figure>\n<p>-l<library>  告訴 gcc 去連結指定 Library<br>-o<file>     指定執行檔的輸出名字</file></library></p>\n<p>执行:</p>\n<p>$ ./main.exec</p>\n<p><del>*<em>安装glut\\</em>*</del></p>\n<p><del>```sh<br>sudo apt-get install libglut-dev<br>```</del></p>\n<p><del>沒有libglut-dev可以改用<br>```sh<br>sudo apt-get install freeglut3-dev<br>```</del></p>\n<p><del>設定編譯參數與編譯<br>在這之前，我們需要一個測試範例，example.c</del> <a href=\"https://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment\" target=\"_blank\" rel=\"noopener\">如下</a>：</p>\n<p><del>有了測試範例、基礎編譯環境與各個 OpenGL 相關的函式庫之後，我們所需要做的就是告訴編譯器我們有安裝 OpenGL 函式庫，編譯程式時要連結這些函式庫。</del></p>\n<p><del>gcc example.c -o example.out -lGL -lGLU -lglut<br>因為我們安裝了 OpenGL Utility Toolkit ，它是建立在 OpenGL Utilities 與 OpenGL Library 之上，因此我們可以簡單連結 OpenGL Utility Toolkit 的函式庫就可以達到我們的目地了。下面的編譯參數跟上面的是同樣效果：</del></p>\n<p><del>gcc example.c -o example.out -lglut<br>下面簡單說明一下所使用的 gcc 參數</del></p>\n<p><del>-l<library>  告訴 gcc 去連結指定 Library<br>-o<file>     指定執行檔的輸出名字</file></library></del></p>\n<p><del>執行<br>接下來我們就可以來看看我們的結果，如果看到右圖，代表成功了!~<br>./example.out</del></p>\n<p><strong>编译和链接GLEW</strong></p>\n<p>对于用GCC编译的Linux用户建议使用这个命令行选项-lGLEW -lglfw3 -lGL -lX11 -lpthread -lXrandr -lXi。没有正确链接相应的库会产生 undefined reference(未定义的引用) 这个错误。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get build-dep glew</span><br><span class=\"line\">Reading package lists... Done</span><br><span class=\"line\">Building dependency tree       </span><br><span class=\"line\">Reading state information... Done</span><br><span class=\"line\">0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo make</span><br><span class=\"line\">$ sudo make install</span><br></pre></td></tr></table></figure>\n<p>==========</p>\n<p><strong>测试教程中的案例代码</strong></p>\n<p>复制 [代码hello_window.cpp][<a href=\"https://github.com/timtingwei/LearnOpenGL/src/1.getting_started/1.1.hello_window/hello_window.cpp\" target=\"_blank\" rel=\"noopener\">https://github.com/timtingwei/LearnOpenGL/src/1.getting_started/1.1.hello_window/hello_window.cpp</a>]<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ g++ -std=c++11 hello_window.cpp -lGLEW -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">a.out  hello_window.cpp</span><br><span class=\"line\">$ ./a.out</span><br><span class=\"line\">Starting GLFW context, OpenGL 3.3</span><br></pre></td></tr></table></figure></p>\n<p>看到初始化窗口，代表成功。</p>\n<p><strong>编译后窗口透明问题</strong><br>虽然窗口初始化成功, 但不知道我的窗口为什么是透明的, 难道是ubuntu的原因吗？<br>Render部分再加入两行代码<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glClearColor(<span class=\"number\">0.2f</span>, <span class=\"number\">0.3f</span>, <span class=\"number\">0.3f</span>, <span class=\"number\">1.0f</span>);</span><br><span class=\"line\">glClear(GL_COLOR_BUFFER_BIT);</span><br></pre></td></tr></table></figure></p>\n<p><strong>编译后libGLEW.so.2.1: No such file or directory 问题</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">..</span><br><span class=\"line\">$ ./a.out</span><br><span class=\"line\">./a.out: error <span class=\"keyword\">while</span> loading shared libraries: libGLEW.so.2.1: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure>\n<p>查询<a href=\"https://stackoverflow.com/questions/26372359/error-loading-shared-library-glew\" target=\"_blank\" rel=\"noopener\">stackoverflow libGLEW相关问题</a><br>得到libGLEW在lib64下, 于是便创建软link<br>$ sudo ln -s /usr/lib64/libGLEW.so.2.1 /usr/lib/libGLEW.so.2.1</p>\n<p>==========</p>\n<p>refwebsite:<br><a href=\"https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/02%20Creating%20a%20window/\" target=\"_blank\" rel=\"noopener\">https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/02%20Creating%20a%20window/</a><br><a href=\"https://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment\" target=\"_blank\" rel=\"noopener\">https://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment</a><br><a href=\"https://stackoverflow.com/questions/17768008/how-to-build-install-glfw-3-and-use-it-in-a-linux-project\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/17768008/how-to-build-install-glfw-3-and-use-it-in-a-linux-project</a><br><a href=\"http://www.glfw.org/docs/3.0/quick.html\" target=\"_blank\" rel=\"noopener\">http://www.glfw.org/docs/3.0/quick.html</a><br><a href=\"https://stackoverflow.com/questions/26372359/error-loading-shared-library-glew\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/26372359/error-loading-shared-library-glew</a><br><a href=\"http://www.glfw.org/download.html\" target=\"_blank\" rel=\"noopener\">http://www.glfw.org/download.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>学习教程<a href=\"https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/02%20Creating%20a%20window/\" target=\"_blank\" rel=\"noopener\">LearnOpenGL-CN</a>前先配置学习环境，对照后面编译时链接的函数库，</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ g++ -std=c++11 hello_window.cpp -lGLEW -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor</span><br></pre></td></tr></table></figure>\n<p>需要：</p>\n<blockquote>\n<ul>\n<li>GLEW</li>\n<li>GLFW/GLFW3</li>\n<li>libgl1-mesa</li>\n<li>libglu1-mesa</li>\n</ul>\n</blockquote>\n<p><code>ps: 不是完全明白这里链接库的对应关系</code></p>\n<p>==========</p>\n<p>参考:<a href=\"https://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment\" target=\"_blank\" rel=\"noopener\">Howto_Install_OpenGL_Development_Environment</a></p>\n<p><strong>建立基本编译环境</strong><br>首先不可或缺的，就是編譯器與基本的函式庫，如果系統沒有安裝的話，請依照下面的方式安裝：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install build-essential</span><br></pre></td></tr></table></figure></p>\n<p><strong>安裝OpenGL Library</strong><br>接下來要把我們會用到的 Library 裝上去，首先安裝 OpenGL Library<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libgl1-mesa-dev</span><br></pre></td></tr></table></figure></p>\n<p><strong>安裝OpenGL Utilities</strong><br>OpenGL Utilities 是一組建構於 OpenGL Library 之上的工具組，提供許多很方便的函式，使 OpenGL 更強大且更容易使用。 接下來我們安裝OpenGL Utilities</p>\n<blockquote>\n<p>在Linux下你需要链接libGL.so库文件，这需要添加-lGL到你的链接器设置中。如果找不到这个库你可能需要安装Mesa，NVidia或AMD的开发包，</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libglu1-mesa-dev</span><br></pre></td></tr></table></figure>\n<p><strong>安裝GLFW/GLFW3</strong><br>GLFW是一个专门针对OpenGL的C语言库，它提供了一些渲染物体所需的最低限度的接口。它允许用户创建OpenGL上下文，定义窗口参数以及处理用户输入，这正是我们需要的。</p>\n<p>GLFW可以从它官方网站的<a href=\"http://www.glfw.org/download.html\" target=\"_blank\" rel=\"noopener\">下载页</a>上获取。</p>\n<p>参考网站<a href=\"https://stackoverflow.com/questions/17768008/how-to-build-install-glfw-3-and-use-it-in-a-linux-project\" target=\"_blank\" rel=\"noopener\">How to build &amp; install GLFW 3 and use it in a Linux project</a><br>解压后,</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install cmake</span><br><span class=\"line\"></span><br><span class=\"line\">$ cmake -G <span class=\"string\">\"Unix Makefiles\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo apt-get build-dep glfw</span><br><span class=\"line\">Reading package lists... Done</span><br><span class=\"line\">Building dependency tree</span><br><span class=\"line\">Reading state information... Done</span><br><span class=\"line\">0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo make</span><br><span class=\"line\">$ sudo make install</span><br><span class=\"line\"></span><br><span class=\"line\">Install the project...</span><br><span class=\"line\">-- Install configuration: <span class=\"string\">\"\"</span></span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/include/GLFW</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/include/GLFW/glfw3.h</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/include/GLFW/glfw3native.h</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/cmake/glfw3/glfw3Config.cmake</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/cmake/glfw3/glfw3ConfigVersion.cmake</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/cmake/glfw3/glfw3Targets.cmake</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/cmake/glfw3/glfw3Targets-noconfig.cmake</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/pkgconfig/glfw3.pc</span><br><span class=\"line\">-- Installing: /usr/<span class=\"built_in\">local</span>/lib/libglfw3.a</span><br></pre></td></tr></table></figure>\n<p><strong>从<a href=\"http://www.glfw.org/docs/3.0/quick.html\" target=\"_blank\" rel=\"noopener\">测试源码网站</a>复制案例代码测试</strong><br>该案例中#include <glfw glfw3.h=\"\"></glfw></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ g++ -std=c++11 -c main.cpp</span><br><span class=\"line\"></span><br><span class=\"line\">$ ./main.o</span><br><span class=\"line\">bash: ./main.o: cannot execute binary file: Exec format error  &amp;lt;==执行main.o提示不是二进制可执行文件</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ g++ main.o -o main.exec -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi</span><br><span class=\"line\">/usr/bin/ld: //usr/<span class=\"built_in\">local</span>/lib/libglfw3.a(vulkan.c.o): undefined reference to symbol <span class=\"string\">'dlclose@@GLIBC_2.2.5'</span></span><br><span class=\"line\">//lib/x86_64-linux-gnu/libdl.so.2: error adding symbols: DSO missing from <span class=\"built_in\">command</span> line</span><br><span class=\"line\">collect2: error: ld returned 1 <span class=\"built_in\">exit</span> status</span><br></pre></td></tr></table></figure>\n<p>You may also need to add the linker options -ldl -lXinerama -lXcursor to get it to work correctly if you are getting undefined references to <strong>dlclose</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ g++ main.o -o main.exec -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor</span><br><span class=\"line\"></span><br><span class=\"line\">$ ./main.exec</span><br></pre></td></tr></table></figure>\n<p>-l<library>  告訴 gcc 去連結指定 Library<br>-o<file>     指定執行檔的輸出名字</file></library></p>\n<p>执行:</p>\n<p>$ ./main.exec</p>\n<p><del>*<em>安装glut\\</em>*</del></p>\n<p><del>```sh<br>sudo apt-get install libglut-dev<br>```</del></p>\n<p><del>沒有libglut-dev可以改用<br>```sh<br>sudo apt-get install freeglut3-dev<br>```</del></p>\n<p><del>設定編譯參數與編譯<br>在這之前，我們需要一個測試範例，example.c</del> <a href=\"https://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment\" target=\"_blank\" rel=\"noopener\">如下</a>：</p>\n<p><del>有了測試範例、基礎編譯環境與各個 OpenGL 相關的函式庫之後，我們所需要做的就是告訴編譯器我們有安裝 OpenGL 函式庫，編譯程式時要連結這些函式庫。</del></p>\n<p><del>gcc example.c -o example.out -lGL -lGLU -lglut<br>因為我們安裝了 OpenGL Utility Toolkit ，它是建立在 OpenGL Utilities 與 OpenGL Library 之上，因此我們可以簡單連結 OpenGL Utility Toolkit 的函式庫就可以達到我們的目地了。下面的編譯參數跟上面的是同樣效果：</del></p>\n<p><del>gcc example.c -o example.out -lglut<br>下面簡單說明一下所使用的 gcc 參數</del></p>\n<p><del>-l<library>  告訴 gcc 去連結指定 Library<br>-o<file>     指定執行檔的輸出名字</file></library></del></p>\n<p><del>執行<br>接下來我們就可以來看看我們的結果，如果看到右圖，代表成功了!~<br>./example.out</del></p>\n<p><strong>编译和链接GLEW</strong></p>\n<p>对于用GCC编译的Linux用户建议使用这个命令行选项-lGLEW -lglfw3 -lGL -lX11 -lpthread -lXrandr -lXi。没有正确链接相应的库会产生 undefined reference(未定义的引用) 这个错误。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get build-dep glew</span><br><span class=\"line\">Reading package lists... Done</span><br><span class=\"line\">Building dependency tree       </span><br><span class=\"line\">Reading state information... Done</span><br><span class=\"line\">0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo make</span><br><span class=\"line\">$ sudo make install</span><br></pre></td></tr></table></figure>\n<p>==========</p>\n<p><strong>测试教程中的案例代码</strong></p>\n<p>复制 [代码hello_window.cpp][<a href=\"https://github.com/timtingwei/LearnOpenGL/src/1.getting_started/1.1.hello_window/hello_window.cpp\" target=\"_blank\" rel=\"noopener\">https://github.com/timtingwei/LearnOpenGL/src/1.getting_started/1.1.hello_window/hello_window.cpp</a>]<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ g++ -std=c++11 hello_window.cpp -lGLEW -lGL -lGLU -lglfw3 -lX11 -lXxf86vm -lXrandr -lpthread -lXi -ldl -lXinerama -lXcursor</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">a.out  hello_window.cpp</span><br><span class=\"line\">$ ./a.out</span><br><span class=\"line\">Starting GLFW context, OpenGL 3.3</span><br></pre></td></tr></table></figure></p>\n<p>看到初始化窗口，代表成功。</p>\n<p><strong>编译后窗口透明问题</strong><br>虽然窗口初始化成功, 但不知道我的窗口为什么是透明的, 难道是ubuntu的原因吗？<br>Render部分再加入两行代码<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glClearColor(<span class=\"number\">0.2f</span>, <span class=\"number\">0.3f</span>, <span class=\"number\">0.3f</span>, <span class=\"number\">1.0f</span>);</span><br><span class=\"line\">glClear(GL_COLOR_BUFFER_BIT);</span><br></pre></td></tr></table></figure></p>\n<p><strong>编译后libGLEW.so.2.1: No such file or directory 问题</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">..</span><br><span class=\"line\">$ ./a.out</span><br><span class=\"line\">./a.out: error <span class=\"keyword\">while</span> loading shared libraries: libGLEW.so.2.1: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure>\n<p>查询<a href=\"https://stackoverflow.com/questions/26372359/error-loading-shared-library-glew\" target=\"_blank\" rel=\"noopener\">stackoverflow libGLEW相关问题</a><br>得到libGLEW在lib64下, 于是便创建软link<br>$ sudo ln -s /usr/lib64/libGLEW.so.2.1 /usr/lib/libGLEW.so.2.1</p>\n<p>==========</p>\n<p>refwebsite:<br><a href=\"https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/02%20Creating%20a%20window/\" target=\"_blank\" rel=\"noopener\">https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/02%20Creating%20a%20window/</a><br><a href=\"https://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment\" target=\"_blank\" rel=\"noopener\">https://wiki.ubuntu-tw.org/index.php?title=Howto_Install_OpenGL_Development_Environment</a><br><a href=\"https://stackoverflow.com/questions/17768008/how-to-build-install-glfw-3-and-use-it-in-a-linux-project\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/17768008/how-to-build-install-glfw-3-and-use-it-in-a-linux-project</a><br><a href=\"http://www.glfw.org/docs/3.0/quick.html\" target=\"_blank\" rel=\"noopener\">http://www.glfw.org/docs/3.0/quick.html</a><br><a href=\"https://stackoverflow.com/questions/26372359/error-loading-shared-library-glew\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/26372359/error-loading-shared-library-glew</a><br><a href=\"http://www.glfw.org/download.html\" target=\"_blank\" rel=\"noopener\">http://www.glfw.org/download.html</a></p>\n"},{"title":"Markdown删除线","date":"2017-12-21T23:24:06.000Z","_content":"\\~\\~删除一句\\~\\~\n~~删除一句~~\n\n\n\\~\\~删除\n多行\\~\\~\n~~删除\n多行~~\n\n\\~\\~删除包含语法\\\\[mituh's notes\\\\]\\\\[timtingwei.github.io\\\\]\\~\\~\n~~删除包含语法\\[mituh's notes\\]\\[timtingwei.github.io\\]~~\n\n\\====\n不知道还有其他方法否？\n\n\\====\nrefwebsite:\nhttps://en.wikipedia.org/wiki/Markdown\n","source":"_posts/markdown-delete-line.md","raw":"---\ntitle: Markdown删除线\ndate: 2017-12-22 07:24:06\ntags: markdown\n---\n\\~\\~删除一句\\~\\~\n~~删除一句~~\n\n\n\\~\\~删除\n多行\\~\\~\n~~删除\n多行~~\n\n\\~\\~删除包含语法\\\\[mituh's notes\\\\]\\\\[timtingwei.github.io\\\\]\\~\\~\n~~删除包含语法\\[mituh's notes\\]\\[timtingwei.github.io\\]~~\n\n\\====\n不知道还有其他方法否？\n\n\\====\nrefwebsite:\nhttps://en.wikipedia.org/wiki/Markdown\n","slug":"markdown-delete-line","published":1,"updated":"2017-12-21T23:35:57.117Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4e8000hm5draam9zbxn","content":"<p>~~删除一句~~<br><del>删除一句</del></p>\n<p>~~删除<br>多行~~<br><del>删除<br>多行</del></p>\n<p>~~删除包含语法\\[mituh’s notes\\]\\[timtingwei.github.io\\]~~<br><del>删除包含语法[mituh’s notes][timtingwei.github.io]</del></p>\n<p>\\====<br>不知道还有其他方法否？</p>\n<p>\\====<br>refwebsite:<br><a href=\"https://en.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Markdown</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>~~删除一句~~<br><del>删除一句</del></p>\n<p>~~删除<br>多行~~<br><del>删除<br>多行</del></p>\n<p>~~删除包含语法\\[mituh’s notes\\]\\[timtingwei.github.io\\]~~<br><del>删除包含语法[mituh’s notes][timtingwei.github.io]</del></p>\n<p>\\====<br>不知道还有其他方法否？</p>\n<p>\\====<br>refwebsite:<br><a href=\"https://en.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Markdown</a></p>\n"},{"title":"(转载)谈编程语言","date":"2017-12-24T05:26:19.000Z","_content":"\n**文章目录**\n[Bruce Eckel：编程生涯](#Bruce-Eckel：编程生涯)\n[Peter Norvig：十年学会编程](#Peter-Norvig：十年学会编程)\n\n\n转载自[编程随想 - program think](https://program-think.blogspot.com/2012/05/weekly-share-5.html)关于编程的心态定位，实践方法经典， 对我有所启发的两篇。\n\n----\n\n# Bruce Eckel：编程生涯\n\n作者 Bruce Eckel 是编程界的大牛，著有大名鼎鼎的《Thinking in C++》和《Thinking in Java》。\n本文是他对程序员（尤其是新手）的忠告。\n\n================================\n\n大家总是问一个错误的问题：“我应该学习C++还是Java？”在本文中，我将告诉大伙儿：对于选择编程生涯真正需要关注的是哪些问题。\n\n请注意，这篇文章的目标读者并不是那些已经做出自己选择的人。（对于这些人而言）你会继续自己的编程生涯，而不管别人会怎么说。因为它已经渗透到你的血液中，你已经无法摆脱。你已经知道答案：C++、Java、Shell脚本、Python、还有其它一大堆的语言和技术，你都理所当然地会去学习。甚至有可能你才仅仅14岁，就已经知道好几种不同的语言。\n\n问我这样的问题的人可能来自其他行业，或者来自诸如Web开发之类的领域。他们知道HTML是一种类编程语言，而且想尝试构建某些更大型的应用。但我特别希望，当你在问这个问题时，你已经意识到了想要在计算机领域取得成功，你需要掌握自学能力，而且永不停息。\n\n**在这个领域做得越多，我越觉得软件开发比任何行业都更接近于写作。** 我们从来不知道是什么造就了优秀的作者，我们只知道什么时候我们会喜欢某个人的文字。编程不是一种工程，仅需要把东西从入口倒进去，然后再转动手柄。把软件开发看成确定性的，是一个诱人的想法。因为这个想法，人们总想搞出一些工具来帮我们开发出想要的软件。但是我的经验告诉我，事实并非如此——人的重要性远高于流程。而软件是否运行在一部精确的机器上已经越来越不重要了——这犹如测不准原理对人类的影响。\n\n我的父亲是造房子的，小时候我偶尔会帮忙打下手，放放砖块之类。他和他的木工告诉我，他们是为我好才让我干这些活——这样我就不至于走入这个行业。事实确实是这样。\n\n我们不妨把软件开发比作盖房子。造房子的人当然不可能完全一样。这些人里面有：混凝土工、屋顶工、管道工、电工、砖瓦工、水泥工、瓦片工、搬运工、粗木工、细木工。当然，还有工头。每个工种都需要相应的技能，这些技能都需要花时间和精力去掌握。**跟软件开发一样，造房子也是一个“建立/推翻”的过程。如果你想很快地获得回报，你可能从搬运工和砖瓦工开始做，这样的话，你无需太多的学习曲线就可以获得回报。当需求很多时，你的工作会很稳固，甚至收入也可能提升——如果没有足够的人手的话。但是，一旦行情不妙，木匠甚至工头就可能把砖瓦工一脚踢开。**\n\n当互联网刚刚兴起时，仅仅是花一点时间学习HTML，你就可以得到一份薪水丰厚的工作。但是当形势惨淡时，对于技能的要求更高了——HTML程序员（就像搬运工和砖瓦工一样）第一个被抛弃了，而拥有更高技能的程序员则留了下来。\n\n我想说的是： **除非你准备活到老学到老，不然的话，不要进入这个行业！编程看起来似乎是一个高收入而又稳定的工作。但要做到这一点，唯一的途径是：始终让自己更有价值。**\n\n当然，你总能找到例外。总有那么一些人，仅仅学了一门编程语言，就可以胜任留在一个岗位上，而不需要增长他的技能。但他们只是幸免于难而已，他们最终无疑是很脆弱的。为了不让自己变得脆弱，你需要持续的提高自己，通过阅读、加入用户组、参加研讨会...... 你学得越深入，你就越有价值，也就意味着你有更好的职业前景，可以配得上更高的薪水。\n\n**另一个方法是：先大致了解这个领域，找到最适合你的地方。**打个比方：我的兄弟对软件很感兴趣，也入了这行，只不过他的工作是安装、维修、升级电脑。他总是一丝不苟，所以当他把电脑搞好，一定会很完美——不光是软件，连电线都会被仔细地捆好。他总是生意兴隆，远超出他的精力所能及。他甚至都不用担心 .com 泡沫的崩溃。显然他的饭碗不容易被抢走。\n\n我在高校里待了很久，甚至还在UCLA（加州大学洛杉矶分校）进修博士学位，后来又幸运地终止了。我说“幸运”是因为我不再喜欢呆在学校，而我之前在高校待了那么久，只是因为我很享受它。但我所享受的，基本上是不务正业的东西——艺术和舞蹈课，在校报工作，还有一小撮计算机课程（之所以说计算机课程“不务正业”，是因为我本科是物理专业，研究生才是计算机专业）。虽然我在学术上远谈不上卓越（有意思的是很多当时也许不会接受我这个学生的学校现在却用我的书做教材）。我真的很享受作为学生的日子，当我完成博士课程，也许会以一个教授的身份终老一生。\n\n但就如现在看到的，我在学校里最大的收获恰恰来自我那些“不务正业”的课程，它们拓展了我的思维，使之超越了“我们已经知道的东西”。**在计算机领域中，你总是为某种目标而编程。你对目标了解得越多，你就做得越好。我遇到过一些欧洲的研究生，他们需要结合其它专业领域来搞编程，他们的论文需要解决这个专业领域的特定的问题。**\n\n了解编程之外的领域，将会极大得提高你解决问题的能力 （就如同多学几种编程语言将极大地提高你的编程技能）。很多时候，我发现仅仅学习计算机专业的学生，比那些（除了计算机之外）拥有其它背景的学生，在思维上有更多的局限性。因为后者有着更严谨的思维，也不那么容易想当然。\n\n有一次我组织了一次会议，其中一个议题是：理想的应聘者有哪些特征：\n◇把学习当成生活方式。比如：你应该知道不止一种语言，没有什么比学习一门新语言更能让你开阔眼界了。\n> * 知道如何获取知识\n> * Study prior art\n> * 善用工具\n> * 学会把事情简化\n> * 理解业务\n> * **为自己的错误负责。“我就是这样的”是不能接受的托词。能找到自己的失误。**\n> * 成为一个领导者，善于沟通和激励。\n> * 搞清楚你在为谁服务\n> * **没有绝对正确的答案（更好的方法总是存在的）。展示并讨论你的代码，不要带着感情因素——你的代码并不等于你本人。**\n> * **明白完美是渐进的**\n\n适当尝试一些冒险——尤其是能令人感到害怕的冒险。当你尝试之后，将体会到出乎意料的兴奋。（在冒险的过程中）最好不要刻意去计划某个特定的结果。当你过于注重结果，你往往会错过那些真正有价值的问题。我的冒险往往是这样开始的——“我们先做些试验，看看它会把我们带到什么地方”。\n\n或许某些人会对我的回答感到失望，并回复我说：“是的，这很有趣也很有用。但我到底应该学什么？C++还是Java？” 我再重复一次：并不是所有的问题都有一个唯一的简单的答案。**问题的关键不在于选择某个编程语言，然后掌握之。问题的关键在于：持续学习，并且很多时候，有不止一个选择。** 相信我所说的，你的生活会更精彩！\n\n原文出处：\nhttp://www.artima.com/weblogs/viewpost.jsp?thread=259358\n\n\n------\n\n\n# Peter Norvig：十年学会编程\n\n作者 Peter Norvig 是计算机科学家，Google 的研究总监。\n在本文中，Peter Norvig会告诉你：为什么急功近利地学习软件开发技术是没效果滴？\n\n================================\n\n## 为啥都想速成？\n\n随便逛一下书店，你会看到《7天自学Java》等诸如此类的N天甚至N小时学习Visual Basic、Windows、Internet的书。我用亚马逊网站的搜索功能，出版年份选1992年以后，书名关键词是：“天”、“自学”、“教你”，查到248个结果，前78个是计算机类图书，第79个是《30天学孟加拉语》。我用“天”换成“小时”，结果更惊人，有多达253本书，前77本是计算机图书，第78是《24小时自学语法句式》。在前200名中，96%是计算机的书。\n\n结论就是：要么人们急于学习电脑，要么计算机比其他东西学起来要异常简单。没有任何书是关于几天学习贝多芬或量子物理的，甚至连犬类装扮都没有。费雷森（Felleisen）等人在其著作《如何设计程序》中同意这个趋势，其中提到：“坏设计很简单，笨蛋才用21天学，尽管他们还是真傻。”\n\n让我们看看《三日学会C++》这个书名意味着什么：\n\n◇学习：\n**三天内你可能没有时间写出有意义的程序，或者从中积累经验。**你不可能有时间去跟职业编程者一起去理解在C++环境下的状况。简而言之，你没有充足的时间学很多。所以这本书只能说肤浅的知识。正如亚历山大·波普（Alexander Pope）所言：一知半解是很危险的。\n\n◇C++：\n**三天内你可能学会C++的句法（如果你已经了解其他的语言），但你还不会使用它。**打个比方，假如你是个Basic程序员，你可能写出Basic风格的C++程序，而无法理解C++的真实好处。那要点是什么？艾伦·佩里斯(Alan Perlis)曾经说过：“一门不能影响你编程观点的语言不足学的。”有可能你学了一点点C++（或者诸如Javascript、Flex之类），因为你需要和现成的工具接口以完成手头的任务。这种情况下，你不是在学习如何编程，只是在学习如何完成任务。\n\n◇三日：\n不幸地是，这远远不够，下一部分会详细讲。\n\n## 如何用十年掌握编程\n\n研究人员（Bloom (1985), Bryan & Harter (1899), Hayes (1989), Simmon & Chase (1973)）得出结论：**想要在诸多领域达到职业水平需要十年，比如国际象棋，作曲，电报操作，绘画，弹钢琴，游泳，网球以及神经心理学和拓扑学的研究。关键是精心练习，只是一遍一遍地重复是不够的，必须挑战恰好超越你能限的事情，尝试并思考你的表现，并自我矫正。周而复始。这并无捷径！**4岁的音乐奇才莫扎特用了13年才能创作世界级的音乐。另外，披头士乐队似乎在1964年的埃德·苏利文（ Ed Sullivan show）演出中一炮而红，但是他们自从1957年就在利物浦和汉堡的酒吧演出，在取得广泛关注后，第一部重量级作品《佩珀军士》（Sgt. Peppers）是在1967年发行。马尔科姆·格拉德威尔（Malcolm Gladwell）撰文描述了一项针对柏林音乐学院学生的研究，他们被分为尖子，中等和不足三类，并被问到他们练琴的情况：\n所有三组中的人，开始学琴的年龄大概相差无几，五岁左右。在刚开始的几年，所有人练习量也差不多，一周两三个小时。自八岁开始，实质性变化就有了。那些精英学生开始比其他人练习更多：九岁的时候一周六个小时，十二岁的时候一周八个小时，十四岁的时候一周十六个小时，一直到二十岁的时候一周要超过三十小时。截止到二十岁，在他们的生涯里已经有总计一万小时练琴。仅仅表现可以的那部分学生加起来是八千小时，那些未来的音乐老师有四千小时。\n\n所以，更确切地说，一万小时，而非十年，是个神奇之数。萨缪尔·约翰逊（Samuel Johnson, 1709-1784）认为还需更长时间：“卓越乃一生之追求，而非其它”。 乔叟（Chaucer, 1340-1400）抱怨道\"the lyf so short, the craft so long to lerne.\" （生之有限，学也无涯）。希波克拉底（Hippocrates, c. 400BC）因这句话被世人所知：\"ars longa, vita brevis\"（译注：拉丁语，意为“艺无尽，生有涯”），更长的版本是 \"Ars longa, vita brevis, occasio praeceps, experimentum periculosum, iudicium difficile\"，翻译成英文就是 \"Life is short, (the) craft long, opportunity fleeting, experiment treacherous, judgment difficult.\" （生有涯，艺无尽，机遇瞬逝，践行误导，决断不易）。\n\n## 我的编程成功秘笈是：\n\n> * 首先要对编程感兴趣，能从编程中得到乐趣。一定要让它足够有趣，因为你要保持你的兴趣长达十年。\n\n> * **与别的程序员交流；阅读别人的代码——这比看任何书或参加培训课都重要。**\n\n> * 实践。最好的学习乃实践。俗话说：“编程的至高境界一定要通过充分的实践才能达到，而个人的能力可通过不懈努力获得显著提升。” (p. 366) **“最有效率的学习需要明确的目标，适当的难度，知识回馈，并容许重复或修正错误。”** (p. 20-21) 《实践认知：每日的思维、数学及文化》（Cognition in Practice: Mind, Mathematics, and Culture in Everyday Life） 在这方面可做参考。\n\n> * 如果你愿意，花四年学习大学课程（或者再加上读研）。这将给你赢得某些工作机会，并给予你在该领域的深层见解。**但如果你不喜欢学校的学习，你同样可以在工作中获得相似的经验。无论如何，单靠书本是远远不够的。**“学习计算机科学不会让你成为编程专家，如同学习绘画和色彩理论不会让你成为画家一样”。这是埃里克·雷蒙德（Eric Raymond）说的，他是《新黑客字典》（The New Hacker's Dictionary）的作者。我雇用过的最优秀程序员，只有高中文凭。但他开发过许多伟大软件，有自己的新闻组，通过公司认股赚的钱就让他买下了自己的夜店。\n\n> * 和其他程序员一起参与工程项目。在某些项目中担当最优秀程序员，在另一些项目中充当最差劲程序员。**充当领头羊的时候，你要测试你领导一项工程的能力，并用你的视野来激发他人；如果在项目组中垫底，就应该学习其它牛人在做些啥，以及他们不喜欢做的（看他们把哪些活让给你做）。**\n\n> * 继续别人的工程项目。去理解先前程序员写的程序。**学习如何理解并解决先前程序员没有考虑到的问题。思考你的程序该如何设计以便让之后的程序员更容易维护。**\n\n> * 至少学6种程序语言。其中包括一种支持类抽象的（Java和C++），一种支持函数抽象的（如Lisp或ML），一种支持语义抽象的（Lisp），一种支援声明规范的（如Prolog或C++模板），还有一种支援协程的（Icon或Scheme），另外一种支持并发的（Sisal）。\n\n> * 记住，在“计算机科学”里有“计算机”一词。理解计算机执行你的代码的时候花费的时间。比如：从内存中取一个字（考虑有无缓存未命中情形），连续从磁盘读字，或者在磁盘中定位。\n\n> * 参加语言标准化工作。这可能是有关 ANSI C++ 委员会，也可能是决定你编码风格是两格缩进或四格缩进。无论如何，你要知道其他人对语言的喜好程度，有时还要想想他们为什么喜欢这样。\n\n> * 知道自己应该在何时脱身于语言标准化\n\n所有上述这些，很难通过书本的学习来达到。我头一个孩子出生时，我读了所有的“如何做”（How To）系列的书籍，却依然对育婴毫无头绪。30个月后，我第二个孩子出生，我还需要温习一下那些书吗？绝对不！相反，我完全可以参照个人经验，而结果相当有效。这更让我确信：我的经验胜过那些专家们写的上千页文字。\n\n弗雷德·布鲁克斯（Fred Brooks）在《没有银弹》（No Silver Bullet）一书给出了寻找顶级设计师的三条建议：\n> * 尽早系统地识别出顶级设计师。\n> * 分配一个人作为其职业规划的导师。\n> * **给予机遇让成长中的设计师互相磨砺。**\n\n此处假定有部分人已经有成为伟大设计师的潜质，你所需的就是要诱导他们。艾伦·佩里斯（Alan Perlis）一针见血地指出：**\"假如人人都可以学雕刻，那就得教米开朗基罗如何不去干雕刻。对于伟大程序员，也是如此。”**\n\n所以，简单地买一本Java书，你或许能找到些有用的东西，但绝不会让你在24小时内甚至24天抑或24月内，成为行家里手。\n\n原文出处：\nhttp://norvig.com/21-days.html\n","source":"_posts/how-to-learn-program.md","raw":"---\ntitle: (转载)谈编程语言\ndate: 2017-12-24 13:26:19\ntags: \n- program\n- learn \n---\n\n**文章目录**\n[Bruce Eckel：编程生涯](#Bruce-Eckel：编程生涯)\n[Peter Norvig：十年学会编程](#Peter-Norvig：十年学会编程)\n\n\n转载自[编程随想 - program think](https://program-think.blogspot.com/2012/05/weekly-share-5.html)关于编程的心态定位，实践方法经典， 对我有所启发的两篇。\n\n----\n\n# Bruce Eckel：编程生涯\n\n作者 Bruce Eckel 是编程界的大牛，著有大名鼎鼎的《Thinking in C++》和《Thinking in Java》。\n本文是他对程序员（尤其是新手）的忠告。\n\n================================\n\n大家总是问一个错误的问题：“我应该学习C++还是Java？”在本文中，我将告诉大伙儿：对于选择编程生涯真正需要关注的是哪些问题。\n\n请注意，这篇文章的目标读者并不是那些已经做出自己选择的人。（对于这些人而言）你会继续自己的编程生涯，而不管别人会怎么说。因为它已经渗透到你的血液中，你已经无法摆脱。你已经知道答案：C++、Java、Shell脚本、Python、还有其它一大堆的语言和技术，你都理所当然地会去学习。甚至有可能你才仅仅14岁，就已经知道好几种不同的语言。\n\n问我这样的问题的人可能来自其他行业，或者来自诸如Web开发之类的领域。他们知道HTML是一种类编程语言，而且想尝试构建某些更大型的应用。但我特别希望，当你在问这个问题时，你已经意识到了想要在计算机领域取得成功，你需要掌握自学能力，而且永不停息。\n\n**在这个领域做得越多，我越觉得软件开发比任何行业都更接近于写作。** 我们从来不知道是什么造就了优秀的作者，我们只知道什么时候我们会喜欢某个人的文字。编程不是一种工程，仅需要把东西从入口倒进去，然后再转动手柄。把软件开发看成确定性的，是一个诱人的想法。因为这个想法，人们总想搞出一些工具来帮我们开发出想要的软件。但是我的经验告诉我，事实并非如此——人的重要性远高于流程。而软件是否运行在一部精确的机器上已经越来越不重要了——这犹如测不准原理对人类的影响。\n\n我的父亲是造房子的，小时候我偶尔会帮忙打下手，放放砖块之类。他和他的木工告诉我，他们是为我好才让我干这些活——这样我就不至于走入这个行业。事实确实是这样。\n\n我们不妨把软件开发比作盖房子。造房子的人当然不可能完全一样。这些人里面有：混凝土工、屋顶工、管道工、电工、砖瓦工、水泥工、瓦片工、搬运工、粗木工、细木工。当然，还有工头。每个工种都需要相应的技能，这些技能都需要花时间和精力去掌握。**跟软件开发一样，造房子也是一个“建立/推翻”的过程。如果你想很快地获得回报，你可能从搬运工和砖瓦工开始做，这样的话，你无需太多的学习曲线就可以获得回报。当需求很多时，你的工作会很稳固，甚至收入也可能提升——如果没有足够的人手的话。但是，一旦行情不妙，木匠甚至工头就可能把砖瓦工一脚踢开。**\n\n当互联网刚刚兴起时，仅仅是花一点时间学习HTML，你就可以得到一份薪水丰厚的工作。但是当形势惨淡时，对于技能的要求更高了——HTML程序员（就像搬运工和砖瓦工一样）第一个被抛弃了，而拥有更高技能的程序员则留了下来。\n\n我想说的是： **除非你准备活到老学到老，不然的话，不要进入这个行业！编程看起来似乎是一个高收入而又稳定的工作。但要做到这一点，唯一的途径是：始终让自己更有价值。**\n\n当然，你总能找到例外。总有那么一些人，仅仅学了一门编程语言，就可以胜任留在一个岗位上，而不需要增长他的技能。但他们只是幸免于难而已，他们最终无疑是很脆弱的。为了不让自己变得脆弱，你需要持续的提高自己，通过阅读、加入用户组、参加研讨会...... 你学得越深入，你就越有价值，也就意味着你有更好的职业前景，可以配得上更高的薪水。\n\n**另一个方法是：先大致了解这个领域，找到最适合你的地方。**打个比方：我的兄弟对软件很感兴趣，也入了这行，只不过他的工作是安装、维修、升级电脑。他总是一丝不苟，所以当他把电脑搞好，一定会很完美——不光是软件，连电线都会被仔细地捆好。他总是生意兴隆，远超出他的精力所能及。他甚至都不用担心 .com 泡沫的崩溃。显然他的饭碗不容易被抢走。\n\n我在高校里待了很久，甚至还在UCLA（加州大学洛杉矶分校）进修博士学位，后来又幸运地终止了。我说“幸运”是因为我不再喜欢呆在学校，而我之前在高校待了那么久，只是因为我很享受它。但我所享受的，基本上是不务正业的东西——艺术和舞蹈课，在校报工作，还有一小撮计算机课程（之所以说计算机课程“不务正业”，是因为我本科是物理专业，研究生才是计算机专业）。虽然我在学术上远谈不上卓越（有意思的是很多当时也许不会接受我这个学生的学校现在却用我的书做教材）。我真的很享受作为学生的日子，当我完成博士课程，也许会以一个教授的身份终老一生。\n\n但就如现在看到的，我在学校里最大的收获恰恰来自我那些“不务正业”的课程，它们拓展了我的思维，使之超越了“我们已经知道的东西”。**在计算机领域中，你总是为某种目标而编程。你对目标了解得越多，你就做得越好。我遇到过一些欧洲的研究生，他们需要结合其它专业领域来搞编程，他们的论文需要解决这个专业领域的特定的问题。**\n\n了解编程之外的领域，将会极大得提高你解决问题的能力 （就如同多学几种编程语言将极大地提高你的编程技能）。很多时候，我发现仅仅学习计算机专业的学生，比那些（除了计算机之外）拥有其它背景的学生，在思维上有更多的局限性。因为后者有着更严谨的思维，也不那么容易想当然。\n\n有一次我组织了一次会议，其中一个议题是：理想的应聘者有哪些特征：\n◇把学习当成生活方式。比如：你应该知道不止一种语言，没有什么比学习一门新语言更能让你开阔眼界了。\n> * 知道如何获取知识\n> * Study prior art\n> * 善用工具\n> * 学会把事情简化\n> * 理解业务\n> * **为自己的错误负责。“我就是这样的”是不能接受的托词。能找到自己的失误。**\n> * 成为一个领导者，善于沟通和激励。\n> * 搞清楚你在为谁服务\n> * **没有绝对正确的答案（更好的方法总是存在的）。展示并讨论你的代码，不要带着感情因素——你的代码并不等于你本人。**\n> * **明白完美是渐进的**\n\n适当尝试一些冒险——尤其是能令人感到害怕的冒险。当你尝试之后，将体会到出乎意料的兴奋。（在冒险的过程中）最好不要刻意去计划某个特定的结果。当你过于注重结果，你往往会错过那些真正有价值的问题。我的冒险往往是这样开始的——“我们先做些试验，看看它会把我们带到什么地方”。\n\n或许某些人会对我的回答感到失望，并回复我说：“是的，这很有趣也很有用。但我到底应该学什么？C++还是Java？” 我再重复一次：并不是所有的问题都有一个唯一的简单的答案。**问题的关键不在于选择某个编程语言，然后掌握之。问题的关键在于：持续学习，并且很多时候，有不止一个选择。** 相信我所说的，你的生活会更精彩！\n\n原文出处：\nhttp://www.artima.com/weblogs/viewpost.jsp?thread=259358\n\n\n------\n\n\n# Peter Norvig：十年学会编程\n\n作者 Peter Norvig 是计算机科学家，Google 的研究总监。\n在本文中，Peter Norvig会告诉你：为什么急功近利地学习软件开发技术是没效果滴？\n\n================================\n\n## 为啥都想速成？\n\n随便逛一下书店，你会看到《7天自学Java》等诸如此类的N天甚至N小时学习Visual Basic、Windows、Internet的书。我用亚马逊网站的搜索功能，出版年份选1992年以后，书名关键词是：“天”、“自学”、“教你”，查到248个结果，前78个是计算机类图书，第79个是《30天学孟加拉语》。我用“天”换成“小时”，结果更惊人，有多达253本书，前77本是计算机图书，第78是《24小时自学语法句式》。在前200名中，96%是计算机的书。\n\n结论就是：要么人们急于学习电脑，要么计算机比其他东西学起来要异常简单。没有任何书是关于几天学习贝多芬或量子物理的，甚至连犬类装扮都没有。费雷森（Felleisen）等人在其著作《如何设计程序》中同意这个趋势，其中提到：“坏设计很简单，笨蛋才用21天学，尽管他们还是真傻。”\n\n让我们看看《三日学会C++》这个书名意味着什么：\n\n◇学习：\n**三天内你可能没有时间写出有意义的程序，或者从中积累经验。**你不可能有时间去跟职业编程者一起去理解在C++环境下的状况。简而言之，你没有充足的时间学很多。所以这本书只能说肤浅的知识。正如亚历山大·波普（Alexander Pope）所言：一知半解是很危险的。\n\n◇C++：\n**三天内你可能学会C++的句法（如果你已经了解其他的语言），但你还不会使用它。**打个比方，假如你是个Basic程序员，你可能写出Basic风格的C++程序，而无法理解C++的真实好处。那要点是什么？艾伦·佩里斯(Alan Perlis)曾经说过：“一门不能影响你编程观点的语言不足学的。”有可能你学了一点点C++（或者诸如Javascript、Flex之类），因为你需要和现成的工具接口以完成手头的任务。这种情况下，你不是在学习如何编程，只是在学习如何完成任务。\n\n◇三日：\n不幸地是，这远远不够，下一部分会详细讲。\n\n## 如何用十年掌握编程\n\n研究人员（Bloom (1985), Bryan & Harter (1899), Hayes (1989), Simmon & Chase (1973)）得出结论：**想要在诸多领域达到职业水平需要十年，比如国际象棋，作曲，电报操作，绘画，弹钢琴，游泳，网球以及神经心理学和拓扑学的研究。关键是精心练习，只是一遍一遍地重复是不够的，必须挑战恰好超越你能限的事情，尝试并思考你的表现，并自我矫正。周而复始。这并无捷径！**4岁的音乐奇才莫扎特用了13年才能创作世界级的音乐。另外，披头士乐队似乎在1964年的埃德·苏利文（ Ed Sullivan show）演出中一炮而红，但是他们自从1957年就在利物浦和汉堡的酒吧演出，在取得广泛关注后，第一部重量级作品《佩珀军士》（Sgt. Peppers）是在1967年发行。马尔科姆·格拉德威尔（Malcolm Gladwell）撰文描述了一项针对柏林音乐学院学生的研究，他们被分为尖子，中等和不足三类，并被问到他们练琴的情况：\n所有三组中的人，开始学琴的年龄大概相差无几，五岁左右。在刚开始的几年，所有人练习量也差不多，一周两三个小时。自八岁开始，实质性变化就有了。那些精英学生开始比其他人练习更多：九岁的时候一周六个小时，十二岁的时候一周八个小时，十四岁的时候一周十六个小时，一直到二十岁的时候一周要超过三十小时。截止到二十岁，在他们的生涯里已经有总计一万小时练琴。仅仅表现可以的那部分学生加起来是八千小时，那些未来的音乐老师有四千小时。\n\n所以，更确切地说，一万小时，而非十年，是个神奇之数。萨缪尔·约翰逊（Samuel Johnson, 1709-1784）认为还需更长时间：“卓越乃一生之追求，而非其它”。 乔叟（Chaucer, 1340-1400）抱怨道\"the lyf so short, the craft so long to lerne.\" （生之有限，学也无涯）。希波克拉底（Hippocrates, c. 400BC）因这句话被世人所知：\"ars longa, vita brevis\"（译注：拉丁语，意为“艺无尽，生有涯”），更长的版本是 \"Ars longa, vita brevis, occasio praeceps, experimentum periculosum, iudicium difficile\"，翻译成英文就是 \"Life is short, (the) craft long, opportunity fleeting, experiment treacherous, judgment difficult.\" （生有涯，艺无尽，机遇瞬逝，践行误导，决断不易）。\n\n## 我的编程成功秘笈是：\n\n> * 首先要对编程感兴趣，能从编程中得到乐趣。一定要让它足够有趣，因为你要保持你的兴趣长达十年。\n\n> * **与别的程序员交流；阅读别人的代码——这比看任何书或参加培训课都重要。**\n\n> * 实践。最好的学习乃实践。俗话说：“编程的至高境界一定要通过充分的实践才能达到，而个人的能力可通过不懈努力获得显著提升。” (p. 366) **“最有效率的学习需要明确的目标，适当的难度，知识回馈，并容许重复或修正错误。”** (p. 20-21) 《实践认知：每日的思维、数学及文化》（Cognition in Practice: Mind, Mathematics, and Culture in Everyday Life） 在这方面可做参考。\n\n> * 如果你愿意，花四年学习大学课程（或者再加上读研）。这将给你赢得某些工作机会，并给予你在该领域的深层见解。**但如果你不喜欢学校的学习，你同样可以在工作中获得相似的经验。无论如何，单靠书本是远远不够的。**“学习计算机科学不会让你成为编程专家，如同学习绘画和色彩理论不会让你成为画家一样”。这是埃里克·雷蒙德（Eric Raymond）说的，他是《新黑客字典》（The New Hacker's Dictionary）的作者。我雇用过的最优秀程序员，只有高中文凭。但他开发过许多伟大软件，有自己的新闻组，通过公司认股赚的钱就让他买下了自己的夜店。\n\n> * 和其他程序员一起参与工程项目。在某些项目中担当最优秀程序员，在另一些项目中充当最差劲程序员。**充当领头羊的时候，你要测试你领导一项工程的能力，并用你的视野来激发他人；如果在项目组中垫底，就应该学习其它牛人在做些啥，以及他们不喜欢做的（看他们把哪些活让给你做）。**\n\n> * 继续别人的工程项目。去理解先前程序员写的程序。**学习如何理解并解决先前程序员没有考虑到的问题。思考你的程序该如何设计以便让之后的程序员更容易维护。**\n\n> * 至少学6种程序语言。其中包括一种支持类抽象的（Java和C++），一种支持函数抽象的（如Lisp或ML），一种支持语义抽象的（Lisp），一种支援声明规范的（如Prolog或C++模板），还有一种支援协程的（Icon或Scheme），另外一种支持并发的（Sisal）。\n\n> * 记住，在“计算机科学”里有“计算机”一词。理解计算机执行你的代码的时候花费的时间。比如：从内存中取一个字（考虑有无缓存未命中情形），连续从磁盘读字，或者在磁盘中定位。\n\n> * 参加语言标准化工作。这可能是有关 ANSI C++ 委员会，也可能是决定你编码风格是两格缩进或四格缩进。无论如何，你要知道其他人对语言的喜好程度，有时还要想想他们为什么喜欢这样。\n\n> * 知道自己应该在何时脱身于语言标准化\n\n所有上述这些，很难通过书本的学习来达到。我头一个孩子出生时，我读了所有的“如何做”（How To）系列的书籍，却依然对育婴毫无头绪。30个月后，我第二个孩子出生，我还需要温习一下那些书吗？绝对不！相反，我完全可以参照个人经验，而结果相当有效。这更让我确信：我的经验胜过那些专家们写的上千页文字。\n\n弗雷德·布鲁克斯（Fred Brooks）在《没有银弹》（No Silver Bullet）一书给出了寻找顶级设计师的三条建议：\n> * 尽早系统地识别出顶级设计师。\n> * 分配一个人作为其职业规划的导师。\n> * **给予机遇让成长中的设计师互相磨砺。**\n\n此处假定有部分人已经有成为伟大设计师的潜质，你所需的就是要诱导他们。艾伦·佩里斯（Alan Perlis）一针见血地指出：**\"假如人人都可以学雕刻，那就得教米开朗基罗如何不去干雕刻。对于伟大程序员，也是如此。”**\n\n所以，简单地买一本Java书，你或许能找到些有用的东西，但绝不会让你在24小时内甚至24天抑或24月内，成为行家里手。\n\n原文出处：\nhttp://norvig.com/21-days.html\n","slug":"how-to-learn-program","published":1,"updated":"2017-12-24T06:43:12.541Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbkfc4eb000jm5dr428znpor","content":"<p><strong>文章目录</strong><br><a href=\"#Bruce-Eckel：编程生涯\">Bruce Eckel：编程生涯</a><br><a href=\"#Peter-Norvig：十年学会编程\">Peter Norvig：十年学会编程</a></p>\n<p>转载自<a href=\"https://program-think.blogspot.com/2012/05/weekly-share-5.html\" target=\"_blank\" rel=\"noopener\">编程随想 - program think</a>关于编程的心态定位，实践方法经典， 对我有所启发的两篇。</p>\n<hr>\n<h1 id=\"Bruce-Eckel：编程生涯\"><a href=\"#Bruce-Eckel：编程生涯\" class=\"headerlink\" title=\"Bruce Eckel：编程生涯\"></a>Bruce Eckel：编程生涯</h1><p>作者 Bruce Eckel 是编程界的大牛，著有大名鼎鼎的《Thinking in C++》和《Thinking in Java》。<br>本文是他对程序员（尤其是新手）的忠告。</p>\n<p>================================</p>\n<p>大家总是问一个错误的问题：“我应该学习C++还是Java？”在本文中，我将告诉大伙儿：对于选择编程生涯真正需要关注的是哪些问题。</p>\n<p>请注意，这篇文章的目标读者并不是那些已经做出自己选择的人。（对于这些人而言）你会继续自己的编程生涯，而不管别人会怎么说。因为它已经渗透到你的血液中，你已经无法摆脱。你已经知道答案：C++、Java、Shell脚本、Python、还有其它一大堆的语言和技术，你都理所当然地会去学习。甚至有可能你才仅仅14岁，就已经知道好几种不同的语言。</p>\n<p>问我这样的问题的人可能来自其他行业，或者来自诸如Web开发之类的领域。他们知道HTML是一种类编程语言，而且想尝试构建某些更大型的应用。但我特别希望，当你在问这个问题时，你已经意识到了想要在计算机领域取得成功，你需要掌握自学能力，而且永不停息。</p>\n<p><strong>在这个领域做得越多，我越觉得软件开发比任何行业都更接近于写作。</strong> 我们从来不知道是什么造就了优秀的作者，我们只知道什么时候我们会喜欢某个人的文字。编程不是一种工程，仅需要把东西从入口倒进去，然后再转动手柄。把软件开发看成确定性的，是一个诱人的想法。因为这个想法，人们总想搞出一些工具来帮我们开发出想要的软件。但是我的经验告诉我，事实并非如此——人的重要性远高于流程。而软件是否运行在一部精确的机器上已经越来越不重要了——这犹如测不准原理对人类的影响。</p>\n<p>我的父亲是造房子的，小时候我偶尔会帮忙打下手，放放砖块之类。他和他的木工告诉我，他们是为我好才让我干这些活——这样我就不至于走入这个行业。事实确实是这样。</p>\n<p>我们不妨把软件开发比作盖房子。造房子的人当然不可能完全一样。这些人里面有：混凝土工、屋顶工、管道工、电工、砖瓦工、水泥工、瓦片工、搬运工、粗木工、细木工。当然，还有工头。每个工种都需要相应的技能，这些技能都需要花时间和精力去掌握。<strong>跟软件开发一样，造房子也是一个“建立/推翻”的过程。如果你想很快地获得回报，你可能从搬运工和砖瓦工开始做，这样的话，你无需太多的学习曲线就可以获得回报。当需求很多时，你的工作会很稳固，甚至收入也可能提升——如果没有足够的人手的话。但是，一旦行情不妙，木匠甚至工头就可能把砖瓦工一脚踢开。</strong></p>\n<p>当互联网刚刚兴起时，仅仅是花一点时间学习HTML，你就可以得到一份薪水丰厚的工作。但是当形势惨淡时，对于技能的要求更高了——HTML程序员（就像搬运工和砖瓦工一样）第一个被抛弃了，而拥有更高技能的程序员则留了下来。</p>\n<p>我想说的是： <strong>除非你准备活到老学到老，不然的话，不要进入这个行业！编程看起来似乎是一个高收入而又稳定的工作。但要做到这一点，唯一的途径是：始终让自己更有价值。</strong></p>\n<p>当然，你总能找到例外。总有那么一些人，仅仅学了一门编程语言，就可以胜任留在一个岗位上，而不需要增长他的技能。但他们只是幸免于难而已，他们最终无疑是很脆弱的。为了不让自己变得脆弱，你需要持续的提高自己，通过阅读、加入用户组、参加研讨会…… 你学得越深入，你就越有价值，也就意味着你有更好的职业前景，可以配得上更高的薪水。</p>\n<p><strong>另一个方法是：先大致了解这个领域，找到最适合你的地方。</strong>打个比方：我的兄弟对软件很感兴趣，也入了这行，只不过他的工作是安装、维修、升级电脑。他总是一丝不苟，所以当他把电脑搞好，一定会很完美——不光是软件，连电线都会被仔细地捆好。他总是生意兴隆，远超出他的精力所能及。他甚至都不用担心 .com 泡沫的崩溃。显然他的饭碗不容易被抢走。</p>\n<p>我在高校里待了很久，甚至还在UCLA（加州大学洛杉矶分校）进修博士学位，后来又幸运地终止了。我说“幸运”是因为我不再喜欢呆在学校，而我之前在高校待了那么久，只是因为我很享受它。但我所享受的，基本上是不务正业的东西——艺术和舞蹈课，在校报工作，还有一小撮计算机课程（之所以说计算机课程“不务正业”，是因为我本科是物理专业，研究生才是计算机专业）。虽然我在学术上远谈不上卓越（有意思的是很多当时也许不会接受我这个学生的学校现在却用我的书做教材）。我真的很享受作为学生的日子，当我完成博士课程，也许会以一个教授的身份终老一生。</p>\n<p>但就如现在看到的，我在学校里最大的收获恰恰来自我那些“不务正业”的课程，它们拓展了我的思维，使之超越了“我们已经知道的东西”。<strong>在计算机领域中，你总是为某种目标而编程。你对目标了解得越多，你就做得越好。我遇到过一些欧洲的研究生，他们需要结合其它专业领域来搞编程，他们的论文需要解决这个专业领域的特定的问题。</strong></p>\n<p>了解编程之外的领域，将会极大得提高你解决问题的能力 （就如同多学几种编程语言将极大地提高你的编程技能）。很多时候，我发现仅仅学习计算机专业的学生，比那些（除了计算机之外）拥有其它背景的学生，在思维上有更多的局限性。因为后者有着更严谨的思维，也不那么容易想当然。</p>\n<p>有一次我组织了一次会议，其中一个议题是：理想的应聘者有哪些特征：<br>◇把学习当成生活方式。比如：你应该知道不止一种语言，没有什么比学习一门新语言更能让你开阔眼界了。</p>\n<blockquote>\n<ul>\n<li>知道如何获取知识</li>\n<li>Study prior art</li>\n<li>善用工具</li>\n<li>学会把事情简化</li>\n<li>理解业务</li>\n<li><strong>为自己的错误负责。“我就是这样的”是不能接受的托词。能找到自己的失误。</strong></li>\n<li>成为一个领导者，善于沟通和激励。</li>\n<li>搞清楚你在为谁服务</li>\n<li><strong>没有绝对正确的答案（更好的方法总是存在的）。展示并讨论你的代码，不要带着感情因素——你的代码并不等于你本人。</strong></li>\n<li><strong>明白完美是渐进的</strong></li>\n</ul>\n</blockquote>\n<p>适当尝试一些冒险——尤其是能令人感到害怕的冒险。当你尝试之后，将体会到出乎意料的兴奋。（在冒险的过程中）最好不要刻意去计划某个特定的结果。当你过于注重结果，你往往会错过那些真正有价值的问题。我的冒险往往是这样开始的——“我们先做些试验，看看它会把我们带到什么地方”。</p>\n<p>或许某些人会对我的回答感到失望，并回复我说：“是的，这很有趣也很有用。但我到底应该学什么？C++还是Java？” 我再重复一次：并不是所有的问题都有一个唯一的简单的答案。<strong>问题的关键不在于选择某个编程语言，然后掌握之。问题的关键在于：持续学习，并且很多时候，有不止一个选择。</strong> 相信我所说的，你的生活会更精彩！</p>\n<p>原文出处：<br><a href=\"http://www.artima.com/weblogs/viewpost.jsp?thread=259358\" target=\"_blank\" rel=\"noopener\">http://www.artima.com/weblogs/viewpost.jsp?thread=259358</a></p>\n<hr>\n<h1 id=\"Peter-Norvig：十年学会编程\"><a href=\"#Peter-Norvig：十年学会编程\" class=\"headerlink\" title=\"Peter Norvig：十年学会编程\"></a>Peter Norvig：十年学会编程</h1><p>作者 Peter Norvig 是计算机科学家，Google 的研究总监。<br>在本文中，Peter Norvig会告诉你：为什么急功近利地学习软件开发技术是没效果滴？</p>\n<p>================================</p>\n<h2 id=\"为啥都想速成？\"><a href=\"#为啥都想速成？\" class=\"headerlink\" title=\"为啥都想速成？\"></a>为啥都想速成？</h2><p>随便逛一下书店，你会看到《7天自学Java》等诸如此类的N天甚至N小时学习Visual Basic、Windows、Internet的书。我用亚马逊网站的搜索功能，出版年份选1992年以后，书名关键词是：“天”、“自学”、“教你”，查到248个结果，前78个是计算机类图书，第79个是《30天学孟加拉语》。我用“天”换成“小时”，结果更惊人，有多达253本书，前77本是计算机图书，第78是《24小时自学语法句式》。在前200名中，96%是计算机的书。</p>\n<p>结论就是：要么人们急于学习电脑，要么计算机比其他东西学起来要异常简单。没有任何书是关于几天学习贝多芬或量子物理的，甚至连犬类装扮都没有。费雷森（Felleisen）等人在其著作《如何设计程序》中同意这个趋势，其中提到：“坏设计很简单，笨蛋才用21天学，尽管他们还是真傻。”</p>\n<p>让我们看看《三日学会C++》这个书名意味着什么：</p>\n<p>◇学习：<br><strong>三天内你可能没有时间写出有意义的程序，或者从中积累经验。</strong>你不可能有时间去跟职业编程者一起去理解在C++环境下的状况。简而言之，你没有充足的时间学很多。所以这本书只能说肤浅的知识。正如亚历山大·波普（Alexander Pope）所言：一知半解是很危险的。</p>\n<p>◇C++：<br><strong>三天内你可能学会C++的句法（如果你已经了解其他的语言），但你还不会使用它。</strong>打个比方，假如你是个Basic程序员，你可能写出Basic风格的C++程序，而无法理解C++的真实好处。那要点是什么？艾伦·佩里斯(Alan Perlis)曾经说过：“一门不能影响你编程观点的语言不足学的。”有可能你学了一点点C++（或者诸如Javascript、Flex之类），因为你需要和现成的工具接口以完成手头的任务。这种情况下，你不是在学习如何编程，只是在学习如何完成任务。</p>\n<p>◇三日：<br>不幸地是，这远远不够，下一部分会详细讲。</p>\n<h2 id=\"如何用十年掌握编程\"><a href=\"#如何用十年掌握编程\" class=\"headerlink\" title=\"如何用十年掌握编程\"></a>如何用十年掌握编程</h2><p>研究人员（Bloom (1985), Bryan &amp; Harter (1899), Hayes (1989), Simmon &amp; Chase (1973)）得出结论：<strong>想要在诸多领域达到职业水平需要十年，比如国际象棋，作曲，电报操作，绘画，弹钢琴，游泳，网球以及神经心理学和拓扑学的研究。关键是精心练习，只是一遍一遍地重复是不够的，必须挑战恰好超越你能限的事情，尝试并思考你的表现，并自我矫正。周而复始。这并无捷径！</strong>4岁的音乐奇才莫扎特用了13年才能创作世界级的音乐。另外，披头士乐队似乎在1964年的埃德·苏利文（ Ed Sullivan show）演出中一炮而红，但是他们自从1957年就在利物浦和汉堡的酒吧演出，在取得广泛关注后，第一部重量级作品《佩珀军士》（Sgt. Peppers）是在1967年发行。马尔科姆·格拉德威尔（Malcolm Gladwell）撰文描述了一项针对柏林音乐学院学生的研究，他们被分为尖子，中等和不足三类，并被问到他们练琴的情况：<br>所有三组中的人，开始学琴的年龄大概相差无几，五岁左右。在刚开始的几年，所有人练习量也差不多，一周两三个小时。自八岁开始，实质性变化就有了。那些精英学生开始比其他人练习更多：九岁的时候一周六个小时，十二岁的时候一周八个小时，十四岁的时候一周十六个小时，一直到二十岁的时候一周要超过三十小时。截止到二十岁，在他们的生涯里已经有总计一万小时练琴。仅仅表现可以的那部分学生加起来是八千小时，那些未来的音乐老师有四千小时。</p>\n<p>所以，更确切地说，一万小时，而非十年，是个神奇之数。萨缪尔·约翰逊（Samuel Johnson, 1709-1784）认为还需更长时间：“卓越乃一生之追求，而非其它”。 乔叟（Chaucer, 1340-1400）抱怨道”the lyf so short, the craft so long to lerne.” （生之有限，学也无涯）。希波克拉底（Hippocrates, c. 400BC）因这句话被世人所知：”ars longa, vita brevis”（译注：拉丁语，意为“艺无尽，生有涯”），更长的版本是 “Ars longa, vita brevis, occasio praeceps, experimentum periculosum, iudicium difficile”，翻译成英文就是 “Life is short, (the) craft long, opportunity fleeting, experiment treacherous, judgment difficult.” （生有涯，艺无尽，机遇瞬逝，践行误导，决断不易）。</p>\n<h2 id=\"我的编程成功秘笈是：\"><a href=\"#我的编程成功秘笈是：\" class=\"headerlink\" title=\"我的编程成功秘笈是：\"></a>我的编程成功秘笈是：</h2><blockquote>\n<ul>\n<li><p>首先要对编程感兴趣，能从编程中得到乐趣。一定要让它足够有趣，因为你要保持你的兴趣长达十年。</p>\n</li>\n<li><p><strong>与别的程序员交流；阅读别人的代码——这比看任何书或参加培训课都重要。</strong></p>\n</li>\n<li><p>实践。最好的学习乃实践。俗话说：“编程的至高境界一定要通过充分的实践才能达到，而个人的能力可通过不懈努力获得显著提升。” (p. 366) <strong>“最有效率的学习需要明确的目标，适当的难度，知识回馈，并容许重复或修正错误。”</strong> (p. 20-21) 《实践认知：每日的思维、数学及文化》（Cognition in Practice: Mind, Mathematics, and Culture in Everyday Life） 在这方面可做参考。</p>\n</li>\n<li><p>如果你愿意，花四年学习大学课程（或者再加上读研）。这将给你赢得某些工作机会，并给予你在该领域的深层见解。<strong>但如果你不喜欢学校的学习，你同样可以在工作中获得相似的经验。无论如何，单靠书本是远远不够的。</strong>“学习计算机科学不会让你成为编程专家，如同学习绘画和色彩理论不会让你成为画家一样”。这是埃里克·雷蒙德（Eric Raymond）说的，他是《新黑客字典》（The New Hacker’s Dictionary）的作者。我雇用过的最优秀程序员，只有高中文凭。但他开发过许多伟大软件，有自己的新闻组，通过公司认股赚的钱就让他买下了自己的夜店。</p>\n</li>\n<li><p>和其他程序员一起参与工程项目。在某些项目中担当最优秀程序员，在另一些项目中充当最差劲程序员。<strong>充当领头羊的时候，你要测试你领导一项工程的能力，并用你的视野来激发他人；如果在项目组中垫底，就应该学习其它牛人在做些啥，以及他们不喜欢做的（看他们把哪些活让给你做）。</strong></p>\n</li>\n<li><p>继续别人的工程项目。去理解先前程序员写的程序。<strong>学习如何理解并解决先前程序员没有考虑到的问题。思考你的程序该如何设计以便让之后的程序员更容易维护。</strong></p>\n</li>\n<li><p>至少学6种程序语言。其中包括一种支持类抽象的（Java和C++），一种支持函数抽象的（如Lisp或ML），一种支持语义抽象的（Lisp），一种支援声明规范的（如Prolog或C++模板），还有一种支援协程的（Icon或Scheme），另外一种支持并发的（Sisal）。</p>\n</li>\n<li><p>记住，在“计算机科学”里有“计算机”一词。理解计算机执行你的代码的时候花费的时间。比如：从内存中取一个字（考虑有无缓存未命中情形），连续从磁盘读字，或者在磁盘中定位。</p>\n</li>\n<li><p>参加语言标准化工作。这可能是有关 ANSI C++ 委员会，也可能是决定你编码风格是两格缩进或四格缩进。无论如何，你要知道其他人对语言的喜好程度，有时还要想想他们为什么喜欢这样。</p>\n</li>\n<li><p>知道自己应该在何时脱身于语言标准化</p>\n</li>\n</ul>\n</blockquote>\n<p>所有上述这些，很难通过书本的学习来达到。我头一个孩子出生时，我读了所有的“如何做”（How To）系列的书籍，却依然对育婴毫无头绪。30个月后，我第二个孩子出生，我还需要温习一下那些书吗？绝对不！相反，我完全可以参照个人经验，而结果相当有效。这更让我确信：我的经验胜过那些专家们写的上千页文字。</p>\n<p>弗雷德·布鲁克斯（Fred Brooks）在《没有银弹》（No Silver Bullet）一书给出了寻找顶级设计师的三条建议：</p>\n<blockquote>\n<ul>\n<li>尽早系统地识别出顶级设计师。</li>\n<li>分配一个人作为其职业规划的导师。</li>\n<li><strong>给予机遇让成长中的设计师互相磨砺。</strong></li>\n</ul>\n</blockquote>\n<p>此处假定有部分人已经有成为伟大设计师的潜质，你所需的就是要诱导他们。艾伦·佩里斯（Alan Perlis）一针见血地指出：<strong>“假如人人都可以学雕刻，那就得教米开朗基罗如何不去干雕刻。对于伟大程序员，也是如此。”</strong></p>\n<p>所以，简单地买一本Java书，你或许能找到些有用的东西，但绝不会让你在24小时内甚至24天抑或24月内，成为行家里手。</p>\n<p>原文出处：<br><a href=\"http://norvig.com/21-days.html\" target=\"_blank\" rel=\"noopener\">http://norvig.com/21-days.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>文章目录</strong><br><a href=\"#Bruce-Eckel：编程生涯\">Bruce Eckel：编程生涯</a><br><a href=\"#Peter-Norvig：十年学会编程\">Peter Norvig：十年学会编程</a></p>\n<p>转载自<a href=\"https://program-think.blogspot.com/2012/05/weekly-share-5.html\" target=\"_blank\" rel=\"noopener\">编程随想 - program think</a>关于编程的心态定位，实践方法经典， 对我有所启发的两篇。</p>\n<hr>\n<h1 id=\"Bruce-Eckel：编程生涯\"><a href=\"#Bruce-Eckel：编程生涯\" class=\"headerlink\" title=\"Bruce Eckel：编程生涯\"></a>Bruce Eckel：编程生涯</h1><p>作者 Bruce Eckel 是编程界的大牛，著有大名鼎鼎的《Thinking in C++》和《Thinking in Java》。<br>本文是他对程序员（尤其是新手）的忠告。</p>\n<p>================================</p>\n<p>大家总是问一个错误的问题：“我应该学习C++还是Java？”在本文中，我将告诉大伙儿：对于选择编程生涯真正需要关注的是哪些问题。</p>\n<p>请注意，这篇文章的目标读者并不是那些已经做出自己选择的人。（对于这些人而言）你会继续自己的编程生涯，而不管别人会怎么说。因为它已经渗透到你的血液中，你已经无法摆脱。你已经知道答案：C++、Java、Shell脚本、Python、还有其它一大堆的语言和技术，你都理所当然地会去学习。甚至有可能你才仅仅14岁，就已经知道好几种不同的语言。</p>\n<p>问我这样的问题的人可能来自其他行业，或者来自诸如Web开发之类的领域。他们知道HTML是一种类编程语言，而且想尝试构建某些更大型的应用。但我特别希望，当你在问这个问题时，你已经意识到了想要在计算机领域取得成功，你需要掌握自学能力，而且永不停息。</p>\n<p><strong>在这个领域做得越多，我越觉得软件开发比任何行业都更接近于写作。</strong> 我们从来不知道是什么造就了优秀的作者，我们只知道什么时候我们会喜欢某个人的文字。编程不是一种工程，仅需要把东西从入口倒进去，然后再转动手柄。把软件开发看成确定性的，是一个诱人的想法。因为这个想法，人们总想搞出一些工具来帮我们开发出想要的软件。但是我的经验告诉我，事实并非如此——人的重要性远高于流程。而软件是否运行在一部精确的机器上已经越来越不重要了——这犹如测不准原理对人类的影响。</p>\n<p>我的父亲是造房子的，小时候我偶尔会帮忙打下手，放放砖块之类。他和他的木工告诉我，他们是为我好才让我干这些活——这样我就不至于走入这个行业。事实确实是这样。</p>\n<p>我们不妨把软件开发比作盖房子。造房子的人当然不可能完全一样。这些人里面有：混凝土工、屋顶工、管道工、电工、砖瓦工、水泥工、瓦片工、搬运工、粗木工、细木工。当然，还有工头。每个工种都需要相应的技能，这些技能都需要花时间和精力去掌握。<strong>跟软件开发一样，造房子也是一个“建立/推翻”的过程。如果你想很快地获得回报，你可能从搬运工和砖瓦工开始做，这样的话，你无需太多的学习曲线就可以获得回报。当需求很多时，你的工作会很稳固，甚至收入也可能提升——如果没有足够的人手的话。但是，一旦行情不妙，木匠甚至工头就可能把砖瓦工一脚踢开。</strong></p>\n<p>当互联网刚刚兴起时，仅仅是花一点时间学习HTML，你就可以得到一份薪水丰厚的工作。但是当形势惨淡时，对于技能的要求更高了——HTML程序员（就像搬运工和砖瓦工一样）第一个被抛弃了，而拥有更高技能的程序员则留了下来。</p>\n<p>我想说的是： <strong>除非你准备活到老学到老，不然的话，不要进入这个行业！编程看起来似乎是一个高收入而又稳定的工作。但要做到这一点，唯一的途径是：始终让自己更有价值。</strong></p>\n<p>当然，你总能找到例外。总有那么一些人，仅仅学了一门编程语言，就可以胜任留在一个岗位上，而不需要增长他的技能。但他们只是幸免于难而已，他们最终无疑是很脆弱的。为了不让自己变得脆弱，你需要持续的提高自己，通过阅读、加入用户组、参加研讨会…… 你学得越深入，你就越有价值，也就意味着你有更好的职业前景，可以配得上更高的薪水。</p>\n<p><strong>另一个方法是：先大致了解这个领域，找到最适合你的地方。</strong>打个比方：我的兄弟对软件很感兴趣，也入了这行，只不过他的工作是安装、维修、升级电脑。他总是一丝不苟，所以当他把电脑搞好，一定会很完美——不光是软件，连电线都会被仔细地捆好。他总是生意兴隆，远超出他的精力所能及。他甚至都不用担心 .com 泡沫的崩溃。显然他的饭碗不容易被抢走。</p>\n<p>我在高校里待了很久，甚至还在UCLA（加州大学洛杉矶分校）进修博士学位，后来又幸运地终止了。我说“幸运”是因为我不再喜欢呆在学校，而我之前在高校待了那么久，只是因为我很享受它。但我所享受的，基本上是不务正业的东西——艺术和舞蹈课，在校报工作，还有一小撮计算机课程（之所以说计算机课程“不务正业”，是因为我本科是物理专业，研究生才是计算机专业）。虽然我在学术上远谈不上卓越（有意思的是很多当时也许不会接受我这个学生的学校现在却用我的书做教材）。我真的很享受作为学生的日子，当我完成博士课程，也许会以一个教授的身份终老一生。</p>\n<p>但就如现在看到的，我在学校里最大的收获恰恰来自我那些“不务正业”的课程，它们拓展了我的思维，使之超越了“我们已经知道的东西”。<strong>在计算机领域中，你总是为某种目标而编程。你对目标了解得越多，你就做得越好。我遇到过一些欧洲的研究生，他们需要结合其它专业领域来搞编程，他们的论文需要解决这个专业领域的特定的问题。</strong></p>\n<p>了解编程之外的领域，将会极大得提高你解决问题的能力 （就如同多学几种编程语言将极大地提高你的编程技能）。很多时候，我发现仅仅学习计算机专业的学生，比那些（除了计算机之外）拥有其它背景的学生，在思维上有更多的局限性。因为后者有着更严谨的思维，也不那么容易想当然。</p>\n<p>有一次我组织了一次会议，其中一个议题是：理想的应聘者有哪些特征：<br>◇把学习当成生活方式。比如：你应该知道不止一种语言，没有什么比学习一门新语言更能让你开阔眼界了。</p>\n<blockquote>\n<ul>\n<li>知道如何获取知识</li>\n<li>Study prior art</li>\n<li>善用工具</li>\n<li>学会把事情简化</li>\n<li>理解业务</li>\n<li><strong>为自己的错误负责。“我就是这样的”是不能接受的托词。能找到自己的失误。</strong></li>\n<li>成为一个领导者，善于沟通和激励。</li>\n<li>搞清楚你在为谁服务</li>\n<li><strong>没有绝对正确的答案（更好的方法总是存在的）。展示并讨论你的代码，不要带着感情因素——你的代码并不等于你本人。</strong></li>\n<li><strong>明白完美是渐进的</strong></li>\n</ul>\n</blockquote>\n<p>适当尝试一些冒险——尤其是能令人感到害怕的冒险。当你尝试之后，将体会到出乎意料的兴奋。（在冒险的过程中）最好不要刻意去计划某个特定的结果。当你过于注重结果，你往往会错过那些真正有价值的问题。我的冒险往往是这样开始的——“我们先做些试验，看看它会把我们带到什么地方”。</p>\n<p>或许某些人会对我的回答感到失望，并回复我说：“是的，这很有趣也很有用。但我到底应该学什么？C++还是Java？” 我再重复一次：并不是所有的问题都有一个唯一的简单的答案。<strong>问题的关键不在于选择某个编程语言，然后掌握之。问题的关键在于：持续学习，并且很多时候，有不止一个选择。</strong> 相信我所说的，你的生活会更精彩！</p>\n<p>原文出处：<br><a href=\"http://www.artima.com/weblogs/viewpost.jsp?thread=259358\" target=\"_blank\" rel=\"noopener\">http://www.artima.com/weblogs/viewpost.jsp?thread=259358</a></p>\n<hr>\n<h1 id=\"Peter-Norvig：十年学会编程\"><a href=\"#Peter-Norvig：十年学会编程\" class=\"headerlink\" title=\"Peter Norvig：十年学会编程\"></a>Peter Norvig：十年学会编程</h1><p>作者 Peter Norvig 是计算机科学家，Google 的研究总监。<br>在本文中，Peter Norvig会告诉你：为什么急功近利地学习软件开发技术是没效果滴？</p>\n<p>================================</p>\n<h2 id=\"为啥都想速成？\"><a href=\"#为啥都想速成？\" class=\"headerlink\" title=\"为啥都想速成？\"></a>为啥都想速成？</h2><p>随便逛一下书店，你会看到《7天自学Java》等诸如此类的N天甚至N小时学习Visual Basic、Windows、Internet的书。我用亚马逊网站的搜索功能，出版年份选1992年以后，书名关键词是：“天”、“自学”、“教你”，查到248个结果，前78个是计算机类图书，第79个是《30天学孟加拉语》。我用“天”换成“小时”，结果更惊人，有多达253本书，前77本是计算机图书，第78是《24小时自学语法句式》。在前200名中，96%是计算机的书。</p>\n<p>结论就是：要么人们急于学习电脑，要么计算机比其他东西学起来要异常简单。没有任何书是关于几天学习贝多芬或量子物理的，甚至连犬类装扮都没有。费雷森（Felleisen）等人在其著作《如何设计程序》中同意这个趋势，其中提到：“坏设计很简单，笨蛋才用21天学，尽管他们还是真傻。”</p>\n<p>让我们看看《三日学会C++》这个书名意味着什么：</p>\n<p>◇学习：<br><strong>三天内你可能没有时间写出有意义的程序，或者从中积累经验。</strong>你不可能有时间去跟职业编程者一起去理解在C++环境下的状况。简而言之，你没有充足的时间学很多。所以这本书只能说肤浅的知识。正如亚历山大·波普（Alexander Pope）所言：一知半解是很危险的。</p>\n<p>◇C++：<br><strong>三天内你可能学会C++的句法（如果你已经了解其他的语言），但你还不会使用它。</strong>打个比方，假如你是个Basic程序员，你可能写出Basic风格的C++程序，而无法理解C++的真实好处。那要点是什么？艾伦·佩里斯(Alan Perlis)曾经说过：“一门不能影响你编程观点的语言不足学的。”有可能你学了一点点C++（或者诸如Javascript、Flex之类），因为你需要和现成的工具接口以完成手头的任务。这种情况下，你不是在学习如何编程，只是在学习如何完成任务。</p>\n<p>◇三日：<br>不幸地是，这远远不够，下一部分会详细讲。</p>\n<h2 id=\"如何用十年掌握编程\"><a href=\"#如何用十年掌握编程\" class=\"headerlink\" title=\"如何用十年掌握编程\"></a>如何用十年掌握编程</h2><p>研究人员（Bloom (1985), Bryan &amp; Harter (1899), Hayes (1989), Simmon &amp; Chase (1973)）得出结论：<strong>想要在诸多领域达到职业水平需要十年，比如国际象棋，作曲，电报操作，绘画，弹钢琴，游泳，网球以及神经心理学和拓扑学的研究。关键是精心练习，只是一遍一遍地重复是不够的，必须挑战恰好超越你能限的事情，尝试并思考你的表现，并自我矫正。周而复始。这并无捷径！</strong>4岁的音乐奇才莫扎特用了13年才能创作世界级的音乐。另外，披头士乐队似乎在1964年的埃德·苏利文（ Ed Sullivan show）演出中一炮而红，但是他们自从1957年就在利物浦和汉堡的酒吧演出，在取得广泛关注后，第一部重量级作品《佩珀军士》（Sgt. Peppers）是在1967年发行。马尔科姆·格拉德威尔（Malcolm Gladwell）撰文描述了一项针对柏林音乐学院学生的研究，他们被分为尖子，中等和不足三类，并被问到他们练琴的情况：<br>所有三组中的人，开始学琴的年龄大概相差无几，五岁左右。在刚开始的几年，所有人练习量也差不多，一周两三个小时。自八岁开始，实质性变化就有了。那些精英学生开始比其他人练习更多：九岁的时候一周六个小时，十二岁的时候一周八个小时，十四岁的时候一周十六个小时，一直到二十岁的时候一周要超过三十小时。截止到二十岁，在他们的生涯里已经有总计一万小时练琴。仅仅表现可以的那部分学生加起来是八千小时，那些未来的音乐老师有四千小时。</p>\n<p>所以，更确切地说，一万小时，而非十年，是个神奇之数。萨缪尔·约翰逊（Samuel Johnson, 1709-1784）认为还需更长时间：“卓越乃一生之追求，而非其它”。 乔叟（Chaucer, 1340-1400）抱怨道”the lyf so short, the craft so long to lerne.” （生之有限，学也无涯）。希波克拉底（Hippocrates, c. 400BC）因这句话被世人所知：”ars longa, vita brevis”（译注：拉丁语，意为“艺无尽，生有涯”），更长的版本是 “Ars longa, vita brevis, occasio praeceps, experimentum periculosum, iudicium difficile”，翻译成英文就是 “Life is short, (the) craft long, opportunity fleeting, experiment treacherous, judgment difficult.” （生有涯，艺无尽，机遇瞬逝，践行误导，决断不易）。</p>\n<h2 id=\"我的编程成功秘笈是：\"><a href=\"#我的编程成功秘笈是：\" class=\"headerlink\" title=\"我的编程成功秘笈是：\"></a>我的编程成功秘笈是：</h2><blockquote>\n<ul>\n<li><p>首先要对编程感兴趣，能从编程中得到乐趣。一定要让它足够有趣，因为你要保持你的兴趣长达十年。</p>\n</li>\n<li><p><strong>与别的程序员交流；阅读别人的代码——这比看任何书或参加培训课都重要。</strong></p>\n</li>\n<li><p>实践。最好的学习乃实践。俗话说：“编程的至高境界一定要通过充分的实践才能达到，而个人的能力可通过不懈努力获得显著提升。” (p. 366) <strong>“最有效率的学习需要明确的目标，适当的难度，知识回馈，并容许重复或修正错误。”</strong> (p. 20-21) 《实践认知：每日的思维、数学及文化》（Cognition in Practice: Mind, Mathematics, and Culture in Everyday Life） 在这方面可做参考。</p>\n</li>\n<li><p>如果你愿意，花四年学习大学课程（或者再加上读研）。这将给你赢得某些工作机会，并给予你在该领域的深层见解。<strong>但如果你不喜欢学校的学习，你同样可以在工作中获得相似的经验。无论如何，单靠书本是远远不够的。</strong>“学习计算机科学不会让你成为编程专家，如同学习绘画和色彩理论不会让你成为画家一样”。这是埃里克·雷蒙德（Eric Raymond）说的，他是《新黑客字典》（The New Hacker’s Dictionary）的作者。我雇用过的最优秀程序员，只有高中文凭。但他开发过许多伟大软件，有自己的新闻组，通过公司认股赚的钱就让他买下了自己的夜店。</p>\n</li>\n<li><p>和其他程序员一起参与工程项目。在某些项目中担当最优秀程序员，在另一些项目中充当最差劲程序员。<strong>充当领头羊的时候，你要测试你领导一项工程的能力，并用你的视野来激发他人；如果在项目组中垫底，就应该学习其它牛人在做些啥，以及他们不喜欢做的（看他们把哪些活让给你做）。</strong></p>\n</li>\n<li><p>继续别人的工程项目。去理解先前程序员写的程序。<strong>学习如何理解并解决先前程序员没有考虑到的问题。思考你的程序该如何设计以便让之后的程序员更容易维护。</strong></p>\n</li>\n<li><p>至少学6种程序语言。其中包括一种支持类抽象的（Java和C++），一种支持函数抽象的（如Lisp或ML），一种支持语义抽象的（Lisp），一种支援声明规范的（如Prolog或C++模板），还有一种支援协程的（Icon或Scheme），另外一种支持并发的（Sisal）。</p>\n</li>\n<li><p>记住，在“计算机科学”里有“计算机”一词。理解计算机执行你的代码的时候花费的时间。比如：从内存中取一个字（考虑有无缓存未命中情形），连续从磁盘读字，或者在磁盘中定位。</p>\n</li>\n<li><p>参加语言标准化工作。这可能是有关 ANSI C++ 委员会，也可能是决定你编码风格是两格缩进或四格缩进。无论如何，你要知道其他人对语言的喜好程度，有时还要想想他们为什么喜欢这样。</p>\n</li>\n<li><p>知道自己应该在何时脱身于语言标准化</p>\n</li>\n</ul>\n</blockquote>\n<p>所有上述这些，很难通过书本的学习来达到。我头一个孩子出生时，我读了所有的“如何做”（How To）系列的书籍，却依然对育婴毫无头绪。30个月后，我第二个孩子出生，我还需要温习一下那些书吗？绝对不！相反，我完全可以参照个人经验，而结果相当有效。这更让我确信：我的经验胜过那些专家们写的上千页文字。</p>\n<p>弗雷德·布鲁克斯（Fred Brooks）在《没有银弹》（No Silver Bullet）一书给出了寻找顶级设计师的三条建议：</p>\n<blockquote>\n<ul>\n<li>尽早系统地识别出顶级设计师。</li>\n<li>分配一个人作为其职业规划的导师。</li>\n<li><strong>给予机遇让成长中的设计师互相磨砺。</strong></li>\n</ul>\n</blockquote>\n<p>此处假定有部分人已经有成为伟大设计师的潜质，你所需的就是要诱导他们。艾伦·佩里斯（Alan Perlis）一针见血地指出：<strong>“假如人人都可以学雕刻，那就得教米开朗基罗如何不去干雕刻。对于伟大程序员，也是如此。”</strong></p>\n<p>所以，简单地买一本Java书，你或许能找到些有用的东西，但绝不会让你在24小时内甚至24天抑或24月内，成为行家里手。</p>\n<p>原文出处：<br><a href=\"http://norvig.com/21-days.html\" target=\"_blank\" rel=\"noopener\">http://norvig.com/21-days.html</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjbkfc4cu0000m5dr9d32j9x0","tag_id":"cjbkfc4df0004m5dru815saus","_id":"cjbkfc4dt0009m5dr3idh7qyh"},{"post_id":"cjbkfc4d80002m5drrm5ag95p","tag_id":"cjbkfc4dt0008m5drk46ktc7z","_id":"cjbkfc4e5000em5dr0nboenjf"},{"post_id":"cjbkfc4dk0005m5drhaz8x3mk","tag_id":"cjbkfc4e2000cm5drxah05dbd","_id":"cjbkfc4eb000im5dr9g95n1qe"},{"post_id":"cjbkfc4e8000hm5draam9zbxn","tag_id":"cjbkfc4df0004m5dru815saus","_id":"cjbkfc4ee000lm5dr4fp5mxb5"},{"post_id":"cjbkfc4do0006m5dr2ixn8i35","tag_id":"cjbkfc4e2000cm5drxah05dbd","_id":"cjbkfc4ee000mm5drq1v0jsp1"},{"post_id":"cjbkfc4dr0007m5dr9ige8xmo","tag_id":"cjbkfc4ee000km5drifu09v3s","_id":"cjbkfc4eg000pm5dr0wdshxt9"},{"post_id":"cjbkfc4dr0007m5dr9ige8xmo","tag_id":"cjbkfc4ee000nm5dr3q10m1eu","_id":"cjbkfc4eg000qm5drgvu03nh1"},{"post_id":"cjbkfc4dx000bm5drbypo2rhc","tag_id":"cjbkfc4ef000om5dryf69hgpy","_id":"cjbkfc4eg000sm5dro3a5nb7c"},{"post_id":"cjbkfc4e3000dm5drigub5xhs","tag_id":"cjbkfc4ef000om5dryf69hgpy","_id":"cjbkfc4ei000vm5dr6ddh4x8n"},{"post_id":"cjbkfc4e3000dm5drigub5xhs","tag_id":"cjbkfc4eh000tm5dr06u73cqd","_id":"cjbkfc4ei000wm5drmyudwt1o"},{"post_id":"cjbkfc4e5000fm5drzy0zlm39","tag_id":"cjbkfc4ei000um5drl1f78pze","_id":"cjbkfc4ej000ym5drzy6aftcz"},{"post_id":"cjbkfc4eb000jm5dr428znpor","tag_id":"cjbkfc4ei000xm5drxclq3aav","_id":"cjbkfc4ek0010m5drr3b0m68m"},{"post_id":"cjbkfc4eb000jm5dr428znpor","tag_id":"cjbkfc4ej000zm5dr4zj5mg7r","_id":"cjbkfc4el0011m5dr9gvzm9km"}],"Tag":[{"name":"markdown","_id":"cjbkfc4df0004m5dru815saus"},{"name":"随笔","_id":"cjbkfc4dt0008m5drk46ktc7z"},{"name":"git","_id":"cjbkfc4e2000cm5drxah05dbd"},{"name":"DirectX","_id":"cjbkfc4ee000km5drifu09v3s"},{"name":"Games","_id":"cjbkfc4ee000nm5dr3q10m1eu"},{"name":"hexo","_id":"cjbkfc4ef000om5dryf69hgpy"},{"name":"UTF-8","_id":"cjbkfc4eh000tm5dr06u73cqd"},{"name":"OpenGL","_id":"cjbkfc4ei000um5drl1f78pze"},{"name":"program","_id":"cjbkfc4ei000xm5drxclq3aav"},{"name":"learn","_id":"cjbkfc4ej000zm5dr4zj5mg7r"}]}}